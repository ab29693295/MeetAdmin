{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DllEntryDependency = require(\"./dependencies/DllEntryDependency\");\n\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\nconst DllModuleFactory = require(\"./DllModuleFactory\");\n\nclass DllEntryPlugin {\n  constructor(context, entries, name) {\n    this.context = context;\n    this.entries = entries;\n    this.name = name;\n  }\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"DllEntryPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      const dllModuleFactory = new DllModuleFactory();\n      compilation.dependencyFactories.set(DllEntryDependency, dllModuleFactory);\n      compilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\n    });\n    compiler.hooks.make.tapAsync(\"DllEntryPlugin\", (compilation, callback) => {\n      compilation.addEntry(this.context, new DllEntryDependency(this.entries.map((e, idx) => {\n        const dep = new SingleEntryDependency(e);\n        dep.loc = {\n          name: this.name,\n          index: idx\n        };\n        return dep;\n      }), this.name), this.name, callback);\n    });\n  }\n\n}\n\nmodule.exports = DllEntryPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/DllEntryPlugin.js"],"names":["DllEntryDependency","require","SingleEntryDependency","DllModuleFactory","DllEntryPlugin","constructor","context","entries","name","apply","compiler","hooks","compilation","tap","normalModuleFactory","dllModuleFactory","dependencyFactories","set","make","tapAsync","callback","addEntry","map","e","idx","dep","loc","index","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,mCAAD,CAAlC;;AACA,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,sCAAD,CAArC;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAAhC;;AAEA,MAAMG,cAAN,CAAqB;AACpBC,EAAAA,WAAW,CAACC,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AACnC,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,gBADD,EAEC,CAACD,WAAD,EAAc;AAAEE,MAAAA;AAAF,KAAd,KAA0C;AACzC,YAAMC,gBAAgB,GAAG,IAAIZ,gBAAJ,EAAzB;AACAS,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCjB,kBADD,EAECe,gBAFD;AAIAH,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCf,qBADD,EAECY,mBAFD;AAIA,KAZF;AAcAJ,IAAAA,QAAQ,CAACC,KAAT,CAAeO,IAAf,CAAoBC,QAApB,CAA6B,gBAA7B,EAA+C,CAACP,WAAD,EAAcQ,QAAd,KAA2B;AACzER,MAAAA,WAAW,CAACS,QAAZ,CACC,KAAKf,OADN,EAEC,IAAIN,kBAAJ,CACC,KAAKO,OAAL,CAAae,GAAb,CAAiB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAC5B,cAAMC,GAAG,GAAG,IAAIvB,qBAAJ,CAA0BqB,CAA1B,CAAZ;AACAE,QAAAA,GAAG,CAACC,GAAJ,GAAU;AACTlB,UAAAA,IAAI,EAAE,KAAKA,IADF;AAETmB,UAAAA,KAAK,EAAEH;AAFE,SAAV;AAIA,eAAOC,GAAP;AACA,OAPD,CADD,EASC,KAAKjB,IATN,CAFD,EAaC,KAAKA,IAbN,EAcCY,QAdD;AAgBA,KAjBD;AAkBA;;AAxCmB;;AA2CrBQ,MAAM,CAACC,OAAP,GAAiBzB,cAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DllEntryDependency = require(\"./dependencies/DllEntryDependency\");\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\nconst DllModuleFactory = require(\"./DllModuleFactory\");\n\nclass DllEntryPlugin {\n\tconstructor(context, entries, name) {\n\t\tthis.context = context;\n\t\tthis.entries = entries;\n\t\tthis.name = name;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DllEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst dllModuleFactory = new DllModuleFactory();\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tDllEntryDependency,\n\t\t\t\t\tdllModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tSingleEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.make.tapAsync(\"DllEntryPlugin\", (compilation, callback) => {\n\t\t\tcompilation.addEntry(\n\t\t\t\tthis.context,\n\t\t\t\tnew DllEntryDependency(\n\t\t\t\t\tthis.entries.map((e, idx) => {\n\t\t\t\t\t\tconst dep = new SingleEntryDependency(e);\n\t\t\t\t\t\tdep.loc = {\n\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\tindex: idx\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn dep;\n\t\t\t\t\t}),\n\t\t\t\t\tthis.name\n\t\t\t\t),\n\t\t\t\tthis.name,\n\t\t\t\tcallback\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = DllEntryPlugin;\n"]},"metadata":{},"sourceType":"script"}