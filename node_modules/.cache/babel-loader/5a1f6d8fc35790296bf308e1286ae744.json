{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequestShortener = require(\"./RequestShortener\");\n\nconst SizeFormatHelpers = require(\"./SizeFormatHelpers\");\n\nconst formatLocation = require(\"./formatLocation\");\n\nconst identifierUtils = require(\"./util/identifier\");\n\nconst compareLocations = require(\"./compareLocations\");\n\nconst {\n  LogType\n} = require(\"./logging/Logger\");\n\nconst optionsOrFallback = (...args) => {\n  let optionValues = [];\n  optionValues.push(...args);\n  return optionValues.find(optionValue => optionValue !== undefined);\n};\n\nconst compareId = (a, b) => {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\n\nclass Stats {\n  constructor(compilation) {\n    this.compilation = compilation;\n    this.hash = compilation.hash;\n    this.startTime = undefined;\n    this.endTime = undefined;\n  }\n\n  static filterWarnings(warnings, warningsFilter) {\n    // we dont have anything to filter so all warnings can be shown\n    if (!warningsFilter) {\n      return warnings;\n    } // create a chain of filters\n    // if they return \"true\" a warning should be suppressed\n\n\n    const normalizedWarningsFilters = [].concat(warningsFilter).map(filter => {\n      if (typeof filter === \"string\") {\n        return warning => warning.includes(filter);\n      }\n\n      if (filter instanceof RegExp) {\n        return warning => filter.test(warning);\n      }\n\n      if (typeof filter === \"function\") {\n        return filter;\n      }\n\n      throw new Error(`Can only filter warnings with Strings or RegExps. (Given: ${filter})`);\n    });\n    return warnings.filter(warning => {\n      return !normalizedWarningsFilters.some(check => check(warning));\n    });\n  }\n\n  formatFilePath(filePath) {\n    const OPTIONS_REGEXP = /^(\\s|\\S)*!/;\n    return filePath.includes(\"!\") ? `${filePath.replace(OPTIONS_REGEXP, \"\")} (${filePath})` : `${filePath}`;\n  }\n\n  hasWarnings() {\n    return this.compilation.warnings.length > 0 || this.compilation.children.some(child => child.getStats().hasWarnings());\n  }\n\n  hasErrors() {\n    return this.compilation.errors.length > 0 || this.compilation.children.some(child => child.getStats().hasErrors());\n  } // remove a prefixed \"!\" that can be specified to reverse sort order\n\n\n  normalizeFieldKey(field) {\n    if (field[0] === \"!\") {\n      return field.substr(1);\n    }\n\n    return field;\n  } // if a field is prefixed by a \"!\" reverse sort order\n\n\n  sortOrderRegular(field) {\n    if (field[0] === \"!\") {\n      return false;\n    }\n\n    return true;\n  }\n\n  toJson(options, forToString) {\n    if (typeof options === \"boolean\" || typeof options === \"string\") {\n      options = Stats.presetToOptions(options);\n    } else if (!options) {\n      options = {};\n    }\n\n    const optionOrLocalFallback = (v, def) => v !== undefined ? v : options.all !== undefined ? options.all : def;\n\n    const testAgainstGivenOption = item => {\n      if (typeof item === \"string\") {\n        const regExp = new RegExp(`[\\\\\\\\/]${item.replace( // eslint-disable-next-line no-useless-escape\n        /[-[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\")}([\\\\\\\\/]|$|!|\\\\?)`);\n        return ident => regExp.test(ident);\n      }\n\n      if (item && typeof item === \"object\" && typeof item.test === \"function\") {\n        return ident => item.test(ident);\n      }\n\n      if (typeof item === \"function\") {\n        return item;\n      }\n\n      if (typeof item === \"boolean\") {\n        return () => item;\n      }\n    };\n\n    const compilation = this.compilation;\n    const context = optionsOrFallback(options.context, compilation.compiler.context);\n    const requestShortener = compilation.compiler.context === context ? compilation.requestShortener : new RequestShortener(context);\n    const showPerformance = optionOrLocalFallback(options.performance, true);\n    const showHash = optionOrLocalFallback(options.hash, true);\n    const showEnv = optionOrLocalFallback(options.env, false);\n    const showVersion = optionOrLocalFallback(options.version, true);\n    const showTimings = optionOrLocalFallback(options.timings, true);\n    const showBuiltAt = optionOrLocalFallback(options.builtAt, true);\n    const showAssets = optionOrLocalFallback(options.assets, true);\n    const showEntrypoints = optionOrLocalFallback(options.entrypoints, true);\n    const showChunkGroups = optionOrLocalFallback(options.chunkGroups, !forToString);\n    const showChunks = optionOrLocalFallback(options.chunks, !forToString);\n    const showChunkModules = optionOrLocalFallback(options.chunkModules, true);\n    const showChunkOrigins = optionOrLocalFallback(options.chunkOrigins, !forToString);\n    const showModules = optionOrLocalFallback(options.modules, true);\n    const showNestedModules = optionOrLocalFallback(options.nestedModules, true);\n    const showModuleAssets = optionOrLocalFallback(options.moduleAssets, !forToString);\n    const showDepth = optionOrLocalFallback(options.depth, !forToString);\n    const showCachedModules = optionOrLocalFallback(options.cached, true);\n    const showCachedAssets = optionOrLocalFallback(options.cachedAssets, true);\n    const showReasons = optionOrLocalFallback(options.reasons, !forToString);\n    const showUsedExports = optionOrLocalFallback(options.usedExports, !forToString);\n    const showProvidedExports = optionOrLocalFallback(options.providedExports, !forToString);\n    const showOptimizationBailout = optionOrLocalFallback(options.optimizationBailout, !forToString);\n    const showChildren = optionOrLocalFallback(options.children, true);\n    const showSource = optionOrLocalFallback(options.source, !forToString);\n    const showModuleTrace = optionOrLocalFallback(options.moduleTrace, true);\n    const showErrors = optionOrLocalFallback(options.errors, true);\n    const showErrorDetails = optionOrLocalFallback(options.errorDetails, !forToString);\n    const showWarnings = optionOrLocalFallback(options.warnings, true);\n    const warningsFilter = optionsOrFallback(options.warningsFilter, null);\n    const showPublicPath = optionOrLocalFallback(options.publicPath, !forToString);\n    const showLogging = optionOrLocalFallback(options.logging, forToString ? \"info\" : true);\n    const showLoggingTrace = optionOrLocalFallback(options.loggingTrace, !forToString);\n    const loggingDebug = [].concat(optionsOrFallback(options.loggingDebug, [])).map(testAgainstGivenOption);\n    const excludeModules = [].concat(optionsOrFallback(options.excludeModules, options.exclude, [])).map(testAgainstGivenOption);\n    const excludeAssets = [].concat(optionsOrFallback(options.excludeAssets, [])).map(testAgainstGivenOption);\n    const maxModules = optionsOrFallback(options.maxModules, forToString ? 15 : Infinity);\n    const sortModules = optionsOrFallback(options.modulesSort, \"id\");\n    const sortChunks = optionsOrFallback(options.chunksSort, \"id\");\n    const sortAssets = optionsOrFallback(options.assetsSort, \"\");\n    const showOutputPath = optionOrLocalFallback(options.outputPath, !forToString);\n\n    if (!showCachedModules) {\n      excludeModules.push((ident, module) => !module.built);\n    }\n\n    const createModuleFilter = () => {\n      let i = 0;\n      return module => {\n        if (excludeModules.length > 0) {\n          const ident = requestShortener.shorten(module.resource);\n          const excluded = excludeModules.some(fn => fn(ident, module));\n          if (excluded) return false;\n        }\n\n        const result = i < maxModules;\n        i++;\n        return result;\n      };\n    };\n\n    const createAssetFilter = () => {\n      return asset => {\n        if (excludeAssets.length > 0) {\n          const ident = asset.name;\n          const excluded = excludeAssets.some(fn => fn(ident, asset));\n          if (excluded) return false;\n        }\n\n        return showCachedAssets || asset.emitted;\n      };\n    };\n\n    const sortByFieldAndOrder = (fieldKey, a, b) => {\n      if (a[fieldKey] === null && b[fieldKey] === null) return 0;\n      if (a[fieldKey] === null) return 1;\n      if (b[fieldKey] === null) return -1;\n      if (a[fieldKey] === b[fieldKey]) return 0;\n      if (typeof a[fieldKey] !== typeof b[fieldKey]) return typeof a[fieldKey] < typeof b[fieldKey] ? -1 : 1;\n      return a[fieldKey] < b[fieldKey] ? -1 : 1;\n    };\n\n    const sortByField = (field, originalArray) => {\n      const originalMap = originalArray.reduce((map, v, i) => {\n        map.set(v, i);\n        return map;\n      }, new Map());\n      return (a, b) => {\n        if (field) {\n          const fieldKey = this.normalizeFieldKey(field); // if a field is prefixed with a \"!\" the sort is reversed!\n\n          const sortIsRegular = this.sortOrderRegular(field);\n          const cmp = sortByFieldAndOrder(fieldKey, sortIsRegular ? a : b, sortIsRegular ? b : a);\n          if (cmp) return cmp;\n        }\n\n        return originalMap.get(a) - originalMap.get(b);\n      };\n    };\n\n    const formatError = e => {\n      let text = \"\";\n\n      if (typeof e === \"string\") {\n        e = {\n          message: e\n        };\n      }\n\n      if (e.chunk) {\n        text += `chunk ${e.chunk.name || e.chunk.id}${e.chunk.hasRuntime() ? \" [entry]\" : e.chunk.canBeInitial() ? \" [initial]\" : \"\"}\\n`;\n      }\n\n      if (e.file) {\n        text += `${e.file}\\n`;\n      }\n\n      if (e.module && e.module.readableIdentifier && typeof e.module.readableIdentifier === \"function\") {\n        text += this.formatFilePath(e.module.readableIdentifier(requestShortener));\n\n        if (typeof e.loc === \"object\") {\n          const locInfo = formatLocation(e.loc);\n          if (locInfo) text += ` ${locInfo}`;\n        }\n\n        text += \"\\n\";\n      }\n\n      text += e.message;\n\n      if (showErrorDetails && e.details) {\n        text += `\\n${e.details}`;\n      }\n\n      if (showErrorDetails && e.missing) {\n        text += e.missing.map(item => `\\n[${item}]`).join(\"\");\n      }\n\n      if (showModuleTrace && e.origin) {\n        text += `\\n @ ${this.formatFilePath(e.origin.readableIdentifier(requestShortener))}`;\n\n        if (typeof e.originLoc === \"object\") {\n          const locInfo = formatLocation(e.originLoc);\n          if (locInfo) text += ` ${locInfo}`;\n        }\n\n        if (e.dependencies) {\n          for (const dep of e.dependencies) {\n            if (!dep.loc) continue;\n            if (typeof dep.loc === \"string\") continue;\n            const locInfo = formatLocation(dep.loc);\n            if (!locInfo) continue;\n            text += ` ${locInfo}`;\n          }\n        }\n\n        let current = e.origin;\n\n        while (current.issuer) {\n          current = current.issuer;\n          text += `\\n @ ${current.readableIdentifier(requestShortener)}`;\n        }\n      }\n\n      return text;\n    };\n\n    const obj = {\n      errors: compilation.errors.map(formatError),\n      warnings: Stats.filterWarnings(compilation.warnings.map(formatError), warningsFilter)\n    }; //We just hint other renderers since actually omitting\n    //errors/warnings from the JSON would be kind of weird.\n\n    Object.defineProperty(obj, \"_showWarnings\", {\n      value: showWarnings,\n      enumerable: false\n    });\n    Object.defineProperty(obj, \"_showErrors\", {\n      value: showErrors,\n      enumerable: false\n    });\n\n    if (showVersion) {\n      obj.version = require(\"../package.json\").version;\n    }\n\n    if (showHash) obj.hash = this.hash;\n\n    if (showTimings && this.startTime && this.endTime) {\n      obj.time = this.endTime - this.startTime;\n    }\n\n    if (showBuiltAt && this.endTime) {\n      obj.builtAt = this.endTime;\n    }\n\n    if (showEnv && options._env) {\n      obj.env = options._env;\n    }\n\n    if (compilation.needAdditionalPass) {\n      obj.needAdditionalPass = true;\n    }\n\n    if (showPublicPath) {\n      obj.publicPath = this.compilation.mainTemplate.getPublicPath({\n        hash: this.compilation.hash\n      });\n    }\n\n    if (showOutputPath) {\n      obj.outputPath = this.compilation.mainTemplate.outputOptions.path;\n    }\n\n    if (showAssets) {\n      const assetsByFile = {};\n      const compilationAssets = compilation.getAssets().sort((a, b) => a.name < b.name ? -1 : 1);\n      obj.assetsByChunkName = {};\n      obj.assets = compilationAssets.map(({\n        name,\n        source,\n        info\n      }) => {\n        const obj = {\n          name,\n          size: source.size(),\n          chunks: [],\n          chunkNames: [],\n          info,\n          // TODO webpack 5: remove .emitted\n          emitted: source.emitted || compilation.emittedAssets.has(name)\n        };\n\n        if (showPerformance) {\n          obj.isOverSizeLimit = source.isOverSizeLimit;\n        }\n\n        assetsByFile[name] = obj;\n        return obj;\n      }).filter(createAssetFilter());\n      obj.filteredAssets = compilationAssets.length - obj.assets.length;\n\n      for (const chunk of compilation.chunks) {\n        for (const asset of chunk.files) {\n          if (assetsByFile[asset]) {\n            for (const id of chunk.ids) {\n              assetsByFile[asset].chunks.push(id);\n            }\n\n            if (chunk.name) {\n              assetsByFile[asset].chunkNames.push(chunk.name);\n\n              if (obj.assetsByChunkName[chunk.name]) {\n                obj.assetsByChunkName[chunk.name] = [].concat(obj.assetsByChunkName[chunk.name]).concat([asset]);\n              } else {\n                obj.assetsByChunkName[chunk.name] = asset;\n              }\n            }\n          }\n        }\n      }\n\n      obj.assets.sort(sortByField(sortAssets, obj.assets));\n    }\n\n    const fnChunkGroup = groupMap => {\n      const obj = {};\n\n      for (const keyValuePair of groupMap) {\n        const name = keyValuePair[0];\n        const cg = keyValuePair[1];\n        const children = cg.getChildrenByOrders();\n        obj[name] = {\n          chunks: cg.chunks.map(c => c.id),\n          assets: cg.chunks.reduce((array, c) => array.concat(c.files || []), []),\n          children: Object.keys(children).reduce((obj, key) => {\n            const groups = children[key];\n            obj[key] = groups.map(group => ({\n              name: group.name,\n              chunks: group.chunks.map(c => c.id),\n              assets: group.chunks.reduce((array, c) => array.concat(c.files || []), [])\n            }));\n            return obj;\n          }, Object.create(null)),\n          childAssets: Object.keys(children).reduce((obj, key) => {\n            const groups = children[key];\n            obj[key] = Array.from(groups.reduce((set, group) => {\n              for (const chunk of group.chunks) {\n                for (const asset of chunk.files) {\n                  set.add(asset);\n                }\n              }\n\n              return set;\n            }, new Set()));\n            return obj;\n          }, Object.create(null))\n        };\n\n        if (showPerformance) {\n          obj[name].isOverSizeLimit = cg.isOverSizeLimit;\n        }\n      }\n\n      return obj;\n    };\n\n    if (showEntrypoints) {\n      obj.entrypoints = fnChunkGroup(compilation.entrypoints);\n    }\n\n    if (showChunkGroups) {\n      obj.namedChunkGroups = fnChunkGroup(compilation.namedChunkGroups);\n    }\n\n    const fnModule = module => {\n      const path = [];\n      let current = module;\n\n      while (current.issuer) {\n        path.push(current = current.issuer);\n      }\n\n      path.reverse();\n      const obj = {\n        id: module.id,\n        identifier: module.identifier(),\n        name: module.readableIdentifier(requestShortener),\n        index: module.index,\n        index2: module.index2,\n        size: module.size(),\n        cacheable: module.buildInfo.cacheable,\n        built: !!module.built,\n        optional: module.optional,\n        prefetched: module.prefetched,\n        chunks: Array.from(module.chunksIterable, chunk => chunk.id),\n        issuer: module.issuer && module.issuer.identifier(),\n        issuerId: module.issuer && module.issuer.id,\n        issuerName: module.issuer && module.issuer.readableIdentifier(requestShortener),\n        issuerPath: module.issuer && path.map(module => ({\n          id: module.id,\n          identifier: module.identifier(),\n          name: module.readableIdentifier(requestShortener),\n          profile: module.profile\n        })),\n        profile: module.profile,\n        failed: !!module.error,\n        errors: module.errors ? module.errors.length : 0,\n        warnings: module.warnings ? module.warnings.length : 0\n      };\n\n      if (showModuleAssets) {\n        obj.assets = Object.keys(module.buildInfo.assets || {});\n      }\n\n      if (showReasons) {\n        obj.reasons = module.reasons.sort((a, b) => {\n          if (a.module && !b.module) return -1;\n          if (!a.module && b.module) return 1;\n\n          if (a.module && b.module) {\n            const cmp = compareId(a.module.id, b.module.id);\n            if (cmp) return cmp;\n          }\n\n          if (a.dependency && !b.dependency) return -1;\n          if (!a.dependency && b.dependency) return 1;\n\n          if (a.dependency && b.dependency) {\n            const cmp = compareLocations(a.dependency.loc, b.dependency.loc);\n            if (cmp) return cmp;\n            if (a.dependency.type < b.dependency.type) return -1;\n            if (a.dependency.type > b.dependency.type) return 1;\n          }\n\n          return 0;\n        }).map(reason => {\n          const obj = {\n            moduleId: reason.module ? reason.module.id : null,\n            moduleIdentifier: reason.module ? reason.module.identifier() : null,\n            module: reason.module ? reason.module.readableIdentifier(requestShortener) : null,\n            moduleName: reason.module ? reason.module.readableIdentifier(requestShortener) : null,\n            type: reason.dependency ? reason.dependency.type : null,\n            explanation: reason.explanation,\n            userRequest: reason.dependency ? reason.dependency.userRequest : null\n          };\n\n          if (reason.dependency) {\n            const locInfo = formatLocation(reason.dependency.loc);\n\n            if (locInfo) {\n              obj.loc = locInfo;\n            }\n          }\n\n          return obj;\n        });\n      }\n\n      if (showUsedExports) {\n        if (module.used === true) {\n          obj.usedExports = module.usedExports;\n        } else if (module.used === false) {\n          obj.usedExports = false;\n        }\n      }\n\n      if (showProvidedExports) {\n        obj.providedExports = Array.isArray(module.buildMeta.providedExports) ? module.buildMeta.providedExports : null;\n      }\n\n      if (showOptimizationBailout) {\n        obj.optimizationBailout = module.optimizationBailout.map(item => {\n          if (typeof item === \"function\") return item(requestShortener);\n          return item;\n        });\n      }\n\n      if (showDepth) {\n        obj.depth = module.depth;\n      }\n\n      if (showNestedModules) {\n        if (module.modules) {\n          const modules = module.modules;\n          obj.modules = modules.sort(sortByField(\"depth\", modules)).filter(createModuleFilter()).map(fnModule);\n          obj.filteredModules = modules.length - obj.modules.length;\n          obj.modules.sort(sortByField(sortModules, obj.modules));\n        }\n      }\n\n      if (showSource && module._source) {\n        obj.source = module._source.source();\n      }\n\n      return obj;\n    };\n\n    if (showChunks) {\n      obj.chunks = compilation.chunks.map(chunk => {\n        const parents = new Set();\n        const children = new Set();\n        const siblings = new Set();\n        const childIdByOrder = chunk.getChildIdsByOrders();\n\n        for (const chunkGroup of chunk.groupsIterable) {\n          for (const parentGroup of chunkGroup.parentsIterable) {\n            for (const chunk of parentGroup.chunks) {\n              parents.add(chunk.id);\n            }\n          }\n\n          for (const childGroup of chunkGroup.childrenIterable) {\n            for (const chunk of childGroup.chunks) {\n              children.add(chunk.id);\n            }\n          }\n\n          for (const sibling of chunkGroup.chunks) {\n            if (sibling !== chunk) siblings.add(sibling.id);\n          }\n        }\n\n        const obj = {\n          id: chunk.id,\n          rendered: chunk.rendered,\n          initial: chunk.canBeInitial(),\n          entry: chunk.hasRuntime(),\n          recorded: chunk.recorded,\n          reason: chunk.chunkReason,\n          size: chunk.modulesSize(),\n          names: chunk.name ? [chunk.name] : [],\n          files: chunk.files.slice(),\n          hash: chunk.renderedHash,\n          siblings: Array.from(siblings).sort(compareId),\n          parents: Array.from(parents).sort(compareId),\n          children: Array.from(children).sort(compareId),\n          childrenByOrder: childIdByOrder\n        };\n\n        if (showChunkModules) {\n          const modules = chunk.getModules();\n          obj.modules = modules.slice().sort(sortByField(\"depth\", modules)).filter(createModuleFilter()).map(fnModule);\n          obj.filteredModules = chunk.getNumberOfModules() - obj.modules.length;\n          obj.modules.sort(sortByField(sortModules, obj.modules));\n        }\n\n        if (showChunkOrigins) {\n          obj.origins = Array.from(chunk.groupsIterable, g => g.origins).reduce((a, b) => a.concat(b), []).map(origin => ({\n            moduleId: origin.module ? origin.module.id : undefined,\n            module: origin.module ? origin.module.identifier() : \"\",\n            moduleIdentifier: origin.module ? origin.module.identifier() : \"\",\n            moduleName: origin.module ? origin.module.readableIdentifier(requestShortener) : \"\",\n            loc: formatLocation(origin.loc),\n            request: origin.request,\n            reasons: origin.reasons || []\n          })).sort((a, b) => {\n            const cmp1 = compareId(a.moduleId, b.moduleId);\n            if (cmp1) return cmp1;\n            const cmp2 = compareId(a.loc, b.loc);\n            if (cmp2) return cmp2;\n            const cmp3 = compareId(a.request, b.request);\n            if (cmp3) return cmp3;\n            return 0;\n          });\n        }\n\n        return obj;\n      });\n      obj.chunks.sort(sortByField(sortChunks, obj.chunks));\n    }\n\n    if (showModules) {\n      obj.modules = compilation.modules.slice().sort(sortByField(\"depth\", compilation.modules)).filter(createModuleFilter()).map(fnModule);\n      obj.filteredModules = compilation.modules.length - obj.modules.length;\n      obj.modules.sort(sortByField(sortModules, obj.modules));\n    }\n\n    if (showLogging) {\n      const util = require(\"util\");\n\n      obj.logging = {};\n      let acceptedTypes;\n      let collapsedGroups = false;\n\n      switch (showLogging) {\n        case \"none\":\n          acceptedTypes = new Set([]);\n          break;\n\n        case \"error\":\n          acceptedTypes = new Set([LogType.error]);\n          break;\n\n        case \"warn\":\n          acceptedTypes = new Set([LogType.error, LogType.warn]);\n          break;\n\n        case \"info\":\n          acceptedTypes = new Set([LogType.error, LogType.warn, LogType.info]);\n          break;\n\n        case true:\n        case \"log\":\n          acceptedTypes = new Set([LogType.error, LogType.warn, LogType.info, LogType.log, LogType.group, LogType.groupEnd, LogType.groupCollapsed, LogType.clear]);\n          break;\n\n        case \"verbose\":\n          acceptedTypes = new Set([LogType.error, LogType.warn, LogType.info, LogType.log, LogType.group, LogType.groupEnd, LogType.groupCollapsed, LogType.profile, LogType.profileEnd, LogType.time, LogType.status, LogType.clear]);\n          collapsedGroups = true;\n          break;\n      }\n\n      for (const [origin, logEntries] of compilation.logging) {\n        const debugMode = loggingDebug.some(fn => fn(origin));\n        let collapseCounter = 0;\n        let processedLogEntries = logEntries;\n\n        if (!debugMode) {\n          processedLogEntries = processedLogEntries.filter(entry => {\n            if (!acceptedTypes.has(entry.type)) return false;\n\n            if (!collapsedGroups) {\n              switch (entry.type) {\n                case LogType.groupCollapsed:\n                  collapseCounter++;\n                  return collapseCounter === 1;\n\n                case LogType.group:\n                  if (collapseCounter > 0) collapseCounter++;\n                  return collapseCounter === 0;\n\n                case LogType.groupEnd:\n                  if (collapseCounter > 0) {\n                    collapseCounter--;\n                    return false;\n                  }\n\n                  return true;\n\n                default:\n                  return collapseCounter === 0;\n              }\n            }\n\n            return true;\n          });\n        }\n\n        processedLogEntries = processedLogEntries.map(entry => {\n          let message = undefined;\n\n          if (entry.type === LogType.time) {\n            message = `${entry.args[0]}: ${entry.args[1] * 1000 + entry.args[2] / 1000000}ms`;\n          } else if (entry.args && entry.args.length > 0) {\n            message = util.format(entry.args[0], ...entry.args.slice(1));\n          }\n\n          return {\n            type: (debugMode || collapsedGroups) && entry.type === LogType.groupCollapsed ? LogType.group : entry.type,\n            message,\n            trace: showLoggingTrace && entry.trace ? entry.trace : undefined\n          };\n        });\n        let name = identifierUtils.makePathsRelative(context, origin, compilation.cache).replace(/\\|/g, \" \");\n\n        if (name in obj.logging) {\n          let i = 1;\n\n          while (`${name}#${i}` in obj.logging) {\n            i++;\n          }\n\n          name = `${name}#${i}`;\n        }\n\n        obj.logging[name] = {\n          entries: processedLogEntries,\n          filteredEntries: logEntries.length - processedLogEntries.length,\n          debug: debugMode\n        };\n      }\n    }\n\n    if (showChildren) {\n      obj.children = compilation.children.map((child, idx) => {\n        const childOptions = Stats.getChildOptions(options, idx);\n        const obj = new Stats(child).toJson(childOptions, forToString);\n        delete obj.hash;\n        delete obj.version;\n\n        if (child.name) {\n          obj.name = identifierUtils.makePathsRelative(context, child.name, compilation.cache);\n        }\n\n        return obj;\n      });\n    }\n\n    return obj;\n  }\n\n  toString(options) {\n    if (typeof options === \"boolean\" || typeof options === \"string\") {\n      options = Stats.presetToOptions(options);\n    } else if (!options) {\n      options = {};\n    }\n\n    const useColors = optionsOrFallback(options.colors, false);\n    const obj = this.toJson(options, true);\n    return Stats.jsonToString(obj, useColors);\n  }\n\n  static jsonToString(obj, useColors) {\n    const buf = [];\n    const defaultColors = {\n      bold: \"\\u001b[1m\",\n      yellow: \"\\u001b[1m\\u001b[33m\",\n      red: \"\\u001b[1m\\u001b[31m\",\n      green: \"\\u001b[1m\\u001b[32m\",\n      cyan: \"\\u001b[1m\\u001b[36m\",\n      magenta: \"\\u001b[1m\\u001b[35m\"\n    };\n    const colors = Object.keys(defaultColors).reduce((obj, color) => {\n      obj[color] = str => {\n        if (useColors) {\n          buf.push(useColors === true || useColors[color] === undefined ? defaultColors[color] : useColors[color]);\n        }\n\n        buf.push(str);\n\n        if (useColors) {\n          buf.push(\"\\u001b[39m\\u001b[22m\");\n        }\n      };\n\n      return obj;\n    }, {\n      normal: str => buf.push(str)\n    });\n\n    const coloredTime = time => {\n      let times = [800, 400, 200, 100];\n\n      if (obj.time) {\n        times = [obj.time / 2, obj.time / 4, obj.time / 8, obj.time / 16];\n      }\n\n      if (time < times[3]) colors.normal(`${time}ms`);else if (time < times[2]) colors.bold(`${time}ms`);else if (time < times[1]) colors.green(`${time}ms`);else if (time < times[0]) colors.yellow(`${time}ms`);else colors.red(`${time}ms`);\n    };\n\n    const newline = () => buf.push(\"\\n\");\n\n    const getText = (arr, row, col) => {\n      return arr[row][col].value;\n    };\n\n    const table = (array, align, splitter) => {\n      const rows = array.length;\n      const cols = array[0].length;\n      const colSizes = new Array(cols);\n\n      for (let col = 0; col < cols; col++) {\n        colSizes[col] = 0;\n      }\n\n      for (let row = 0; row < rows; row++) {\n        for (let col = 0; col < cols; col++) {\n          const value = `${getText(array, row, col)}`;\n\n          if (value.length > colSizes[col]) {\n            colSizes[col] = value.length;\n          }\n        }\n      }\n\n      for (let row = 0; row < rows; row++) {\n        for (let col = 0; col < cols; col++) {\n          const format = array[row][col].color;\n          const value = `${getText(array, row, col)}`;\n          let l = value.length;\n\n          if (align[col] === \"l\") {\n            format(value);\n          }\n\n          for (; l < colSizes[col] && col !== cols - 1; l++) {\n            colors.normal(\" \");\n          }\n\n          if (align[col] === \"r\") {\n            format(value);\n          }\n\n          if (col + 1 < cols && colSizes[col] !== 0) {\n            colors.normal(splitter || \"  \");\n          }\n        }\n\n        newline();\n      }\n    };\n\n    const getAssetColor = (asset, defaultColor) => {\n      if (asset.isOverSizeLimit) {\n        return colors.yellow;\n      }\n\n      return defaultColor;\n    };\n\n    if (obj.hash) {\n      colors.normal(\"Hash: \");\n      colors.bold(obj.hash);\n      newline();\n    }\n\n    if (obj.version) {\n      colors.normal(\"Version: webpack \");\n      colors.bold(obj.version);\n      newline();\n    }\n\n    if (typeof obj.time === \"number\") {\n      colors.normal(\"Time: \");\n      colors.bold(obj.time);\n      colors.normal(\"ms\");\n      newline();\n    }\n\n    if (typeof obj.builtAt === \"number\") {\n      const builtAtDate = new Date(obj.builtAt);\n      let timeZone = undefined;\n\n      try {\n        builtAtDate.toLocaleTimeString();\n      } catch (err) {\n        // Force UTC if runtime timezone is unsupported\n        timeZone = \"UTC\";\n      }\n\n      colors.normal(\"Built at: \");\n      colors.normal(builtAtDate.toLocaleDateString(undefined, {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n        timeZone\n      }));\n      colors.normal(\" \");\n      colors.bold(builtAtDate.toLocaleTimeString(undefined, {\n        timeZone\n      }));\n      newline();\n    }\n\n    if (obj.env) {\n      colors.normal(\"Environment (--env): \");\n      colors.bold(JSON.stringify(obj.env, null, 2));\n      newline();\n    }\n\n    if (obj.publicPath) {\n      colors.normal(\"PublicPath: \");\n      colors.bold(obj.publicPath);\n      newline();\n    }\n\n    if (obj.assets && obj.assets.length > 0) {\n      const t = [[{\n        value: \"Asset\",\n        color: colors.bold\n      }, {\n        value: \"Size\",\n        color: colors.bold\n      }, {\n        value: \"Chunks\",\n        color: colors.bold\n      }, {\n        value: \"\",\n        color: colors.bold\n      }, {\n        value: \"\",\n        color: colors.bold\n      }, {\n        value: \"Chunk Names\",\n        color: colors.bold\n      }]];\n\n      for (const asset of obj.assets) {\n        t.push([{\n          value: asset.name,\n          color: getAssetColor(asset, colors.green)\n        }, {\n          value: SizeFormatHelpers.formatSize(asset.size),\n          color: getAssetColor(asset, colors.normal)\n        }, {\n          value: asset.chunks.join(\", \"),\n          color: colors.bold\n        }, {\n          value: [asset.emitted && \"[emitted]\", asset.info.immutable && \"[immutable]\", asset.info.development && \"[dev]\", asset.info.hotModuleReplacement && \"[hmr]\"].filter(Boolean).join(\" \"),\n          color: colors.green\n        }, {\n          value: asset.isOverSizeLimit ? \"[big]\" : \"\",\n          color: getAssetColor(asset, colors.normal)\n        }, {\n          value: asset.chunkNames.join(\", \"),\n          color: colors.normal\n        }]);\n      }\n\n      table(t, \"rrrlll\");\n    }\n\n    if (obj.filteredAssets > 0) {\n      colors.normal(\" \");\n      if (obj.assets.length > 0) colors.normal(\"+ \");\n      colors.normal(obj.filteredAssets);\n      if (obj.assets.length > 0) colors.normal(\" hidden\");\n      colors.normal(obj.filteredAssets !== 1 ? \" assets\" : \" asset\");\n      newline();\n    }\n\n    const processChunkGroups = (namedGroups, prefix) => {\n      for (const name of Object.keys(namedGroups)) {\n        const cg = namedGroups[name];\n        colors.normal(`${prefix} `);\n        colors.bold(name);\n\n        if (cg.isOverSizeLimit) {\n          colors.normal(\" \");\n          colors.yellow(\"[big]\");\n        }\n\n        colors.normal(\" =\");\n\n        for (const asset of cg.assets) {\n          colors.normal(\" \");\n          colors.green(asset);\n        }\n\n        for (const name of Object.keys(cg.childAssets)) {\n          const assets = cg.childAssets[name];\n\n          if (assets && assets.length > 0) {\n            colors.normal(\" \");\n            colors.magenta(`(${name}:`);\n\n            for (const asset of assets) {\n              colors.normal(\" \");\n              colors.green(asset);\n            }\n\n            colors.magenta(\")\");\n          }\n        }\n\n        newline();\n      }\n    };\n\n    if (obj.entrypoints) {\n      processChunkGroups(obj.entrypoints, \"Entrypoint\");\n    }\n\n    if (obj.namedChunkGroups) {\n      let outputChunkGroups = obj.namedChunkGroups;\n\n      if (obj.entrypoints) {\n        outputChunkGroups = Object.keys(outputChunkGroups).filter(name => !obj.entrypoints[name]).reduce((result, name) => {\n          result[name] = obj.namedChunkGroups[name];\n          return result;\n        }, {});\n      }\n\n      processChunkGroups(outputChunkGroups, \"Chunk Group\");\n    }\n\n    const modulesByIdentifier = {};\n\n    if (obj.modules) {\n      for (const module of obj.modules) {\n        modulesByIdentifier[`$${module.identifier}`] = module;\n      }\n    } else if (obj.chunks) {\n      for (const chunk of obj.chunks) {\n        if (chunk.modules) {\n          for (const module of chunk.modules) {\n            modulesByIdentifier[`$${module.identifier}`] = module;\n          }\n        }\n      }\n    }\n\n    const processModuleAttributes = module => {\n      colors.normal(\" \");\n      colors.normal(SizeFormatHelpers.formatSize(module.size));\n\n      if (module.chunks) {\n        for (const chunk of module.chunks) {\n          colors.normal(\" {\");\n          colors.yellow(chunk);\n          colors.normal(\"}\");\n        }\n      }\n\n      if (typeof module.depth === \"number\") {\n        colors.normal(` [depth ${module.depth}]`);\n      }\n\n      if (module.cacheable === false) {\n        colors.red(\" [not cacheable]\");\n      }\n\n      if (module.optional) {\n        colors.yellow(\" [optional]\");\n      }\n\n      if (module.built) {\n        colors.green(\" [built]\");\n      }\n\n      if (module.assets && module.assets.length) {\n        colors.magenta(` [${module.assets.length} asset${module.assets.length === 1 ? \"\" : \"s\"}]`);\n      }\n\n      if (module.prefetched) {\n        colors.magenta(\" [prefetched]\");\n      }\n\n      if (module.failed) colors.red(\" [failed]\");\n\n      if (module.warnings) {\n        colors.yellow(` [${module.warnings} warning${module.warnings === 1 ? \"\" : \"s\"}]`);\n      }\n\n      if (module.errors) {\n        colors.red(` [${module.errors} error${module.errors === 1 ? \"\" : \"s\"}]`);\n      }\n    };\n\n    const processModuleContent = (module, prefix) => {\n      if (Array.isArray(module.providedExports)) {\n        colors.normal(prefix);\n\n        if (module.providedExports.length === 0) {\n          colors.cyan(\"[no exports]\");\n        } else {\n          colors.cyan(`[exports: ${module.providedExports.join(\", \")}]`);\n        }\n\n        newline();\n      }\n\n      if (module.usedExports !== undefined) {\n        if (module.usedExports !== true) {\n          colors.normal(prefix);\n\n          if (module.usedExports === null) {\n            colors.cyan(\"[used exports unknown]\");\n          } else if (module.usedExports === false) {\n            colors.cyan(\"[no exports used]\");\n          } else if (Array.isArray(module.usedExports) && module.usedExports.length === 0) {\n            colors.cyan(\"[no exports used]\");\n          } else if (Array.isArray(module.usedExports)) {\n            const providedExportsCount = Array.isArray(module.providedExports) ? module.providedExports.length : null;\n\n            if (providedExportsCount !== null && providedExportsCount === module.usedExports.length) {\n              colors.cyan(\"[all exports used]\");\n            } else {\n              colors.cyan(`[only some exports used: ${module.usedExports.join(\", \")}]`);\n            }\n          }\n\n          newline();\n        }\n      }\n\n      if (Array.isArray(module.optimizationBailout)) {\n        for (const item of module.optimizationBailout) {\n          colors.normal(prefix);\n          colors.yellow(item);\n          newline();\n        }\n      }\n\n      if (module.reasons) {\n        for (const reason of module.reasons) {\n          colors.normal(prefix);\n\n          if (reason.type) {\n            colors.normal(reason.type);\n            colors.normal(\" \");\n          }\n\n          if (reason.userRequest) {\n            colors.cyan(reason.userRequest);\n            colors.normal(\" \");\n          }\n\n          if (reason.moduleId !== null) {\n            colors.normal(\"[\");\n            colors.normal(reason.moduleId);\n            colors.normal(\"]\");\n          }\n\n          if (reason.module && reason.module !== reason.moduleId) {\n            colors.normal(\" \");\n            colors.magenta(reason.module);\n          }\n\n          if (reason.loc) {\n            colors.normal(\" \");\n            colors.normal(reason.loc);\n          }\n\n          if (reason.explanation) {\n            colors.normal(\" \");\n            colors.cyan(reason.explanation);\n          }\n\n          newline();\n        }\n      }\n\n      if (module.profile) {\n        colors.normal(prefix);\n        let sum = 0;\n\n        if (module.issuerPath) {\n          for (const m of module.issuerPath) {\n            colors.normal(\"[\");\n            colors.normal(m.id);\n            colors.normal(\"] \");\n\n            if (m.profile) {\n              const time = (m.profile.factory || 0) + (m.profile.building || 0);\n              coloredTime(time);\n              sum += time;\n              colors.normal(\" \");\n            }\n\n            colors.normal(\"-> \");\n          }\n        }\n\n        for (const key of Object.keys(module.profile)) {\n          colors.normal(`${key}:`);\n          const time = module.profile[key];\n          coloredTime(time);\n          colors.normal(\" \");\n          sum += time;\n        }\n\n        colors.normal(\"= \");\n        coloredTime(sum);\n        newline();\n      }\n\n      if (module.modules) {\n        processModulesList(module, prefix + \"| \");\n      }\n    };\n\n    const processModulesList = (obj, prefix) => {\n      if (obj.modules) {\n        let maxModuleId = 0;\n\n        for (const module of obj.modules) {\n          if (typeof module.id === \"number\") {\n            if (maxModuleId < module.id) maxModuleId = module.id;\n          }\n        }\n\n        let contentPrefix = prefix + \"    \";\n        if (maxModuleId >= 10) contentPrefix += \" \";\n        if (maxModuleId >= 100) contentPrefix += \" \";\n        if (maxModuleId >= 1000) contentPrefix += \" \";\n\n        for (const module of obj.modules) {\n          colors.normal(prefix);\n          const name = module.name || module.identifier;\n\n          if (typeof module.id === \"string\" || typeof module.id === \"number\") {\n            if (typeof module.id === \"number\") {\n              if (module.id < 1000 && maxModuleId >= 1000) colors.normal(\" \");\n              if (module.id < 100 && maxModuleId >= 100) colors.normal(\" \");\n              if (module.id < 10 && maxModuleId >= 10) colors.normal(\" \");\n            } else {\n              if (maxModuleId >= 1000) colors.normal(\" \");\n              if (maxModuleId >= 100) colors.normal(\" \");\n              if (maxModuleId >= 10) colors.normal(\" \");\n            }\n\n            if (name !== module.id) {\n              colors.normal(\"[\");\n              colors.normal(module.id);\n              colors.normal(\"]\");\n              colors.normal(\" \");\n            } else {\n              colors.normal(\"[\");\n              colors.bold(module.id);\n              colors.normal(\"]\");\n            }\n          }\n\n          if (name !== module.id) {\n            colors.bold(name);\n          }\n\n          processModuleAttributes(module);\n          newline();\n          processModuleContent(module, contentPrefix);\n        }\n\n        if (obj.filteredModules > 0) {\n          colors.normal(prefix);\n          colors.normal(\"   \");\n          if (obj.modules.length > 0) colors.normal(\" + \");\n          colors.normal(obj.filteredModules);\n          if (obj.modules.length > 0) colors.normal(\" hidden\");\n          colors.normal(obj.filteredModules !== 1 ? \" modules\" : \" module\");\n          newline();\n        }\n      }\n    };\n\n    if (obj.chunks) {\n      for (const chunk of obj.chunks) {\n        colors.normal(\"chunk \");\n        if (chunk.id < 1000) colors.normal(\" \");\n        if (chunk.id < 100) colors.normal(\" \");\n        if (chunk.id < 10) colors.normal(\" \");\n        colors.normal(\"{\");\n        colors.yellow(chunk.id);\n        colors.normal(\"} \");\n        colors.green(chunk.files.join(\", \"));\n\n        if (chunk.names && chunk.names.length > 0) {\n          colors.normal(\" (\");\n          colors.normal(chunk.names.join(\", \"));\n          colors.normal(\")\");\n        }\n\n        colors.normal(\" \");\n        colors.normal(SizeFormatHelpers.formatSize(chunk.size));\n\n        for (const id of chunk.parents) {\n          colors.normal(\" <{\");\n          colors.yellow(id);\n          colors.normal(\"}>\");\n        }\n\n        for (const id of chunk.siblings) {\n          colors.normal(\" ={\");\n          colors.yellow(id);\n          colors.normal(\"}=\");\n        }\n\n        for (const id of chunk.children) {\n          colors.normal(\" >{\");\n          colors.yellow(id);\n          colors.normal(\"}<\");\n        }\n\n        if (chunk.childrenByOrder) {\n          for (const name of Object.keys(chunk.childrenByOrder)) {\n            const children = chunk.childrenByOrder[name];\n            colors.normal(\" \");\n            colors.magenta(`(${name}:`);\n\n            for (const id of children) {\n              colors.normal(\" {\");\n              colors.yellow(id);\n              colors.normal(\"}\");\n            }\n\n            colors.magenta(\")\");\n          }\n        }\n\n        if (chunk.entry) {\n          colors.yellow(\" [entry]\");\n        } else if (chunk.initial) {\n          colors.yellow(\" [initial]\");\n        }\n\n        if (chunk.rendered) {\n          colors.green(\" [rendered]\");\n        }\n\n        if (chunk.recorded) {\n          colors.green(\" [recorded]\");\n        }\n\n        if (chunk.reason) {\n          colors.yellow(` ${chunk.reason}`);\n        }\n\n        newline();\n\n        if (chunk.origins) {\n          for (const origin of chunk.origins) {\n            colors.normal(\"    > \");\n\n            if (origin.reasons && origin.reasons.length) {\n              colors.yellow(origin.reasons.join(\" \"));\n              colors.normal(\" \");\n            }\n\n            if (origin.request) {\n              colors.normal(origin.request);\n              colors.normal(\" \");\n            }\n\n            if (origin.module) {\n              colors.normal(\"[\");\n              colors.normal(origin.moduleId);\n              colors.normal(\"] \");\n              const module = modulesByIdentifier[`$${origin.module}`];\n\n              if (module) {\n                colors.bold(module.name);\n                colors.normal(\" \");\n              }\n            }\n\n            if (origin.loc) {\n              colors.normal(origin.loc);\n            }\n\n            newline();\n          }\n        }\n\n        processModulesList(chunk, \" \");\n      }\n    }\n\n    processModulesList(obj, \"\");\n\n    if (obj.logging) {\n      for (const origin of Object.keys(obj.logging)) {\n        const logData = obj.logging[origin];\n\n        if (logData.entries.length > 0) {\n          newline();\n\n          if (logData.debug) {\n            colors.red(\"DEBUG \");\n          }\n\n          colors.bold(\"LOG from \" + origin);\n          newline();\n          let indent = \"\";\n\n          for (const entry of logData.entries) {\n            let color = colors.normal;\n            let prefix = \"    \";\n\n            switch (entry.type) {\n              case LogType.clear:\n                colors.normal(`${indent}-------`);\n                newline();\n                continue;\n\n              case LogType.error:\n                color = colors.red;\n                prefix = \"<e> \";\n                break;\n\n              case LogType.warn:\n                color = colors.yellow;\n                prefix = \"<w> \";\n                break;\n\n              case LogType.info:\n                color = colors.green;\n                prefix = \"<i> \";\n                break;\n\n              case LogType.log:\n                color = colors.bold;\n                break;\n\n              case LogType.trace:\n              case LogType.debug:\n                color = colors.normal;\n                break;\n\n              case LogType.status:\n                color = colors.magenta;\n                prefix = \"<s> \";\n                break;\n\n              case LogType.profile:\n                color = colors.magenta;\n                prefix = \"<p> \";\n                break;\n\n              case LogType.profileEnd:\n                color = colors.magenta;\n                prefix = \"</p> \";\n                break;\n\n              case LogType.time:\n                color = colors.magenta;\n                prefix = \"<t> \";\n                break;\n\n              case LogType.group:\n                color = colors.cyan;\n                prefix = \"<-> \";\n                break;\n\n              case LogType.groupCollapsed:\n                color = colors.cyan;\n                prefix = \"<+> \";\n                break;\n\n              case LogType.groupEnd:\n                if (indent.length >= 2) indent = indent.slice(0, indent.length - 2);\n                continue;\n            }\n\n            if (entry.message) {\n              for (const line of entry.message.split(\"\\n\")) {\n                colors.normal(`${indent}${prefix}`);\n                color(line);\n                newline();\n              }\n            }\n\n            if (entry.trace) {\n              for (const line of entry.trace) {\n                colors.normal(`${indent}| ${line}`);\n                newline();\n              }\n            }\n\n            switch (entry.type) {\n              case LogType.group:\n                indent += \"  \";\n                break;\n            }\n          }\n\n          if (logData.filteredEntries) {\n            colors.normal(`+ ${logData.filteredEntries} hidden lines`);\n            newline();\n          }\n        }\n      }\n    }\n\n    if (obj._showWarnings && obj.warnings) {\n      for (const warning of obj.warnings) {\n        newline();\n        colors.yellow(`WARNING in ${warning}`);\n        newline();\n      }\n    }\n\n    if (obj._showErrors && obj.errors) {\n      for (const error of obj.errors) {\n        newline();\n        colors.red(`ERROR in ${error}`);\n        newline();\n      }\n    }\n\n    if (obj.children) {\n      for (const child of obj.children) {\n        const childString = Stats.jsonToString(child, useColors);\n\n        if (childString) {\n          if (child.name) {\n            colors.normal(\"Child \");\n            colors.bold(child.name);\n            colors.normal(\":\");\n          } else {\n            colors.normal(\"Child\");\n          }\n\n          newline();\n          buf.push(\"    \");\n          buf.push(childString.replace(/\\n/g, \"\\n    \"));\n          newline();\n        }\n      }\n    }\n\n    if (obj.needAdditionalPass) {\n      colors.yellow(\"Compilation needs an additional pass and will compile again.\");\n    }\n\n    while (buf[buf.length - 1] === \"\\n\") {\n      buf.pop();\n    }\n\n    return buf.join(\"\");\n  }\n\n  static presetToOptions(name) {\n    // Accepted values: none, errors-only, minimal, normal, detailed, verbose\n    // Any other falsy value will behave as 'none', truthy values as 'normal'\n    const pn = typeof name === \"string\" && name.toLowerCase() || name || \"none\";\n\n    switch (pn) {\n      case \"none\":\n        return {\n          all: false\n        };\n\n      case \"verbose\":\n        return {\n          entrypoints: true,\n          chunkGroups: true,\n          modules: false,\n          chunks: true,\n          chunkModules: true,\n          chunkOrigins: true,\n          depth: true,\n          env: true,\n          reasons: true,\n          usedExports: true,\n          providedExports: true,\n          optimizationBailout: true,\n          errorDetails: true,\n          publicPath: true,\n          logging: \"verbose\",\n          exclude: false,\n          maxModules: Infinity\n        };\n\n      case \"detailed\":\n        return {\n          entrypoints: true,\n          chunkGroups: true,\n          chunks: true,\n          chunkModules: false,\n          chunkOrigins: true,\n          depth: true,\n          usedExports: true,\n          providedExports: true,\n          optimizationBailout: true,\n          errorDetails: true,\n          publicPath: true,\n          logging: true,\n          exclude: false,\n          maxModules: Infinity\n        };\n\n      case \"minimal\":\n        return {\n          all: false,\n          modules: true,\n          maxModules: 0,\n          errors: true,\n          warnings: true,\n          logging: \"warn\"\n        };\n\n      case \"errors-only\":\n        return {\n          all: false,\n          errors: true,\n          moduleTrace: true,\n          logging: \"error\"\n        };\n\n      case \"errors-warnings\":\n        return {\n          all: false,\n          errors: true,\n          warnings: true,\n          logging: \"warn\"\n        };\n\n      default:\n        return {};\n    }\n  }\n\n  static getChildOptions(options, idx) {\n    let innerOptions;\n\n    if (Array.isArray(options.children)) {\n      if (idx < options.children.length) {\n        innerOptions = options.children[idx];\n      }\n    } else if (typeof options.children === \"object\" && options.children) {\n      innerOptions = options.children;\n    }\n\n    if (typeof innerOptions === \"boolean\" || typeof innerOptions === \"string\") {\n      innerOptions = Stats.presetToOptions(innerOptions);\n    }\n\n    if (!innerOptions) {\n      return options;\n    }\n\n    const childOptions = Object.assign({}, options);\n    delete childOptions.children; // do not inherit children\n\n    return Object.assign(childOptions, innerOptions);\n  }\n\n}\n\nmodule.exports = Stats;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/Stats.js"],"names":["RequestShortener","require","SizeFormatHelpers","formatLocation","identifierUtils","compareLocations","LogType","optionsOrFallback","args","optionValues","push","find","optionValue","undefined","compareId","a","b","Stats","constructor","compilation","hash","startTime","endTime","filterWarnings","warnings","warningsFilter","normalizedWarningsFilters","concat","map","filter","warning","includes","RegExp","test","Error","some","check","formatFilePath","filePath","OPTIONS_REGEXP","replace","hasWarnings","length","children","child","getStats","hasErrors","errors","normalizeFieldKey","field","substr","sortOrderRegular","toJson","options","forToString","presetToOptions","optionOrLocalFallback","v","def","all","testAgainstGivenOption","item","regExp","ident","context","compiler","requestShortener","showPerformance","performance","showHash","showEnv","env","showVersion","version","showTimings","timings","showBuiltAt","builtAt","showAssets","assets","showEntrypoints","entrypoints","showChunkGroups","chunkGroups","showChunks","chunks","showChunkModules","chunkModules","showChunkOrigins","chunkOrigins","showModules","modules","showNestedModules","nestedModules","showModuleAssets","moduleAssets","showDepth","depth","showCachedModules","cached","showCachedAssets","cachedAssets","showReasons","reasons","showUsedExports","usedExports","showProvidedExports","providedExports","showOptimizationBailout","optimizationBailout","showChildren","showSource","source","showModuleTrace","moduleTrace","showErrors","showErrorDetails","errorDetails","showWarnings","showPublicPath","publicPath","showLogging","logging","showLoggingTrace","loggingTrace","loggingDebug","excludeModules","exclude","excludeAssets","maxModules","Infinity","sortModules","modulesSort","sortChunks","chunksSort","sortAssets","assetsSort","showOutputPath","outputPath","module","built","createModuleFilter","i","shorten","resource","excluded","fn","result","createAssetFilter","asset","name","emitted","sortByFieldAndOrder","fieldKey","sortByField","originalArray","originalMap","reduce","set","Map","sortIsRegular","cmp","get","formatError","e","text","message","chunk","id","hasRuntime","canBeInitial","file","readableIdentifier","loc","locInfo","details","missing","join","origin","originLoc","dependencies","dep","current","issuer","obj","Object","defineProperty","value","enumerable","time","_env","needAdditionalPass","mainTemplate","getPublicPath","outputOptions","path","assetsByFile","compilationAssets","getAssets","sort","assetsByChunkName","info","size","chunkNames","emittedAssets","has","isOverSizeLimit","filteredAssets","files","ids","fnChunkGroup","groupMap","keyValuePair","cg","getChildrenByOrders","c","array","keys","key","groups","group","create","childAssets","Array","from","add","Set","namedChunkGroups","fnModule","reverse","identifier","index","index2","cacheable","buildInfo","optional","prefetched","chunksIterable","issuerId","issuerName","issuerPath","profile","failed","error","dependency","type","reason","moduleId","moduleIdentifier","moduleName","explanation","userRequest","used","isArray","buildMeta","filteredModules","_source","parents","siblings","childIdByOrder","getChildIdsByOrders","chunkGroup","groupsIterable","parentGroup","parentsIterable","childGroup","childrenIterable","sibling","rendered","initial","entry","recorded","chunkReason","modulesSize","names","slice","renderedHash","childrenByOrder","getModules","getNumberOfModules","origins","g","request","cmp1","cmp2","cmp3","util","acceptedTypes","collapsedGroups","warn","log","groupEnd","groupCollapsed","clear","profileEnd","status","logEntries","debugMode","collapseCounter","processedLogEntries","format","trace","makePathsRelative","cache","entries","filteredEntries","debug","idx","childOptions","getChildOptions","toString","useColors","colors","jsonToString","buf","defaultColors","bold","yellow","red","green","cyan","magenta","color","str","normal","coloredTime","times","newline","getText","arr","row","col","table","align","splitter","rows","cols","colSizes","l","getAssetColor","defaultColor","builtAtDate","Date","timeZone","toLocaleTimeString","err","toLocaleDateString","day","month","year","JSON","stringify","t","formatSize","immutable","development","hotModuleReplacement","Boolean","processChunkGroups","namedGroups","prefix","outputChunkGroups","modulesByIdentifier","processModuleAttributes","processModuleContent","providedExportsCount","sum","m","factory","building","processModulesList","maxModuleId","contentPrefix","logData","indent","line","split","_showWarnings","_showErrors","childString","pop","pn","toLowerCase","innerOptions","assign","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequestShortener = require(\"./RequestShortener\");\nconst SizeFormatHelpers = require(\"./SizeFormatHelpers\");\nconst formatLocation = require(\"./formatLocation\");\nconst identifierUtils = require(\"./util/identifier\");\nconst compareLocations = require(\"./compareLocations\");\nconst { LogType } = require(\"./logging/Logger\");\n\nconst optionsOrFallback = (...args) => {\n\tlet optionValues = [];\n\toptionValues.push(...args);\n\treturn optionValues.find(optionValue => optionValue !== undefined);\n};\n\nconst compareId = (a, b) => {\n\tif (typeof a !== typeof b) {\n\t\treturn typeof a < typeof b ? -1 : 1;\n\t}\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\treturn 0;\n};\n\nclass Stats {\n\tconstructor(compilation) {\n\t\tthis.compilation = compilation;\n\t\tthis.hash = compilation.hash;\n\t\tthis.startTime = undefined;\n\t\tthis.endTime = undefined;\n\t}\n\n\tstatic filterWarnings(warnings, warningsFilter) {\n\t\t// we dont have anything to filter so all warnings can be shown\n\t\tif (!warningsFilter) {\n\t\t\treturn warnings;\n\t\t}\n\n\t\t// create a chain of filters\n\t\t// if they return \"true\" a warning should be suppressed\n\t\tconst normalizedWarningsFilters = [].concat(warningsFilter).map(filter => {\n\t\t\tif (typeof filter === \"string\") {\n\t\t\t\treturn warning => warning.includes(filter);\n\t\t\t}\n\n\t\t\tif (filter instanceof RegExp) {\n\t\t\t\treturn warning => filter.test(warning);\n\t\t\t}\n\n\t\t\tif (typeof filter === \"function\") {\n\t\t\t\treturn filter;\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t`Can only filter warnings with Strings or RegExps. (Given: ${filter})`\n\t\t\t);\n\t\t});\n\t\treturn warnings.filter(warning => {\n\t\t\treturn !normalizedWarningsFilters.some(check => check(warning));\n\t\t});\n\t}\n\n\tformatFilePath(filePath) {\n\t\tconst OPTIONS_REGEXP = /^(\\s|\\S)*!/;\n\t\treturn filePath.includes(\"!\")\n\t\t\t? `${filePath.replace(OPTIONS_REGEXP, \"\")} (${filePath})`\n\t\t\t: `${filePath}`;\n\t}\n\n\thasWarnings() {\n\t\treturn (\n\t\t\tthis.compilation.warnings.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasWarnings())\n\t\t);\n\t}\n\n\thasErrors() {\n\t\treturn (\n\t\t\tthis.compilation.errors.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasErrors())\n\t\t);\n\t}\n\n\t// remove a prefixed \"!\" that can be specified to reverse sort order\n\tnormalizeFieldKey(field) {\n\t\tif (field[0] === \"!\") {\n\t\t\treturn field.substr(1);\n\t\t}\n\t\treturn field;\n\t}\n\n\t// if a field is prefixed by a \"!\" reverse sort order\n\tsortOrderRegular(field) {\n\t\tif (field[0] === \"!\") {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoJson(options, forToString) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst optionOrLocalFallback = (v, def) =>\n\t\t\tv !== undefined ? v : options.all !== undefined ? options.all : def;\n\n\t\tconst testAgainstGivenOption = item => {\n\t\t\tif (typeof item === \"string\") {\n\t\t\t\tconst regExp = new RegExp(\n\t\t\t\t\t`[\\\\\\\\/]${item.replace(\n\t\t\t\t\t\t// eslint-disable-next-line no-useless-escape\n\t\t\t\t\t\t/[-[\\]{}()*+?.\\\\^$|]/g,\n\t\t\t\t\t\t\"\\\\$&\"\n\t\t\t\t\t)}([\\\\\\\\/]|$|!|\\\\?)`\n\t\t\t\t);\n\t\t\t\treturn ident => regExp.test(ident);\n\t\t\t}\n\t\t\tif (item && typeof item === \"object\" && typeof item.test === \"function\") {\n\t\t\t\treturn ident => item.test(ident);\n\t\t\t}\n\t\t\tif (typeof item === \"function\") {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t\tif (typeof item === \"boolean\") {\n\t\t\t\treturn () => item;\n\t\t\t}\n\t\t};\n\n\t\tconst compilation = this.compilation;\n\t\tconst context = optionsOrFallback(\n\t\t\toptions.context,\n\t\t\tcompilation.compiler.context\n\t\t);\n\t\tconst requestShortener =\n\t\t\tcompilation.compiler.context === context\n\t\t\t\t? compilation.requestShortener\n\t\t\t\t: new RequestShortener(context);\n\t\tconst showPerformance = optionOrLocalFallback(options.performance, true);\n\t\tconst showHash = optionOrLocalFallback(options.hash, true);\n\t\tconst showEnv = optionOrLocalFallback(options.env, false);\n\t\tconst showVersion = optionOrLocalFallback(options.version, true);\n\t\tconst showTimings = optionOrLocalFallback(options.timings, true);\n\t\tconst showBuiltAt = optionOrLocalFallback(options.builtAt, true);\n\t\tconst showAssets = optionOrLocalFallback(options.assets, true);\n\t\tconst showEntrypoints = optionOrLocalFallback(options.entrypoints, true);\n\t\tconst showChunkGroups = optionOrLocalFallback(\n\t\t\toptions.chunkGroups,\n\t\t\t!forToString\n\t\t);\n\t\tconst showChunks = optionOrLocalFallback(options.chunks, !forToString);\n\t\tconst showChunkModules = optionOrLocalFallback(options.chunkModules, true);\n\t\tconst showChunkOrigins = optionOrLocalFallback(\n\t\t\toptions.chunkOrigins,\n\t\t\t!forToString\n\t\t);\n\t\tconst showModules = optionOrLocalFallback(options.modules, true);\n\t\tconst showNestedModules = optionOrLocalFallback(\n\t\t\toptions.nestedModules,\n\t\t\ttrue\n\t\t);\n\t\tconst showModuleAssets = optionOrLocalFallback(\n\t\t\toptions.moduleAssets,\n\t\t\t!forToString\n\t\t);\n\t\tconst showDepth = optionOrLocalFallback(options.depth, !forToString);\n\t\tconst showCachedModules = optionOrLocalFallback(options.cached, true);\n\t\tconst showCachedAssets = optionOrLocalFallback(options.cachedAssets, true);\n\t\tconst showReasons = optionOrLocalFallback(options.reasons, !forToString);\n\t\tconst showUsedExports = optionOrLocalFallback(\n\t\t\toptions.usedExports,\n\t\t\t!forToString\n\t\t);\n\t\tconst showProvidedExports = optionOrLocalFallback(\n\t\t\toptions.providedExports,\n\t\t\t!forToString\n\t\t);\n\t\tconst showOptimizationBailout = optionOrLocalFallback(\n\t\t\toptions.optimizationBailout,\n\t\t\t!forToString\n\t\t);\n\t\tconst showChildren = optionOrLocalFallback(options.children, true);\n\t\tconst showSource = optionOrLocalFallback(options.source, !forToString);\n\t\tconst showModuleTrace = optionOrLocalFallback(options.moduleTrace, true);\n\t\tconst showErrors = optionOrLocalFallback(options.errors, true);\n\t\tconst showErrorDetails = optionOrLocalFallback(\n\t\t\toptions.errorDetails,\n\t\t\t!forToString\n\t\t);\n\t\tconst showWarnings = optionOrLocalFallback(options.warnings, true);\n\t\tconst warningsFilter = optionsOrFallback(options.warningsFilter, null);\n\t\tconst showPublicPath = optionOrLocalFallback(\n\t\t\toptions.publicPath,\n\t\t\t!forToString\n\t\t);\n\t\tconst showLogging = optionOrLocalFallback(\n\t\t\toptions.logging,\n\t\t\tforToString ? \"info\" : true\n\t\t);\n\t\tconst showLoggingTrace = optionOrLocalFallback(\n\t\t\toptions.loggingTrace,\n\t\t\t!forToString\n\t\t);\n\t\tconst loggingDebug = []\n\t\t\t.concat(optionsOrFallback(options.loggingDebug, []))\n\t\t\t.map(testAgainstGivenOption);\n\n\t\tconst excludeModules = []\n\t\t\t.concat(optionsOrFallback(options.excludeModules, options.exclude, []))\n\t\t\t.map(testAgainstGivenOption);\n\t\tconst excludeAssets = []\n\t\t\t.concat(optionsOrFallback(options.excludeAssets, []))\n\t\t\t.map(testAgainstGivenOption);\n\t\tconst maxModules = optionsOrFallback(\n\t\t\toptions.maxModules,\n\t\t\tforToString ? 15 : Infinity\n\t\t);\n\t\tconst sortModules = optionsOrFallback(options.modulesSort, \"id\");\n\t\tconst sortChunks = optionsOrFallback(options.chunksSort, \"id\");\n\t\tconst sortAssets = optionsOrFallback(options.assetsSort, \"\");\n\t\tconst showOutputPath = optionOrLocalFallback(\n\t\t\toptions.outputPath,\n\t\t\t!forToString\n\t\t);\n\n\t\tif (!showCachedModules) {\n\t\t\texcludeModules.push((ident, module) => !module.built);\n\t\t}\n\n\t\tconst createModuleFilter = () => {\n\t\t\tlet i = 0;\n\t\t\treturn module => {\n\t\t\t\tif (excludeModules.length > 0) {\n\t\t\t\t\tconst ident = requestShortener.shorten(module.resource);\n\t\t\t\t\tconst excluded = excludeModules.some(fn => fn(ident, module));\n\t\t\t\t\tif (excluded) return false;\n\t\t\t\t}\n\t\t\t\tconst result = i < maxModules;\n\t\t\t\ti++;\n\t\t\t\treturn result;\n\t\t\t};\n\t\t};\n\n\t\tconst createAssetFilter = () => {\n\t\t\treturn asset => {\n\t\t\t\tif (excludeAssets.length > 0) {\n\t\t\t\t\tconst ident = asset.name;\n\t\t\t\t\tconst excluded = excludeAssets.some(fn => fn(ident, asset));\n\t\t\t\t\tif (excluded) return false;\n\t\t\t\t}\n\t\t\t\treturn showCachedAssets || asset.emitted;\n\t\t\t};\n\t\t};\n\n\t\tconst sortByFieldAndOrder = (fieldKey, a, b) => {\n\t\t\tif (a[fieldKey] === null && b[fieldKey] === null) return 0;\n\t\t\tif (a[fieldKey] === null) return 1;\n\t\t\tif (b[fieldKey] === null) return -1;\n\t\t\tif (a[fieldKey] === b[fieldKey]) return 0;\n\t\t\tif (typeof a[fieldKey] !== typeof b[fieldKey])\n\t\t\t\treturn typeof a[fieldKey] < typeof b[fieldKey] ? -1 : 1;\n\t\t\treturn a[fieldKey] < b[fieldKey] ? -1 : 1;\n\t\t};\n\n\t\tconst sortByField = (field, originalArray) => {\n\t\t\tconst originalMap = originalArray.reduce((map, v, i) => {\n\t\t\t\tmap.set(v, i);\n\t\t\t\treturn map;\n\t\t\t}, new Map());\n\t\t\treturn (a, b) => {\n\t\t\t\tif (field) {\n\t\t\t\t\tconst fieldKey = this.normalizeFieldKey(field);\n\n\t\t\t\t\t// if a field is prefixed with a \"!\" the sort is reversed!\n\t\t\t\t\tconst sortIsRegular = this.sortOrderRegular(field);\n\n\t\t\t\t\tconst cmp = sortByFieldAndOrder(\n\t\t\t\t\t\tfieldKey,\n\t\t\t\t\t\tsortIsRegular ? a : b,\n\t\t\t\t\t\tsortIsRegular ? b : a\n\t\t\t\t\t);\n\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t}\n\t\t\t\treturn originalMap.get(a) - originalMap.get(b);\n\t\t\t};\n\t\t};\n\n\t\tconst formatError = e => {\n\t\t\tlet text = \"\";\n\t\t\tif (typeof e === \"string\") {\n\t\t\t\te = { message: e };\n\t\t\t}\n\t\t\tif (e.chunk) {\n\t\t\t\ttext += `chunk ${e.chunk.name || e.chunk.id}${\n\t\t\t\t\te.chunk.hasRuntime()\n\t\t\t\t\t\t? \" [entry]\"\n\t\t\t\t\t\t: e.chunk.canBeInitial()\n\t\t\t\t\t\t? \" [initial]\"\n\t\t\t\t\t\t: \"\"\n\t\t\t\t}\\n`;\n\t\t\t}\n\t\t\tif (e.file) {\n\t\t\t\ttext += `${e.file}\\n`;\n\t\t\t}\n\t\t\tif (\n\t\t\t\te.module &&\n\t\t\t\te.module.readableIdentifier &&\n\t\t\t\ttypeof e.module.readableIdentifier === \"function\"\n\t\t\t) {\n\t\t\t\ttext += this.formatFilePath(\n\t\t\t\t\te.module.readableIdentifier(requestShortener)\n\t\t\t\t);\n\t\t\t\tif (typeof e.loc === \"object\") {\n\t\t\t\t\tconst locInfo = formatLocation(e.loc);\n\t\t\t\t\tif (locInfo) text += ` ${locInfo}`;\n\t\t\t\t}\n\t\t\t\ttext += \"\\n\";\n\t\t\t}\n\t\t\ttext += e.message;\n\t\t\tif (showErrorDetails && e.details) {\n\t\t\t\ttext += `\\n${e.details}`;\n\t\t\t}\n\t\t\tif (showErrorDetails && e.missing) {\n\t\t\t\ttext += e.missing.map(item => `\\n[${item}]`).join(\"\");\n\t\t\t}\n\t\t\tif (showModuleTrace && e.origin) {\n\t\t\t\ttext += `\\n @ ${this.formatFilePath(\n\t\t\t\t\te.origin.readableIdentifier(requestShortener)\n\t\t\t\t)}`;\n\t\t\t\tif (typeof e.originLoc === \"object\") {\n\t\t\t\t\tconst locInfo = formatLocation(e.originLoc);\n\t\t\t\t\tif (locInfo) text += ` ${locInfo}`;\n\t\t\t\t}\n\t\t\t\tif (e.dependencies) {\n\t\t\t\t\tfor (const dep of e.dependencies) {\n\t\t\t\t\t\tif (!dep.loc) continue;\n\t\t\t\t\t\tif (typeof dep.loc === \"string\") continue;\n\t\t\t\t\t\tconst locInfo = formatLocation(dep.loc);\n\t\t\t\t\t\tif (!locInfo) continue;\n\t\t\t\t\t\ttext += ` ${locInfo}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet current = e.origin;\n\t\t\t\twhile (current.issuer) {\n\t\t\t\t\tcurrent = current.issuer;\n\t\t\t\t\ttext += `\\n @ ${current.readableIdentifier(requestShortener)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn text;\n\t\t};\n\n\t\tconst obj = {\n\t\t\terrors: compilation.errors.map(formatError),\n\t\t\twarnings: Stats.filterWarnings(\n\t\t\t\tcompilation.warnings.map(formatError),\n\t\t\t\twarningsFilter\n\t\t\t)\n\t\t};\n\n\t\t//We just hint other renderers since actually omitting\n\t\t//errors/warnings from the JSON would be kind of weird.\n\t\tObject.defineProperty(obj, \"_showWarnings\", {\n\t\t\tvalue: showWarnings,\n\t\t\tenumerable: false\n\t\t});\n\t\tObject.defineProperty(obj, \"_showErrors\", {\n\t\t\tvalue: showErrors,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tif (showVersion) {\n\t\t\tobj.version = require(\"../package.json\").version;\n\t\t}\n\n\t\tif (showHash) obj.hash = this.hash;\n\t\tif (showTimings && this.startTime && this.endTime) {\n\t\t\tobj.time = this.endTime - this.startTime;\n\t\t}\n\n\t\tif (showBuiltAt && this.endTime) {\n\t\t\tobj.builtAt = this.endTime;\n\t\t}\n\n\t\tif (showEnv && options._env) {\n\t\t\tobj.env = options._env;\n\t\t}\n\n\t\tif (compilation.needAdditionalPass) {\n\t\t\tobj.needAdditionalPass = true;\n\t\t}\n\t\tif (showPublicPath) {\n\t\t\tobj.publicPath = this.compilation.mainTemplate.getPublicPath({\n\t\t\t\thash: this.compilation.hash\n\t\t\t});\n\t\t}\n\t\tif (showOutputPath) {\n\t\t\tobj.outputPath = this.compilation.mainTemplate.outputOptions.path;\n\t\t}\n\t\tif (showAssets) {\n\t\t\tconst assetsByFile = {};\n\t\t\tconst compilationAssets = compilation\n\t\t\t\t.getAssets()\n\t\t\t\t.sort((a, b) => (a.name < b.name ? -1 : 1));\n\t\t\tobj.assetsByChunkName = {};\n\t\t\tobj.assets = compilationAssets\n\t\t\t\t.map(({ name, source, info }) => {\n\t\t\t\t\tconst obj = {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tsize: source.size(),\n\t\t\t\t\t\tchunks: [],\n\t\t\t\t\t\tchunkNames: [],\n\t\t\t\t\t\tinfo,\n\t\t\t\t\t\t// TODO webpack 5: remove .emitted\n\t\t\t\t\t\temitted: source.emitted || compilation.emittedAssets.has(name)\n\t\t\t\t\t};\n\n\t\t\t\t\tif (showPerformance) {\n\t\t\t\t\t\tobj.isOverSizeLimit = source.isOverSizeLimit;\n\t\t\t\t\t}\n\n\t\t\t\t\tassetsByFile[name] = obj;\n\t\t\t\t\treturn obj;\n\t\t\t\t})\n\t\t\t\t.filter(createAssetFilter());\n\t\t\tobj.filteredAssets = compilationAssets.length - obj.assets.length;\n\n\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\tfor (const asset of chunk.files) {\n\t\t\t\t\tif (assetsByFile[asset]) {\n\t\t\t\t\t\tfor (const id of chunk.ids) {\n\t\t\t\t\t\t\tassetsByFile[asset].chunks.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (chunk.name) {\n\t\t\t\t\t\t\tassetsByFile[asset].chunkNames.push(chunk.name);\n\t\t\t\t\t\t\tif (obj.assetsByChunkName[chunk.name]) {\n\t\t\t\t\t\t\t\tobj.assetsByChunkName[chunk.name] = []\n\t\t\t\t\t\t\t\t\t.concat(obj.assetsByChunkName[chunk.name])\n\t\t\t\t\t\t\t\t\t.concat([asset]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tobj.assetsByChunkName[chunk.name] = asset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.assets.sort(sortByField(sortAssets, obj.assets));\n\t\t}\n\n\t\tconst fnChunkGroup = groupMap => {\n\t\t\tconst obj = {};\n\t\t\tfor (const keyValuePair of groupMap) {\n\t\t\t\tconst name = keyValuePair[0];\n\t\t\t\tconst cg = keyValuePair[1];\n\t\t\t\tconst children = cg.getChildrenByOrders();\n\t\t\t\tobj[name] = {\n\t\t\t\t\tchunks: cg.chunks.map(c => c.id),\n\t\t\t\t\tassets: cg.chunks.reduce(\n\t\t\t\t\t\t(array, c) => array.concat(c.files || []),\n\t\t\t\t\t\t[]\n\t\t\t\t\t),\n\t\t\t\t\tchildren: Object.keys(children).reduce((obj, key) => {\n\t\t\t\t\t\tconst groups = children[key];\n\t\t\t\t\t\tobj[key] = groups.map(group => ({\n\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\tchunks: group.chunks.map(c => c.id),\n\t\t\t\t\t\t\tassets: group.chunks.reduce(\n\t\t\t\t\t\t\t\t(array, c) => array.concat(c.files || []),\n\t\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}));\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}, Object.create(null)),\n\t\t\t\t\tchildAssets: Object.keys(children).reduce((obj, key) => {\n\t\t\t\t\t\tconst groups = children[key];\n\t\t\t\t\t\tobj[key] = Array.from(\n\t\t\t\t\t\t\tgroups.reduce((set, group) => {\n\t\t\t\t\t\t\t\tfor (const chunk of group.chunks) {\n\t\t\t\t\t\t\t\t\tfor (const asset of chunk.files) {\n\t\t\t\t\t\t\t\t\t\tset.add(asset);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn set;\n\t\t\t\t\t\t\t}, new Set())\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}, Object.create(null))\n\t\t\t\t};\n\t\t\t\tif (showPerformance) {\n\t\t\t\t\tobj[name].isOverSizeLimit = cg.isOverSizeLimit;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t};\n\n\t\tif (showEntrypoints) {\n\t\t\tobj.entrypoints = fnChunkGroup(compilation.entrypoints);\n\t\t}\n\n\t\tif (showChunkGroups) {\n\t\t\tobj.namedChunkGroups = fnChunkGroup(compilation.namedChunkGroups);\n\t\t}\n\n\t\tconst fnModule = module => {\n\t\t\tconst path = [];\n\t\t\tlet current = module;\n\t\t\twhile (current.issuer) {\n\t\t\t\tpath.push((current = current.issuer));\n\t\t\t}\n\t\t\tpath.reverse();\n\t\t\tconst obj = {\n\t\t\t\tid: module.id,\n\t\t\t\tidentifier: module.identifier(),\n\t\t\t\tname: module.readableIdentifier(requestShortener),\n\t\t\t\tindex: module.index,\n\t\t\t\tindex2: module.index2,\n\t\t\t\tsize: module.size(),\n\t\t\t\tcacheable: module.buildInfo.cacheable,\n\t\t\t\tbuilt: !!module.built,\n\t\t\t\toptional: module.optional,\n\t\t\t\tprefetched: module.prefetched,\n\t\t\t\tchunks: Array.from(module.chunksIterable, chunk => chunk.id),\n\t\t\t\tissuer: module.issuer && module.issuer.identifier(),\n\t\t\t\tissuerId: module.issuer && module.issuer.id,\n\t\t\t\tissuerName:\n\t\t\t\t\tmodule.issuer && module.issuer.readableIdentifier(requestShortener),\n\t\t\t\tissuerPath:\n\t\t\t\t\tmodule.issuer &&\n\t\t\t\t\tpath.map(module => ({\n\t\t\t\t\t\tid: module.id,\n\t\t\t\t\t\tidentifier: module.identifier(),\n\t\t\t\t\t\tname: module.readableIdentifier(requestShortener),\n\t\t\t\t\t\tprofile: module.profile\n\t\t\t\t\t})),\n\t\t\t\tprofile: module.profile,\n\t\t\t\tfailed: !!module.error,\n\t\t\t\terrors: module.errors ? module.errors.length : 0,\n\t\t\t\twarnings: module.warnings ? module.warnings.length : 0\n\t\t\t};\n\t\t\tif (showModuleAssets) {\n\t\t\t\tobj.assets = Object.keys(module.buildInfo.assets || {});\n\t\t\t}\n\t\t\tif (showReasons) {\n\t\t\t\tobj.reasons = module.reasons\n\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\tif (a.module && !b.module) return -1;\n\t\t\t\t\t\tif (!a.module && b.module) return 1;\n\t\t\t\t\t\tif (a.module && b.module) {\n\t\t\t\t\t\t\tconst cmp = compareId(a.module.id, b.module.id);\n\t\t\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (a.dependency && !b.dependency) return -1;\n\t\t\t\t\t\tif (!a.dependency && b.dependency) return 1;\n\t\t\t\t\t\tif (a.dependency && b.dependency) {\n\t\t\t\t\t\t\tconst cmp = compareLocations(a.dependency.loc, b.dependency.loc);\n\t\t\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t\t\t\tif (a.dependency.type < b.dependency.type) return -1;\n\t\t\t\t\t\t\tif (a.dependency.type > b.dependency.type) return 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t})\n\t\t\t\t\t.map(reason => {\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tmoduleId: reason.module ? reason.module.id : null,\n\t\t\t\t\t\t\tmoduleIdentifier: reason.module\n\t\t\t\t\t\t\t\t? reason.module.identifier()\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tmodule: reason.module\n\t\t\t\t\t\t\t\t? reason.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tmoduleName: reason.module\n\t\t\t\t\t\t\t\t? reason.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\ttype: reason.dependency ? reason.dependency.type : null,\n\t\t\t\t\t\t\texplanation: reason.explanation,\n\t\t\t\t\t\t\tuserRequest: reason.dependency\n\t\t\t\t\t\t\t\t? reason.dependency.userRequest\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (reason.dependency) {\n\t\t\t\t\t\t\tconst locInfo = formatLocation(reason.dependency.loc);\n\t\t\t\t\t\t\tif (locInfo) {\n\t\t\t\t\t\t\t\tobj.loc = locInfo;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tif (showUsedExports) {\n\t\t\t\tif (module.used === true) {\n\t\t\t\t\tobj.usedExports = module.usedExports;\n\t\t\t\t} else if (module.used === false) {\n\t\t\t\t\tobj.usedExports = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showProvidedExports) {\n\t\t\t\tobj.providedExports = Array.isArray(module.buildMeta.providedExports)\n\t\t\t\t\t? module.buildMeta.providedExports\n\t\t\t\t\t: null;\n\t\t\t}\n\t\t\tif (showOptimizationBailout) {\n\t\t\t\tobj.optimizationBailout = module.optimizationBailout.map(item => {\n\t\t\t\t\tif (typeof item === \"function\") return item(requestShortener);\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (showDepth) {\n\t\t\t\tobj.depth = module.depth;\n\t\t\t}\n\t\t\tif (showNestedModules) {\n\t\t\t\tif (module.modules) {\n\t\t\t\t\tconst modules = module.modules;\n\t\t\t\t\tobj.modules = modules\n\t\t\t\t\t\t.sort(sortByField(\"depth\", modules))\n\t\t\t\t\t\t.filter(createModuleFilter())\n\t\t\t\t\t\t.map(fnModule);\n\t\t\t\t\tobj.filteredModules = modules.length - obj.modules.length;\n\t\t\t\t\tobj.modules.sort(sortByField(sortModules, obj.modules));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showSource && module._source) {\n\t\t\t\tobj.source = module._source.source();\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t\tif (showChunks) {\n\t\t\tobj.chunks = compilation.chunks.map(chunk => {\n\t\t\t\tconst parents = new Set();\n\t\t\t\tconst children = new Set();\n\t\t\t\tconst siblings = new Set();\n\t\t\t\tconst childIdByOrder = chunk.getChildIdsByOrders();\n\t\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\t\tfor (const parentGroup of chunkGroup.parentsIterable) {\n\t\t\t\t\t\tfor (const chunk of parentGroup.chunks) {\n\t\t\t\t\t\t\tparents.add(chunk.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const childGroup of chunkGroup.childrenIterable) {\n\t\t\t\t\t\tfor (const chunk of childGroup.chunks) {\n\t\t\t\t\t\t\tchildren.add(chunk.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const sibling of chunkGroup.chunks) {\n\t\t\t\t\t\tif (sibling !== chunk) siblings.add(sibling.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst obj = {\n\t\t\t\t\tid: chunk.id,\n\t\t\t\t\trendered: chunk.rendered,\n\t\t\t\t\tinitial: chunk.canBeInitial(),\n\t\t\t\t\tentry: chunk.hasRuntime(),\n\t\t\t\t\trecorded: chunk.recorded,\n\t\t\t\t\treason: chunk.chunkReason,\n\t\t\t\t\tsize: chunk.modulesSize(),\n\t\t\t\t\tnames: chunk.name ? [chunk.name] : [],\n\t\t\t\t\tfiles: chunk.files.slice(),\n\t\t\t\t\thash: chunk.renderedHash,\n\t\t\t\t\tsiblings: Array.from(siblings).sort(compareId),\n\t\t\t\t\tparents: Array.from(parents).sort(compareId),\n\t\t\t\t\tchildren: Array.from(children).sort(compareId),\n\t\t\t\t\tchildrenByOrder: childIdByOrder\n\t\t\t\t};\n\t\t\t\tif (showChunkModules) {\n\t\t\t\t\tconst modules = chunk.getModules();\n\t\t\t\t\tobj.modules = modules\n\t\t\t\t\t\t.slice()\n\t\t\t\t\t\t.sort(sortByField(\"depth\", modules))\n\t\t\t\t\t\t.filter(createModuleFilter())\n\t\t\t\t\t\t.map(fnModule);\n\t\t\t\t\tobj.filteredModules = chunk.getNumberOfModules() - obj.modules.length;\n\t\t\t\t\tobj.modules.sort(sortByField(sortModules, obj.modules));\n\t\t\t\t}\n\t\t\t\tif (showChunkOrigins) {\n\t\t\t\t\tobj.origins = Array.from(chunk.groupsIterable, g => g.origins)\n\t\t\t\t\t\t.reduce((a, b) => a.concat(b), [])\n\t\t\t\t\t\t.map(origin => ({\n\t\t\t\t\t\t\tmoduleId: origin.module ? origin.module.id : undefined,\n\t\t\t\t\t\t\tmodule: origin.module ? origin.module.identifier() : \"\",\n\t\t\t\t\t\t\tmoduleIdentifier: origin.module ? origin.module.identifier() : \"\",\n\t\t\t\t\t\t\tmoduleName: origin.module\n\t\t\t\t\t\t\t\t? origin.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\tloc: formatLocation(origin.loc),\n\t\t\t\t\t\t\trequest: origin.request,\n\t\t\t\t\t\t\treasons: origin.reasons || []\n\t\t\t\t\t\t}))\n\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\tconst cmp1 = compareId(a.moduleId, b.moduleId);\n\t\t\t\t\t\t\tif (cmp1) return cmp1;\n\t\t\t\t\t\t\tconst cmp2 = compareId(a.loc, b.loc);\n\t\t\t\t\t\t\tif (cmp2) return cmp2;\n\t\t\t\t\t\t\tconst cmp3 = compareId(a.request, b.request);\n\t\t\t\t\t\t\tif (cmp3) return cmp3;\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t});\n\t\t\tobj.chunks.sort(sortByField(sortChunks, obj.chunks));\n\t\t}\n\t\tif (showModules) {\n\t\t\tobj.modules = compilation.modules\n\t\t\t\t.slice()\n\t\t\t\t.sort(sortByField(\"depth\", compilation.modules))\n\t\t\t\t.filter(createModuleFilter())\n\t\t\t\t.map(fnModule);\n\t\t\tobj.filteredModules = compilation.modules.length - obj.modules.length;\n\t\t\tobj.modules.sort(sortByField(sortModules, obj.modules));\n\t\t}\n\t\tif (showLogging) {\n\t\t\tconst util = require(\"util\");\n\t\t\tobj.logging = {};\n\t\t\tlet acceptedTypes;\n\t\t\tlet collapsedGroups = false;\n\t\t\tswitch (showLogging) {\n\t\t\t\tcase \"none\":\n\t\t\t\t\tacceptedTypes = new Set([]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"error\":\n\t\t\t\t\tacceptedTypes = new Set([LogType.error]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"warn\":\n\t\t\t\t\tacceptedTypes = new Set([LogType.error, LogType.warn]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"info\":\n\t\t\t\t\tacceptedTypes = new Set([LogType.error, LogType.warn, LogType.info]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase true:\n\t\t\t\tcase \"log\":\n\t\t\t\t\tacceptedTypes = new Set([\n\t\t\t\t\t\tLogType.error,\n\t\t\t\t\t\tLogType.warn,\n\t\t\t\t\t\tLogType.info,\n\t\t\t\t\t\tLogType.log,\n\t\t\t\t\t\tLogType.group,\n\t\t\t\t\t\tLogType.groupEnd,\n\t\t\t\t\t\tLogType.groupCollapsed,\n\t\t\t\t\t\tLogType.clear\n\t\t\t\t\t]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"verbose\":\n\t\t\t\t\tacceptedTypes = new Set([\n\t\t\t\t\t\tLogType.error,\n\t\t\t\t\t\tLogType.warn,\n\t\t\t\t\t\tLogType.info,\n\t\t\t\t\t\tLogType.log,\n\t\t\t\t\t\tLogType.group,\n\t\t\t\t\t\tLogType.groupEnd,\n\t\t\t\t\t\tLogType.groupCollapsed,\n\t\t\t\t\t\tLogType.profile,\n\t\t\t\t\t\tLogType.profileEnd,\n\t\t\t\t\t\tLogType.time,\n\t\t\t\t\t\tLogType.status,\n\t\t\t\t\t\tLogType.clear\n\t\t\t\t\t]);\n\t\t\t\t\tcollapsedGroups = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (const [origin, logEntries] of compilation.logging) {\n\t\t\t\tconst debugMode = loggingDebug.some(fn => fn(origin));\n\t\t\t\tlet collapseCounter = 0;\n\t\t\t\tlet processedLogEntries = logEntries;\n\t\t\t\tif (!debugMode) {\n\t\t\t\t\tprocessedLogEntries = processedLogEntries.filter(entry => {\n\t\t\t\t\t\tif (!acceptedTypes.has(entry.type)) return false;\n\t\t\t\t\t\tif (!collapsedGroups) {\n\t\t\t\t\t\t\tswitch (entry.type) {\n\t\t\t\t\t\t\t\tcase LogType.groupCollapsed:\n\t\t\t\t\t\t\t\t\tcollapseCounter++;\n\t\t\t\t\t\t\t\t\treturn collapseCounter === 1;\n\t\t\t\t\t\t\t\tcase LogType.group:\n\t\t\t\t\t\t\t\t\tif (collapseCounter > 0) collapseCounter++;\n\t\t\t\t\t\t\t\t\treturn collapseCounter === 0;\n\t\t\t\t\t\t\t\tcase LogType.groupEnd:\n\t\t\t\t\t\t\t\t\tif (collapseCounter > 0) {\n\t\t\t\t\t\t\t\t\t\tcollapseCounter--;\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn collapseCounter === 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tprocessedLogEntries = processedLogEntries.map(entry => {\n\t\t\t\t\tlet message = undefined;\n\t\t\t\t\tif (entry.type === LogType.time) {\n\t\t\t\t\t\tmessage = `${entry.args[0]}: ${entry.args[1] * 1000 +\n\t\t\t\t\t\t\tentry.args[2] / 1000000}ms`;\n\t\t\t\t\t} else if (entry.args && entry.args.length > 0) {\n\t\t\t\t\t\tmessage = util.format(entry.args[0], ...entry.args.slice(1));\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype:\n\t\t\t\t\t\t\t(debugMode || collapsedGroups) &&\n\t\t\t\t\t\t\tentry.type === LogType.groupCollapsed\n\t\t\t\t\t\t\t\t? LogType.group\n\t\t\t\t\t\t\t\t: entry.type,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\ttrace: showLoggingTrace && entry.trace ? entry.trace : undefined\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tlet name = identifierUtils\n\t\t\t\t\t.makePathsRelative(context, origin, compilation.cache)\n\t\t\t\t\t.replace(/\\|/g, \" \");\n\t\t\t\tif (name in obj.logging) {\n\t\t\t\t\tlet i = 1;\n\t\t\t\t\twhile (`${name}#${i}` in obj.logging) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tname = `${name}#${i}`;\n\t\t\t\t}\n\t\t\t\tobj.logging[name] = {\n\t\t\t\t\tentries: processedLogEntries,\n\t\t\t\t\tfilteredEntries: logEntries.length - processedLogEntries.length,\n\t\t\t\t\tdebug: debugMode\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tif (showChildren) {\n\t\t\tobj.children = compilation.children.map((child, idx) => {\n\t\t\t\tconst childOptions = Stats.getChildOptions(options, idx);\n\t\t\t\tconst obj = new Stats(child).toJson(childOptions, forToString);\n\t\t\t\tdelete obj.hash;\n\t\t\t\tdelete obj.version;\n\t\t\t\tif (child.name) {\n\t\t\t\t\tobj.name = identifierUtils.makePathsRelative(\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tchild.name,\n\t\t\t\t\t\tcompilation.cache\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t});\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\ttoString(options) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst useColors = optionsOrFallback(options.colors, false);\n\n\t\tconst obj = this.toJson(options, true);\n\n\t\treturn Stats.jsonToString(obj, useColors);\n\t}\n\n\tstatic jsonToString(obj, useColors) {\n\t\tconst buf = [];\n\n\t\tconst defaultColors = {\n\t\t\tbold: \"\\u001b[1m\",\n\t\t\tyellow: \"\\u001b[1m\\u001b[33m\",\n\t\t\tred: \"\\u001b[1m\\u001b[31m\",\n\t\t\tgreen: \"\\u001b[1m\\u001b[32m\",\n\t\t\tcyan: \"\\u001b[1m\\u001b[36m\",\n\t\t\tmagenta: \"\\u001b[1m\\u001b[35m\"\n\t\t};\n\n\t\tconst colors = Object.keys(defaultColors).reduce(\n\t\t\t(obj, color) => {\n\t\t\t\tobj[color] = str => {\n\t\t\t\t\tif (useColors) {\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\tuseColors === true || useColors[color] === undefined\n\t\t\t\t\t\t\t\t? defaultColors[color]\n\t\t\t\t\t\t\t\t: useColors[color]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbuf.push(str);\n\t\t\t\t\tif (useColors) {\n\t\t\t\t\t\tbuf.push(\"\\u001b[39m\\u001b[22m\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t{\n\t\t\t\tnormal: str => buf.push(str)\n\t\t\t}\n\t\t);\n\n\t\tconst coloredTime = time => {\n\t\t\tlet times = [800, 400, 200, 100];\n\t\t\tif (obj.time) {\n\t\t\t\ttimes = [obj.time / 2, obj.time / 4, obj.time / 8, obj.time / 16];\n\t\t\t}\n\t\t\tif (time < times[3]) colors.normal(`${time}ms`);\n\t\t\telse if (time < times[2]) colors.bold(`${time}ms`);\n\t\t\telse if (time < times[1]) colors.green(`${time}ms`);\n\t\t\telse if (time < times[0]) colors.yellow(`${time}ms`);\n\t\t\telse colors.red(`${time}ms`);\n\t\t};\n\n\t\tconst newline = () => buf.push(\"\\n\");\n\n\t\tconst getText = (arr, row, col) => {\n\t\t\treturn arr[row][col].value;\n\t\t};\n\n\t\tconst table = (array, align, splitter) => {\n\t\t\tconst rows = array.length;\n\t\t\tconst cols = array[0].length;\n\t\t\tconst colSizes = new Array(cols);\n\t\t\tfor (let col = 0; col < cols; col++) {\n\t\t\t\tcolSizes[col] = 0;\n\t\t\t}\n\t\t\tfor (let row = 0; row < rows; row++) {\n\t\t\t\tfor (let col = 0; col < cols; col++) {\n\t\t\t\t\tconst value = `${getText(array, row, col)}`;\n\t\t\t\t\tif (value.length > colSizes[col]) {\n\t\t\t\t\t\tcolSizes[col] = value.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let row = 0; row < rows; row++) {\n\t\t\t\tfor (let col = 0; col < cols; col++) {\n\t\t\t\t\tconst format = array[row][col].color;\n\t\t\t\t\tconst value = `${getText(array, row, col)}`;\n\t\t\t\t\tlet l = value.length;\n\t\t\t\t\tif (align[col] === \"l\") {\n\t\t\t\t\t\tformat(value);\n\t\t\t\t\t}\n\t\t\t\t\tfor (; l < colSizes[col] && col !== cols - 1; l++) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (align[col] === \"r\") {\n\t\t\t\t\t\tformat(value);\n\t\t\t\t\t}\n\t\t\t\t\tif (col + 1 < cols && colSizes[col] !== 0) {\n\t\t\t\t\t\tcolors.normal(splitter || \"  \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t}\n\t\t};\n\n\t\tconst getAssetColor = (asset, defaultColor) => {\n\t\t\tif (asset.isOverSizeLimit) {\n\t\t\t\treturn colors.yellow;\n\t\t\t}\n\n\t\t\treturn defaultColor;\n\t\t};\n\n\t\tif (obj.hash) {\n\t\t\tcolors.normal(\"Hash: \");\n\t\t\tcolors.bold(obj.hash);\n\t\t\tnewline();\n\t\t}\n\t\tif (obj.version) {\n\t\t\tcolors.normal(\"Version: webpack \");\n\t\t\tcolors.bold(obj.version);\n\t\t\tnewline();\n\t\t}\n\t\tif (typeof obj.time === \"number\") {\n\t\t\tcolors.normal(\"Time: \");\n\t\t\tcolors.bold(obj.time);\n\t\t\tcolors.normal(\"ms\");\n\t\t\tnewline();\n\t\t}\n\t\tif (typeof obj.builtAt === \"number\") {\n\t\t\tconst builtAtDate = new Date(obj.builtAt);\n\t\t\tlet timeZone = undefined;\n\n\t\t\ttry {\n\t\t\t\tbuiltAtDate.toLocaleTimeString();\n\t\t\t} catch (err) {\n\t\t\t\t// Force UTC if runtime timezone is unsupported\n\t\t\t\ttimeZone = \"UTC\";\n\t\t\t}\n\n\t\t\tcolors.normal(\"Built at: \");\n\t\t\tcolors.normal(\n\t\t\t\tbuiltAtDate.toLocaleDateString(undefined, {\n\t\t\t\t\tday: \"2-digit\",\n\t\t\t\t\tmonth: \"2-digit\",\n\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\ttimeZone\n\t\t\t\t})\n\t\t\t);\n\t\t\tcolors.normal(\" \");\n\t\t\tcolors.bold(builtAtDate.toLocaleTimeString(undefined, { timeZone }));\n\t\t\tnewline();\n\t\t}\n\t\tif (obj.env) {\n\t\t\tcolors.normal(\"Environment (--env): \");\n\t\t\tcolors.bold(JSON.stringify(obj.env, null, 2));\n\t\t\tnewline();\n\t\t}\n\t\tif (obj.publicPath) {\n\t\t\tcolors.normal(\"PublicPath: \");\n\t\t\tcolors.bold(obj.publicPath);\n\t\t\tnewline();\n\t\t}\n\n\t\tif (obj.assets && obj.assets.length > 0) {\n\t\t\tconst t = [\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Asset\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Size\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Chunks\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Chunk Names\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t];\n\t\t\tfor (const asset of obj.assets) {\n\t\t\t\tt.push([\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.name,\n\t\t\t\t\t\tcolor: getAssetColor(asset, colors.green)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: SizeFormatHelpers.formatSize(asset.size),\n\t\t\t\t\t\tcolor: getAssetColor(asset, colors.normal)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.chunks.join(\", \"),\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: [\n\t\t\t\t\t\t\tasset.emitted && \"[emitted]\",\n\t\t\t\t\t\t\tasset.info.immutable && \"[immutable]\",\n\t\t\t\t\t\t\tasset.info.development && \"[dev]\",\n\t\t\t\t\t\t\tasset.info.hotModuleReplacement && \"[hmr]\"\n\t\t\t\t\t\t]\n\t\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t\t.join(\" \"),\n\t\t\t\t\t\tcolor: colors.green\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.isOverSizeLimit ? \"[big]\" : \"\",\n\t\t\t\t\t\tcolor: getAssetColor(asset, colors.normal)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.chunkNames.join(\", \"),\n\t\t\t\t\t\tcolor: colors.normal\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}\n\t\t\ttable(t, \"rrrlll\");\n\t\t}\n\t\tif (obj.filteredAssets > 0) {\n\t\t\tcolors.normal(\" \");\n\t\t\tif (obj.assets.length > 0) colors.normal(\"+ \");\n\t\t\tcolors.normal(obj.filteredAssets);\n\t\t\tif (obj.assets.length > 0) colors.normal(\" hidden\");\n\t\t\tcolors.normal(obj.filteredAssets !== 1 ? \" assets\" : \" asset\");\n\t\t\tnewline();\n\t\t}\n\n\t\tconst processChunkGroups = (namedGroups, prefix) => {\n\t\t\tfor (const name of Object.keys(namedGroups)) {\n\t\t\t\tconst cg = namedGroups[name];\n\t\t\t\tcolors.normal(`${prefix} `);\n\t\t\t\tcolors.bold(name);\n\t\t\t\tif (cg.isOverSizeLimit) {\n\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\tcolors.yellow(\"[big]\");\n\t\t\t\t}\n\t\t\t\tcolors.normal(\" =\");\n\t\t\t\tfor (const asset of cg.assets) {\n\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\tcolors.green(asset);\n\t\t\t\t}\n\t\t\t\tfor (const name of Object.keys(cg.childAssets)) {\n\t\t\t\t\tconst assets = cg.childAssets[name];\n\t\t\t\t\tif (assets && assets.length > 0) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.magenta(`(${name}:`);\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t\tcolors.green(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolors.magenta(\")\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t}\n\t\t};\n\n\t\tif (obj.entrypoints) {\n\t\t\tprocessChunkGroups(obj.entrypoints, \"Entrypoint\");\n\t\t}\n\n\t\tif (obj.namedChunkGroups) {\n\t\t\tlet outputChunkGroups = obj.namedChunkGroups;\n\t\t\tif (obj.entrypoints) {\n\t\t\t\toutputChunkGroups = Object.keys(outputChunkGroups)\n\t\t\t\t\t.filter(name => !obj.entrypoints[name])\n\t\t\t\t\t.reduce((result, name) => {\n\t\t\t\t\t\tresult[name] = obj.namedChunkGroups[name];\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}, {});\n\t\t\t}\n\t\t\tprocessChunkGroups(outputChunkGroups, \"Chunk Group\");\n\t\t}\n\n\t\tconst modulesByIdentifier = {};\n\t\tif (obj.modules) {\n\t\t\tfor (const module of obj.modules) {\n\t\t\t\tmodulesByIdentifier[`$${module.identifier}`] = module;\n\t\t\t}\n\t\t} else if (obj.chunks) {\n\t\t\tfor (const chunk of obj.chunks) {\n\t\t\t\tif (chunk.modules) {\n\t\t\t\t\tfor (const module of chunk.modules) {\n\t\t\t\t\t\tmodulesByIdentifier[`$${module.identifier}`] = module;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst processModuleAttributes = module => {\n\t\t\tcolors.normal(\" \");\n\t\t\tcolors.normal(SizeFormatHelpers.formatSize(module.size));\n\t\t\tif (module.chunks) {\n\t\t\t\tfor (const chunk of module.chunks) {\n\t\t\t\t\tcolors.normal(\" {\");\n\t\t\t\t\tcolors.yellow(chunk);\n\t\t\t\t\tcolors.normal(\"}\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof module.depth === \"number\") {\n\t\t\t\tcolors.normal(` [depth ${module.depth}]`);\n\t\t\t}\n\t\t\tif (module.cacheable === false) {\n\t\t\t\tcolors.red(\" [not cacheable]\");\n\t\t\t}\n\t\t\tif (module.optional) {\n\t\t\t\tcolors.yellow(\" [optional]\");\n\t\t\t}\n\t\t\tif (module.built) {\n\t\t\t\tcolors.green(\" [built]\");\n\t\t\t}\n\t\t\tif (module.assets && module.assets.length) {\n\t\t\t\tcolors.magenta(\n\t\t\t\t\t` [${module.assets.length} asset${\n\t\t\t\t\t\tmodule.assets.length === 1 ? \"\" : \"s\"\n\t\t\t\t\t}]`\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (module.prefetched) {\n\t\t\t\tcolors.magenta(\" [prefetched]\");\n\t\t\t}\n\t\t\tif (module.failed) colors.red(\" [failed]\");\n\t\t\tif (module.warnings) {\n\t\t\t\tcolors.yellow(\n\t\t\t\t\t` [${module.warnings} warning${module.warnings === 1 ? \"\" : \"s\"}]`\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (module.errors) {\n\t\t\t\tcolors.red(\n\t\t\t\t\t` [${module.errors} error${module.errors === 1 ? \"\" : \"s\"}]`\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tconst processModuleContent = (module, prefix) => {\n\t\t\tif (Array.isArray(module.providedExports)) {\n\t\t\t\tcolors.normal(prefix);\n\t\t\t\tif (module.providedExports.length === 0) {\n\t\t\t\t\tcolors.cyan(\"[no exports]\");\n\t\t\t\t} else {\n\t\t\t\t\tcolors.cyan(`[exports: ${module.providedExports.join(\", \")}]`);\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t}\n\t\t\tif (module.usedExports !== undefined) {\n\t\t\t\tif (module.usedExports !== true) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tif (module.usedExports === null) {\n\t\t\t\t\t\tcolors.cyan(\"[used exports unknown]\");\n\t\t\t\t\t} else if (module.usedExports === false) {\n\t\t\t\t\t\tcolors.cyan(\"[no exports used]\");\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tArray.isArray(module.usedExports) &&\n\t\t\t\t\t\tmodule.usedExports.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tcolors.cyan(\"[no exports used]\");\n\t\t\t\t\t} else if (Array.isArray(module.usedExports)) {\n\t\t\t\t\t\tconst providedExportsCount = Array.isArray(module.providedExports)\n\t\t\t\t\t\t\t? module.providedExports.length\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tprovidedExportsCount !== null &&\n\t\t\t\t\t\t\tprovidedExportsCount === module.usedExports.length\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcolors.cyan(\"[all exports used]\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolors.cyan(\n\t\t\t\t\t\t\t\t`[only some exports used: ${module.usedExports.join(\", \")}]`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Array.isArray(module.optimizationBailout)) {\n\t\t\t\tfor (const item of module.optimizationBailout) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tcolors.yellow(item);\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.reasons) {\n\t\t\t\tfor (const reason of module.reasons) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tif (reason.type) {\n\t\t\t\t\t\tcolors.normal(reason.type);\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.userRequest) {\n\t\t\t\t\t\tcolors.cyan(reason.userRequest);\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.moduleId !== null) {\n\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\tcolors.normal(reason.moduleId);\n\t\t\t\t\t\tcolors.normal(\"]\");\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.module && reason.module !== reason.moduleId) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.magenta(reason.module);\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.loc) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.normal(reason.loc);\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.explanation) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.cyan(reason.explanation);\n\t\t\t\t\t}\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.profile) {\n\t\t\t\tcolors.normal(prefix);\n\t\t\t\tlet sum = 0;\n\t\t\t\tif (module.issuerPath) {\n\t\t\t\t\tfor (const m of module.issuerPath) {\n\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\tcolors.normal(m.id);\n\t\t\t\t\t\tcolors.normal(\"] \");\n\t\t\t\t\t\tif (m.profile) {\n\t\t\t\t\t\t\tconst time = (m.profile.factory || 0) + (m.profile.building || 0);\n\t\t\t\t\t\t\tcoloredTime(time);\n\t\t\t\t\t\t\tsum += time;\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolors.normal(\"-> \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const key of Object.keys(module.profile)) {\n\t\t\t\t\tcolors.normal(`${key}:`);\n\t\t\t\t\tconst time = module.profile[key];\n\t\t\t\t\tcoloredTime(time);\n\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\tsum += time;\n\t\t\t\t}\n\t\t\t\tcolors.normal(\"= \");\n\t\t\t\tcoloredTime(sum);\n\t\t\t\tnewline();\n\t\t\t}\n\t\t\tif (module.modules) {\n\t\t\t\tprocessModulesList(module, prefix + \"| \");\n\t\t\t}\n\t\t};\n\n\t\tconst processModulesList = (obj, prefix) => {\n\t\t\tif (obj.modules) {\n\t\t\t\tlet maxModuleId = 0;\n\t\t\t\tfor (const module of obj.modules) {\n\t\t\t\t\tif (typeof module.id === \"number\") {\n\t\t\t\t\t\tif (maxModuleId < module.id) maxModuleId = module.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet contentPrefix = prefix + \"    \";\n\t\t\t\tif (maxModuleId >= 10) contentPrefix += \" \";\n\t\t\t\tif (maxModuleId >= 100) contentPrefix += \" \";\n\t\t\t\tif (maxModuleId >= 1000) contentPrefix += \" \";\n\t\t\t\tfor (const module of obj.modules) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tconst name = module.name || module.identifier;\n\t\t\t\t\tif (typeof module.id === \"string\" || typeof module.id === \"number\") {\n\t\t\t\t\t\tif (typeof module.id === \"number\") {\n\t\t\t\t\t\t\tif (module.id < 1000 && maxModuleId >= 1000) colors.normal(\" \");\n\t\t\t\t\t\t\tif (module.id < 100 && maxModuleId >= 100) colors.normal(\" \");\n\t\t\t\t\t\t\tif (module.id < 10 && maxModuleId >= 10) colors.normal(\" \");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (maxModuleId >= 1000) colors.normal(\" \");\n\t\t\t\t\t\t\tif (maxModuleId >= 100) colors.normal(\" \");\n\t\t\t\t\t\t\tif (maxModuleId >= 10) colors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (name !== module.id) {\n\t\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\t\tcolors.normal(module.id);\n\t\t\t\t\t\t\tcolors.normal(\"]\");\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\t\tcolors.bold(module.id);\n\t\t\t\t\t\t\tcolors.normal(\"]\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (name !== module.id) {\n\t\t\t\t\t\tcolors.bold(name);\n\t\t\t\t\t}\n\t\t\t\t\tprocessModuleAttributes(module);\n\t\t\t\t\tnewline();\n\t\t\t\t\tprocessModuleContent(module, contentPrefix);\n\t\t\t\t}\n\t\t\t\tif (obj.filteredModules > 0) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tcolors.normal(\"   \");\n\t\t\t\t\tif (obj.modules.length > 0) colors.normal(\" + \");\n\t\t\t\t\tcolors.normal(obj.filteredModules);\n\t\t\t\t\tif (obj.modules.length > 0) colors.normal(\" hidden\");\n\t\t\t\t\tcolors.normal(obj.filteredModules !== 1 ? \" modules\" : \" module\");\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (obj.chunks) {\n\t\t\tfor (const chunk of obj.chunks) {\n\t\t\t\tcolors.normal(\"chunk \");\n\t\t\t\tif (chunk.id < 1000) colors.normal(\" \");\n\t\t\t\tif (chunk.id < 100) colors.normal(\" \");\n\t\t\t\tif (chunk.id < 10) colors.normal(\" \");\n\t\t\t\tcolors.normal(\"{\");\n\t\t\t\tcolors.yellow(chunk.id);\n\t\t\t\tcolors.normal(\"} \");\n\t\t\t\tcolors.green(chunk.files.join(\", \"));\n\t\t\t\tif (chunk.names && chunk.names.length > 0) {\n\t\t\t\t\tcolors.normal(\" (\");\n\t\t\t\t\tcolors.normal(chunk.names.join(\", \"));\n\t\t\t\t\tcolors.normal(\")\");\n\t\t\t\t}\n\t\t\t\tcolors.normal(\" \");\n\t\t\t\tcolors.normal(SizeFormatHelpers.formatSize(chunk.size));\n\t\t\t\tfor (const id of chunk.parents) {\n\t\t\t\t\tcolors.normal(\" <{\");\n\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\tcolors.normal(\"}>\");\n\t\t\t\t}\n\t\t\t\tfor (const id of chunk.siblings) {\n\t\t\t\t\tcolors.normal(\" ={\");\n\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\tcolors.normal(\"}=\");\n\t\t\t\t}\n\t\t\t\tfor (const id of chunk.children) {\n\t\t\t\t\tcolors.normal(\" >{\");\n\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\tcolors.normal(\"}<\");\n\t\t\t\t}\n\t\t\t\tif (chunk.childrenByOrder) {\n\t\t\t\t\tfor (const name of Object.keys(chunk.childrenByOrder)) {\n\t\t\t\t\t\tconst children = chunk.childrenByOrder[name];\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.magenta(`(${name}:`);\n\t\t\t\t\t\tfor (const id of children) {\n\t\t\t\t\t\t\tcolors.normal(\" {\");\n\t\t\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\t\t\tcolors.normal(\"}\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolors.magenta(\")\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (chunk.entry) {\n\t\t\t\t\tcolors.yellow(\" [entry]\");\n\t\t\t\t} else if (chunk.initial) {\n\t\t\t\t\tcolors.yellow(\" [initial]\");\n\t\t\t\t}\n\t\t\t\tif (chunk.rendered) {\n\t\t\t\t\tcolors.green(\" [rendered]\");\n\t\t\t\t}\n\t\t\t\tif (chunk.recorded) {\n\t\t\t\t\tcolors.green(\" [recorded]\");\n\t\t\t\t}\n\t\t\t\tif (chunk.reason) {\n\t\t\t\t\tcolors.yellow(` ${chunk.reason}`);\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t\tif (chunk.origins) {\n\t\t\t\t\tfor (const origin of chunk.origins) {\n\t\t\t\t\t\tcolors.normal(\"    > \");\n\t\t\t\t\t\tif (origin.reasons && origin.reasons.length) {\n\t\t\t\t\t\t\tcolors.yellow(origin.reasons.join(\" \"));\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (origin.request) {\n\t\t\t\t\t\t\tcolors.normal(origin.request);\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (origin.module) {\n\t\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\t\tcolors.normal(origin.moduleId);\n\t\t\t\t\t\t\tcolors.normal(\"] \");\n\t\t\t\t\t\t\tconst module = modulesByIdentifier[`$${origin.module}`];\n\t\t\t\t\t\t\tif (module) {\n\t\t\t\t\t\t\t\tcolors.bold(module.name);\n\t\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (origin.loc) {\n\t\t\t\t\t\t\tcolors.normal(origin.loc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewline();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprocessModulesList(chunk, \" \");\n\t\t\t}\n\t\t}\n\n\t\tprocessModulesList(obj, \"\");\n\n\t\tif (obj.logging) {\n\t\t\tfor (const origin of Object.keys(obj.logging)) {\n\t\t\t\tconst logData = obj.logging[origin];\n\t\t\t\tif (logData.entries.length > 0) {\n\t\t\t\t\tnewline();\n\t\t\t\t\tif (logData.debug) {\n\t\t\t\t\t\tcolors.red(\"DEBUG \");\n\t\t\t\t\t}\n\t\t\t\t\tcolors.bold(\"LOG from \" + origin);\n\t\t\t\t\tnewline();\n\t\t\t\t\tlet indent = \"\";\n\t\t\t\t\tfor (const entry of logData.entries) {\n\t\t\t\t\t\tlet color = colors.normal;\n\t\t\t\t\t\tlet prefix = \"    \";\n\t\t\t\t\t\tswitch (entry.type) {\n\t\t\t\t\t\t\tcase LogType.clear:\n\t\t\t\t\t\t\t\tcolors.normal(`${indent}-------`);\n\t\t\t\t\t\t\t\tnewline();\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tcase LogType.error:\n\t\t\t\t\t\t\t\tcolor = colors.red;\n\t\t\t\t\t\t\t\tprefix = \"<e> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.warn:\n\t\t\t\t\t\t\t\tcolor = colors.yellow;\n\t\t\t\t\t\t\t\tprefix = \"<w> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.info:\n\t\t\t\t\t\t\t\tcolor = colors.green;\n\t\t\t\t\t\t\t\tprefix = \"<i> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.log:\n\t\t\t\t\t\t\t\tcolor = colors.bold;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.trace:\n\t\t\t\t\t\t\tcase LogType.debug:\n\t\t\t\t\t\t\t\tcolor = colors.normal;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.status:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"<s> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.profile:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"<p> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.profileEnd:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"</p> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.time:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"<t> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.group:\n\t\t\t\t\t\t\t\tcolor = colors.cyan;\n\t\t\t\t\t\t\t\tprefix = \"<-> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.groupCollapsed:\n\t\t\t\t\t\t\t\tcolor = colors.cyan;\n\t\t\t\t\t\t\t\tprefix = \"<+> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.groupEnd:\n\t\t\t\t\t\t\t\tif (indent.length >= 2)\n\t\t\t\t\t\t\t\t\tindent = indent.slice(0, indent.length - 2);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (entry.message) {\n\t\t\t\t\t\t\tfor (const line of entry.message.split(\"\\n\")) {\n\t\t\t\t\t\t\t\tcolors.normal(`${indent}${prefix}`);\n\t\t\t\t\t\t\t\tcolor(line);\n\t\t\t\t\t\t\t\tnewline();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (entry.trace) {\n\t\t\t\t\t\t\tfor (const line of entry.trace) {\n\t\t\t\t\t\t\t\tcolors.normal(`${indent}| ${line}`);\n\t\t\t\t\t\t\t\tnewline();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (entry.type) {\n\t\t\t\t\t\t\tcase LogType.group:\n\t\t\t\t\t\t\t\tindent += \"  \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (logData.filteredEntries) {\n\t\t\t\t\t\tcolors.normal(`+ ${logData.filteredEntries} hidden lines`);\n\t\t\t\t\t\tnewline();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj._showWarnings && obj.warnings) {\n\t\t\tfor (const warning of obj.warnings) {\n\t\t\t\tnewline();\n\t\t\t\tcolors.yellow(`WARNING in ${warning}`);\n\t\t\t\tnewline();\n\t\t\t}\n\t\t}\n\t\tif (obj._showErrors && obj.errors) {\n\t\t\tfor (const error of obj.errors) {\n\t\t\t\tnewline();\n\t\t\t\tcolors.red(`ERROR in ${error}`);\n\t\t\t\tnewline();\n\t\t\t}\n\t\t}\n\t\tif (obj.children) {\n\t\t\tfor (const child of obj.children) {\n\t\t\t\tconst childString = Stats.jsonToString(child, useColors);\n\t\t\t\tif (childString) {\n\t\t\t\t\tif (child.name) {\n\t\t\t\t\t\tcolors.normal(\"Child \");\n\t\t\t\t\t\tcolors.bold(child.name);\n\t\t\t\t\t\tcolors.normal(\":\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors.normal(\"Child\");\n\t\t\t\t\t}\n\t\t\t\t\tnewline();\n\t\t\t\t\tbuf.push(\"    \");\n\t\t\t\t\tbuf.push(childString.replace(/\\n/g, \"\\n    \"));\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (obj.needAdditionalPass) {\n\t\t\tcolors.yellow(\n\t\t\t\t\"Compilation needs an additional pass and will compile again.\"\n\t\t\t);\n\t\t}\n\n\t\twhile (buf[buf.length - 1] === \"\\n\") {\n\t\t\tbuf.pop();\n\t\t}\n\t\treturn buf.join(\"\");\n\t}\n\n\tstatic presetToOptions(name) {\n\t\t// Accepted values: none, errors-only, minimal, normal, detailed, verbose\n\t\t// Any other falsy value will behave as 'none', truthy values as 'normal'\n\t\tconst pn =\n\t\t\t(typeof name === \"string\" && name.toLowerCase()) || name || \"none\";\n\t\tswitch (pn) {\n\t\t\tcase \"none\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false\n\t\t\t\t};\n\t\t\tcase \"verbose\":\n\t\t\t\treturn {\n\t\t\t\t\tentrypoints: true,\n\t\t\t\t\tchunkGroups: true,\n\t\t\t\t\tmodules: false,\n\t\t\t\t\tchunks: true,\n\t\t\t\t\tchunkModules: true,\n\t\t\t\t\tchunkOrigins: true,\n\t\t\t\t\tdepth: true,\n\t\t\t\t\tenv: true,\n\t\t\t\t\treasons: true,\n\t\t\t\t\tusedExports: true,\n\t\t\t\t\tprovidedExports: true,\n\t\t\t\t\toptimizationBailout: true,\n\t\t\t\t\terrorDetails: true,\n\t\t\t\t\tpublicPath: true,\n\t\t\t\t\tlogging: \"verbose\",\n\t\t\t\t\texclude: false,\n\t\t\t\t\tmaxModules: Infinity\n\t\t\t\t};\n\t\t\tcase \"detailed\":\n\t\t\t\treturn {\n\t\t\t\t\tentrypoints: true,\n\t\t\t\t\tchunkGroups: true,\n\t\t\t\t\tchunks: true,\n\t\t\t\t\tchunkModules: false,\n\t\t\t\t\tchunkOrigins: true,\n\t\t\t\t\tdepth: true,\n\t\t\t\t\tusedExports: true,\n\t\t\t\t\tprovidedExports: true,\n\t\t\t\t\toptimizationBailout: true,\n\t\t\t\t\terrorDetails: true,\n\t\t\t\t\tpublicPath: true,\n\t\t\t\t\tlogging: true,\n\t\t\t\t\texclude: false,\n\t\t\t\t\tmaxModules: Infinity\n\t\t\t\t};\n\t\t\tcase \"minimal\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false,\n\t\t\t\t\tmodules: true,\n\t\t\t\t\tmaxModules: 0,\n\t\t\t\t\terrors: true,\n\t\t\t\t\twarnings: true,\n\t\t\t\t\tlogging: \"warn\"\n\t\t\t\t};\n\t\t\tcase \"errors-only\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false,\n\t\t\t\t\terrors: true,\n\t\t\t\t\tmoduleTrace: true,\n\t\t\t\t\tlogging: \"error\"\n\t\t\t\t};\n\t\t\tcase \"errors-warnings\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false,\n\t\t\t\t\terrors: true,\n\t\t\t\t\twarnings: true,\n\t\t\t\t\tlogging: \"warn\"\n\t\t\t\t};\n\t\t\tdefault:\n\t\t\t\treturn {};\n\t\t}\n\t}\n\n\tstatic getChildOptions(options, idx) {\n\t\tlet innerOptions;\n\t\tif (Array.isArray(options.children)) {\n\t\t\tif (idx < options.children.length) {\n\t\t\t\tinnerOptions = options.children[idx];\n\t\t\t}\n\t\t} else if (typeof options.children === \"object\" && options.children) {\n\t\t\tinnerOptions = options.children;\n\t\t}\n\t\tif (typeof innerOptions === \"boolean\" || typeof innerOptions === \"string\") {\n\t\t\tinnerOptions = Stats.presetToOptions(innerOptions);\n\t\t}\n\t\tif (!innerOptions) {\n\t\t\treturn options;\n\t\t}\n\t\tconst childOptions = Object.assign({}, options);\n\t\tdelete childOptions.children; // do not inherit children\n\t\treturn Object.assign(childOptions, innerOptions);\n\t}\n}\n\nmodule.exports = Stats;\n"]},"metadata":{},"sourceType":"script"}