{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\n\nconst Module = require(\"./Module\");\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n\nclass DllModule extends Module {\n  constructor(context, dependencies, name, type) {\n    super(\"javascript/dynamic\", context); // Info from Factory\n\n    this.dependencies = dependencies;\n    this.name = name;\n    this.type = type;\n  }\n\n  identifier() {\n    return `dll ${this.name}`;\n  }\n\n  readableIdentifier() {\n    return `dll ${this.name}`;\n  }\n\n  build(options, compilation, resolver, fs, callback) {\n    this.built = true;\n    this.buildMeta = {};\n    this.buildInfo = {};\n    return callback();\n  }\n\n  source() {\n    return new RawSource(\"module.exports = __webpack_require__;\");\n  }\n\n  needRebuild() {\n    return false;\n  }\n\n  size() {\n    return 12;\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @returns {void}\n   */\n\n\n  updateHash(hash) {\n    hash.update(\"dll module\");\n    hash.update(this.name || \"\");\n    super.updateHash(hash);\n  }\n\n}\n\nmodule.exports = DllModule;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/DllModule.js"],"names":["RawSource","require","Module","DllModule","constructor","context","dependencies","name","type","identifier","readableIdentifier","build","options","compilation","resolver","fs","callback","built","buildMeta","buildInfo","source","needRebuild","size","updateHash","hash","update","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;AAEA;;;AAEA,MAAME,SAAN,SAAwBD,MAAxB,CAA+B;AAC9BE,EAAAA,WAAW,CAACC,OAAD,EAAUC,YAAV,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AAC9C,UAAM,oBAAN,EAA4BH,OAA5B,EAD8C,CAG9C;;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA;;AAEDC,EAAAA,UAAU,GAAG;AACZ,WAAQ,OAAM,KAAKF,IAAK,EAAxB;AACA;;AAEDG,EAAAA,kBAAkB,GAAG;AACpB,WAAQ,OAAM,KAAKH,IAAK,EAAxB;AACA;;AAEDI,EAAAA,KAAK,CAACC,OAAD,EAAUC,WAAV,EAAuBC,QAAvB,EAAiCC,EAAjC,EAAqCC,QAArC,EAA+C;AACnD,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,WAAOH,QAAQ,EAAf;AACA;;AAEDI,EAAAA,MAAM,GAAG;AACR,WAAO,IAAIpB,SAAJ,CAAc,uCAAd,CAAP;AACA;;AAEDqB,EAAAA,WAAW,GAAG;AACb,WAAO,KAAP;AACA;;AAEDC,EAAAA,IAAI,GAAG;AACN,WAAO,EAAP;AACA;AAED;;;;;;AAIAC,EAAAA,UAAU,CAACC,IAAD,EAAO;AAChBA,IAAAA,IAAI,CAACC,MAAL,CAAY,YAAZ;AACAD,IAAAA,IAAI,CAACC,MAAL,CAAY,KAAKlB,IAAL,IAAa,EAAzB;AACA,UAAMgB,UAAN,CAAiBC,IAAjB;AACA;;AA7C6B;;AAgD/BE,MAAM,CAACC,OAAP,GAAiBxB,SAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass DllModule extends Module {\n\tconstructor(context, dependencies, name, type) {\n\t\tsuper(\"javascript/dynamic\", context);\n\n\t\t// Info from Factory\n\t\tthis.dependencies = dependencies;\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t}\n\n\tidentifier() {\n\t\treturn `dll ${this.name}`;\n\t}\n\n\treadableIdentifier() {\n\t\treturn `dll ${this.name}`;\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {};\n\t\treturn callback();\n\t}\n\n\tsource() {\n\t\treturn new RawSource(\"module.exports = __webpack_require__;\");\n\t}\n\n\tneedRebuild() {\n\t\treturn false;\n\t}\n\n\tsize() {\n\t\treturn 12;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(\"dll module\");\n\t\thash.update(this.name || \"\");\n\t\tsuper.updateHash(hash);\n\t}\n}\n\nmodule.exports = DllModule;\n"]},"metadata":{},"sourceType":"script"}