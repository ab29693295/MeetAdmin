{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireContextDependency = require(\"./RequireContextDependency\");\n\nconst ContextElementDependency = require(\"./ContextElementDependency\");\n\nconst RequireContextDependencyParserPlugin = require(\"./RequireContextDependencyParserPlugin\");\n\nclass RequireContextPlugin {\n  constructor(modulesDirectories, extensions, mainFiles) {\n    if (!Array.isArray(modulesDirectories)) {\n      throw new Error(\"modulesDirectories must be an array\");\n    }\n\n    if (!Array.isArray(extensions)) {\n      throw new Error(\"extensions must be an array\");\n    }\n\n    this.modulesDirectories = modulesDirectories;\n    this.extensions = extensions;\n    this.mainFiles = mainFiles;\n  }\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RequireContextPlugin\", (compilation, {\n      contextModuleFactory,\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(RequireContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(RequireContextDependency, new RequireContextDependency.Template());\n      compilation.dependencyFactories.set(ContextElementDependency, normalModuleFactory);\n\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.requireContext !== undefined && !parserOptions.requireContext) return;\n        new RequireContextDependencyParserPlugin().apply(parser);\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"RequireContextPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"RequireContextPlugin\", handler);\n      contextModuleFactory.hooks.alternatives.tap(\"RequireContextPlugin\", items => {\n        if (items.length === 0) return items;\n        return items.map(obj => {\n          return this.extensions.filter(ext => {\n            const l = obj.request.length;\n            return l > ext.length && obj.request.substr(l - ext.length, l) === ext;\n          }).map(ext => {\n            const l = obj.request.length;\n            return {\n              context: obj.context,\n              request: obj.request.substr(0, l - ext.length)\n            };\n          }).concat(obj);\n        }).reduce((a, b) => a.concat(b), []);\n      });\n      contextModuleFactory.hooks.alternatives.tap(\"RequireContextPlugin\", items => {\n        if (items.length === 0) return items;\n        return items.map(obj => {\n          return this.mainFiles.filter(mainFile => {\n            const l = obj.request.length;\n            return l > mainFile.length + 1 && obj.request.substr(l - mainFile.length - 1, l) === \"/\" + mainFile;\n          }).map(mainFile => {\n            const l = obj.request.length;\n            return [{\n              context: obj.context,\n              request: obj.request.substr(0, l - mainFile.length)\n            }, {\n              context: obj.context,\n              request: obj.request.substr(0, l - mainFile.length - 1)\n            }];\n          }).reduce((a, b) => a.concat(b), []).concat(obj);\n        }).reduce((a, b) => a.concat(b), []);\n      });\n      contextModuleFactory.hooks.alternatives.tap(\"RequireContextPlugin\", items => {\n        if (items.length === 0) return items;\n        return items.map(obj => {\n          for (let i = 0; i < this.modulesDirectories.length; i++) {\n            const dir = this.modulesDirectories[i];\n            const idx = obj.request.indexOf(\"./\" + dir + \"/\");\n\n            if (idx === 0) {\n              obj.request = obj.request.slice(dir.length + 3);\n              break;\n            }\n          }\n\n          return obj;\n        });\n      });\n    });\n  }\n\n}\n\nmodule.exports = RequireContextPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/dependencies/RequireContextPlugin.js"],"names":["RequireContextDependency","require","ContextElementDependency","RequireContextDependencyParserPlugin","RequireContextPlugin","constructor","modulesDirectories","extensions","mainFiles","Array","isArray","Error","apply","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","requireContext","undefined","for","alternatives","items","length","map","obj","filter","ext","l","request","substr","context","concat","reduce","a","b","mainFile","i","dir","idx","indexOf","slice","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireContextDependency = require(\"./RequireContextDependency\");\nconst ContextElementDependency = require(\"./ContextElementDependency\");\n\nconst RequireContextDependencyParserPlugin = require(\"./RequireContextDependencyParserPlugin\");\n\nclass RequireContextPlugin {\n\tconstructor(modulesDirectories, extensions, mainFiles) {\n\t\tif (!Array.isArray(modulesDirectories)) {\n\t\t\tthrow new Error(\"modulesDirectories must be an array\");\n\t\t}\n\t\tif (!Array.isArray(extensions)) {\n\t\t\tthrow new Error(\"extensions must be an array\");\n\t\t}\n\t\tthis.modulesDirectories = modulesDirectories;\n\t\tthis.extensions = extensions;\n\t\tthis.mainFiles = mainFiles;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireContextPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireContextDependency,\n\t\t\t\t\tnew RequireContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContextElementDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireContext !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireContext\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireContextDependencyParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireContextPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireContextPlugin\", handler);\n\n\t\t\t\tcontextModuleFactory.hooks.alternatives.tap(\n\t\t\t\t\t\"RequireContextPlugin\",\n\t\t\t\t\titems => {\n\t\t\t\t\t\tif (items.length === 0) return items;\n\t\t\t\t\t\treturn items\n\t\t\t\t\t\t\t.map(obj => {\n\t\t\t\t\t\t\t\treturn this.extensions\n\t\t\t\t\t\t\t\t\t.filter(ext => {\n\t\t\t\t\t\t\t\t\t\tconst l = obj.request.length;\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\tl > ext.length &&\n\t\t\t\t\t\t\t\t\t\t\tobj.request.substr(l - ext.length, l) === ext\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.map(ext => {\n\t\t\t\t\t\t\t\t\t\tconst l = obj.request.length;\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tcontext: obj.context,\n\t\t\t\t\t\t\t\t\t\t\trequest: obj.request.substr(0, l - ext.length)\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.concat(obj);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.reduce((a, b) => a.concat(b), []);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tcontextModuleFactory.hooks.alternatives.tap(\n\t\t\t\t\t\"RequireContextPlugin\",\n\t\t\t\t\titems => {\n\t\t\t\t\t\tif (items.length === 0) return items;\n\t\t\t\t\t\treturn items\n\t\t\t\t\t\t\t.map(obj => {\n\t\t\t\t\t\t\t\treturn this.mainFiles\n\t\t\t\t\t\t\t\t\t.filter(mainFile => {\n\t\t\t\t\t\t\t\t\t\tconst l = obj.request.length;\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\tl > mainFile.length + 1 &&\n\t\t\t\t\t\t\t\t\t\t\tobj.request.substr(l - mainFile.length - 1, l) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\"/\" + mainFile\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.map(mainFile => {\n\t\t\t\t\t\t\t\t\t\tconst l = obj.request.length;\n\t\t\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcontext: obj.context,\n\t\t\t\t\t\t\t\t\t\t\t\trequest: obj.request.substr(0, l - mainFile.length)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcontext: obj.context,\n\t\t\t\t\t\t\t\t\t\t\t\trequest: obj.request.substr(0, l - mainFile.length - 1)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.reduce((a, b) => a.concat(b), [])\n\t\t\t\t\t\t\t\t\t.concat(obj);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.reduce((a, b) => a.concat(b), []);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tcontextModuleFactory.hooks.alternatives.tap(\n\t\t\t\t\t\"RequireContextPlugin\",\n\t\t\t\t\titems => {\n\t\t\t\t\t\tif (items.length === 0) return items;\n\t\t\t\t\t\treturn items.map(obj => {\n\t\t\t\t\t\t\tfor (let i = 0; i < this.modulesDirectories.length; i++) {\n\t\t\t\t\t\t\t\tconst dir = this.modulesDirectories[i];\n\t\t\t\t\t\t\t\tconst idx = obj.request.indexOf(\"./\" + dir + \"/\");\n\t\t\t\t\t\t\t\tif (idx === 0) {\n\t\t\t\t\t\t\t\t\tobj.request = obj.request.slice(dir.length + 3);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireContextPlugin;\n"]},"metadata":{},"sourceType":"script"}