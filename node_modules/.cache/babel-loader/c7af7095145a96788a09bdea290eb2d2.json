{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_errorMessage(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n\n  if (it.createErrors !== false) {\n    var INTERPOLATION = /\\$\\{[^\\}]+\\}/;\n    var INTERPOLATION_REPLACE = /\\$\\{([^\\}]+)\\}/g;\n    var EMPTY_STR = /^\\'\\'\\s*\\+\\s*|\\s*\\+\\s*\\'\\'$/g;\n    var $config = it.self.getKeyword($keyword).config,\n        $dataPath = '_em_dataPath' + $lvl,\n        $i = '_em_i' + $lvl,\n        $key = '_em_key' + $lvl,\n        $keyProp = '_em_keyProp' + $lvl,\n        $err = '_em_err' + $lvl,\n        $child = '_em_child' + $lvl,\n        $childKeyword = '_em_childKeyword' + $lvl,\n        $matches = '_em_matches' + $lvl,\n        $isArray = '_em_isArray' + $lvl,\n        $errors = '_em_errors' + $lvl,\n        $message = '_em_message' + $lvl,\n        $paramsErrors = '_em_paramsErrors' + $lvl,\n        $propParam = '_em_propParam' + $lvl,\n        $keywordPropParams = '_em_keywordPropParams' + $lvl,\n        $templates = '_em_templates' + $lvl,\n        $errSchemaPathString = it.util.toQuotedString(it.errSchemaPath);\n    out += ' if (errors > 0) { var ' + $dataPath + ' = (dataPath || \\'\\') + ' + it.errorPath + '; var ' + $i + ', ' + $err + ', ' + $errors + '; ';\n\n    if (typeof $schema == 'object') {\n      var $keywordErrors = {},\n          $keywordPropErrors = {},\n          $childErrors = {\n        properties: {},\n        items: {}\n      },\n          $hasKeywordProps = false,\n          $hasProperties = false,\n          $hasItems = false;\n\n      for (var $k in $schema) {\n        switch ($k) {\n          case 'properties':\n            for (var $prop in $schema.properties) {\n              $hasProperties = true;\n              $childErrors.properties[$prop] = [];\n            }\n\n            break;\n\n          case 'items':\n            for (var $item = 0; $item < $schema.items.length; $item++) {\n              $hasItems = true;\n              $childErrors.items[$item] = [];\n            }\n\n            break;\n\n          default:\n            if (typeof $schema[$k] == 'object') {\n              $hasKeywordProps = true;\n              $keywordPropErrors[$k] = {};\n\n              for (var $prop in $schema[$k]) {\n                $keywordPropErrors[$k][$prop] = [];\n              }\n            } else {\n              $keywordErrors[$k] = [];\n            }\n\n        }\n      }\n\n      var $keywordErrorsArr = Object.keys($keywordErrors);\n\n      if ($keywordErrorsArr.length) {\n        out += ' ' + $i + ' = 0; ' + $errors + ' = ' + JSON.stringify($keywordErrors) + ';  var ' + $templates + ' = { ';\n        var $comma = false;\n        var arr1 = $keywordErrorsArr;\n\n        if (arr1) {\n          var $k,\n              i1 = -1,\n              l1 = arr1.length - 1;\n\n          while (i1 < l1) {\n            $k = arr1[i1 += 1];\n\n            if (INTERPOLATION.test($schema[$k])) {\n              if ($comma) {\n                out += ',';\n              }\n\n              out += '' + it.util.toQuotedString($k) + ': ' + templateFunc($schema[$k]) + ' ';\n              $comma = true;\n            }\n          }\n        }\n\n        out += ' }; while (' + $i + ' < errors) { ' + $err + ' = vErrors[' + $i + ']; if (  ' + $err + '.keyword != \\'' + $keyword + '\\' ';\n\n        if ($config.options.keepErrors) {\n          out += ' && !' + $err + '.emUsed ';\n        }\n\n        out += ' && ' + $err + '.keyword in ' + $errors + ' && ' + $err + '.dataPath == ' + $dataPath + ' && ' + $err + '.schemaPath.indexOf(' + $errSchemaPathString + ') == 0 && /^\\\\/[^\\\\/]*$/.test(' + $err + '.schemaPath.slice(' + it.errSchemaPath.length + '))) { ' + $errors + '[' + $err + '.keyword].push(' + $err + ');  ';\n\n        if ($config.options.keepErrors) {\n          out += ' ' + $err + '.emUsed = true; ';\n        } else {\n          out += ' vErrors.splice(' + $i + ', 1); errors--; ';\n        }\n\n        out += ' } else { ' + $i + '++; } } ';\n\n        if ($config.options.singleError) {\n          out += ' var ' + $message + ' = \\'\\'; var ' + $paramsErrors + ' = []; ';\n        }\n\n        out += ' for (var ' + $key + ' in ' + $errors + ') { if (' + $errors + '[' + $key + '].length) { ';\n\n        if ($config.options.singleError) {\n          out += ' if (' + $message + ') { ' + $message + ' += ';\n\n          if (typeof $config.options.singleError == 'string') {\n            out += ' ' + it.util.toQuotedString($config.options.singleError) + ' ';\n          } else {\n            out += ' \\'; \\' ';\n          }\n\n          out += '; } ' + $message + ' +=   ' + $key + ' in ' + $templates + ' ? ' + $templates + '[' + $key + '] () : validate.schema' + $schemaPath + '[' + $key + ']; ' + $paramsErrors + ' = ' + $paramsErrors + '.concat(' + $errors + '[' + $key + ']); } } ';\n        } else {\n          out += ' var ' + $message + ' =   ' + $key + ' in ' + $templates + ' ? ' + $templates + '[' + $key + '] () : validate.schema' + $schemaPath + '[' + $key + ']; var ' + $paramsErrors + ' = ' + $errors + '[' + $key + ']; ';\n        }\n\n        out += '  var err = { keyword: \\'' + $keyword + '\\' , dataPath: ' + $dataPath + ' , schemaPath: ' + $errSchemaPathString + ' + \\'/' + $keyword + '\\' , params: { errors: ' + $paramsErrors + ' } , message: ' + $message + ' ';\n\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' };  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n\n        if (!$config.options.singleError) {\n          out += ' } } ';\n        }\n      }\n\n      if ($hasKeywordProps) {\n        out += ' ' + $i + ' = 0; ' + $errors + ' = ' + JSON.stringify($keywordPropErrors) + '; var ' + $paramsErrors + ', ' + $propParam + '; var ' + $keywordPropParams + ' = ' + JSON.stringify($config.KEYWORD_PROPERTY_PARAMS) + ';  var ' + $templates + ' = { ';\n        var $comma = false;\n        var arr2 = Object.keys($keywordPropErrors);\n\n        if (arr2) {\n          var $k,\n              i2 = -1,\n              l2 = arr2.length - 1;\n\n          while (i2 < l2) {\n            $k = arr2[i2 += 1];\n            var $keywordMsgs = $schema[$k];\n\n            if ($comma) {\n              out += ',';\n            }\n\n            out += '' + it.util.toQuotedString($k) + ': { ';\n            $comma = true;\n            var $innerComma = false;\n            var arr3 = Object.keys($keywordMsgs);\n\n            if (arr3) {\n              var $prop,\n                  i3 = -1,\n                  l3 = arr3.length - 1;\n\n              while (i3 < l3) {\n                $prop = arr3[i3 += 1];\n\n                if (INTERPOLATION.test($keywordMsgs[$prop])) {\n                  if ($innerComma) {\n                    out += ',';\n                  }\n\n                  out += '' + it.util.toQuotedString($prop) + ': ' + templateFunc($keywordMsgs[$prop]) + ' ';\n                  $innerComma = true;\n                }\n              }\n            }\n\n            out += ' } ';\n          }\n        }\n\n        out += ' }; while (' + $i + ' < errors) { ' + $err + ' = vErrors[' + $i + ']; if (  ' + $err + '.keyword != \\'' + $keyword + '\\' ';\n\n        if ($config.options.keepErrors) {\n          out += ' && !' + $err + '.emUsed ';\n        }\n\n        out += ' && ' + $err + '.keyword in ' + $errors + ' && ' + $err + '.dataPath == ' + $dataPath + ' && ' + $err + '.schemaPath.indexOf(' + $errSchemaPathString + ') == 0 && /^\\\\/[^\\\\/]*$/.test(' + $err + '.schemaPath.slice(' + it.errSchemaPath.length + '))) { ' + $propParam + ' = ' + $keywordPropParams + '[' + $err + '.keyword]; ' + $paramsErrors + ' = ' + $errors + '[' + $err + '.keyword][' + $err + '.params[' + $propParam + ']]; if (' + $paramsErrors + ') { ' + $paramsErrors + '.push(' + $err + ');  ';\n\n        if ($config.options.keepErrors) {\n          out += ' ' + $err + '.emUsed = true; ';\n        } else {\n          out += ' vErrors.splice(' + $i + ', 1); errors--; ';\n        }\n\n        out += ' } else { ' + $i + '++; } } else { ' + $i + '++; } } for (var ' + $key + ' in ' + $errors + ') { for (var ' + $keyProp + ' in ' + $errors + '[' + $key + ']) { ' + $paramsErrors + ' = ' + $errors + '[' + $key + '][' + $keyProp + ']; if (' + $paramsErrors + '.length) { var ' + $message + ' =   ' + $key + ' in ' + $templates + ' && ' + $keyProp + ' in ' + $templates + '[' + $key + '] ? ' + $templates + '[' + $key + '][' + $keyProp + '] () : validate.schema' + $schemaPath + '[' + $key + '][' + $keyProp + '];  var err = { keyword: \\'' + $keyword + '\\' , dataPath: ' + $dataPath + ' , schemaPath: ' + $errSchemaPathString + ' + \\'/' + $keyword + '\\' , params: { errors: ' + $paramsErrors + ' } , message: ' + $message + ' ';\n\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' };  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } } ';\n      }\n\n      if ($hasProperties || $hasItems) {\n        out += ' var ' + $isArray + ' = Array.isArray(' + $data + '); if ';\n\n        if ($hasProperties && $hasItems) {\n          out += ' (typeof ' + $data + ' == \\'object\\') { ';\n          var $childProp = '[' + $childKeyword + ']';\n          out += ' ' + $i + ' = 0; if (' + $isArray + ') { var ' + $childKeyword + ' = \\'items\\'; ' + $errors + ' = ' + JSON.stringify($childErrors.items) + ';    ';\n\n          var _keysArray = Object.keys($childErrors.items);\n\n          out += ' var ' + $templates + ' = { ';\n          var $comma = false;\n          var arr4 = _keysArray;\n\n          if (arr4) {\n            var $k,\n                i4 = -1,\n                l4 = arr4.length - 1;\n\n            while (i4 < l4) {\n              $k = arr4[i4 += 1];\n\n              if (INTERPOLATION.test($schema.items[$k])) {\n                if ($comma) {\n                  out += ',';\n                }\n\n                out += '' + it.util.toQuotedString($k) + ': ' + templateFunc($schema.items[$k]) + ' ';\n                $comma = true;\n              }\n            }\n          }\n\n          out += ' }; } else { var ' + $childKeyword + ' = \\'properties\\'; ' + $errors + ' =  ' + JSON.stringify($childErrors.properties) + ';    ';\n\n          var _keysArray = Object.keys($childErrors.properties);\n\n          out += ' var ' + $templates + ' = { ';\n          var $comma = false;\n          var arr5 = _keysArray;\n\n          if (arr5) {\n            var $k,\n                i5 = -1,\n                l5 = arr5.length - 1;\n\n            while (i5 < l5) {\n              $k = arr5[i5 += 1];\n\n              if (INTERPOLATION.test($schema.properties[$k])) {\n                if ($comma) {\n                  out += ',';\n                }\n\n                out += '' + it.util.toQuotedString($k) + ': ' + templateFunc($schema.properties[$k]) + ' ';\n                $comma = true;\n              }\n            }\n          }\n\n          out += ' }; } ';\n        } else if ($hasProperties) {\n          out += ' (typeof ' + $data + ' == \\'object\\' && !' + $isArray + ') { ';\n          var $childProp = '.properties';\n          out += ' ' + $i + ' = 0; ' + $errors + ' = ' + JSON.stringify($childErrors.properties) + ';  ';\n\n          var _keysArray = Object.keys($childErrors.properties);\n\n          out += ' var ' + $templates + ' = { ';\n          var $comma = false;\n          var arr6 = _keysArray;\n\n          if (arr6) {\n            var $k,\n                i6 = -1,\n                l6 = arr6.length - 1;\n\n            while (i6 < l6) {\n              $k = arr6[i6 += 1];\n\n              if (INTERPOLATION.test($schema.properties[$k])) {\n                if ($comma) {\n                  out += ',';\n                }\n\n                out += '' + it.util.toQuotedString($k) + ': ' + templateFunc($schema.properties[$k]) + ' ';\n                $comma = true;\n              }\n            }\n          }\n\n          out += ' }; ';\n        } else {\n          out += ' (' + $isArray + ') { ';\n          var $childProp = '.items';\n          out += ' ' + $i + ' = 0; ' + $errors + ' = ' + JSON.stringify($childErrors.items) + ';  ';\n\n          var _keysArray = Object.keys($childErrors.items);\n\n          out += ' var ' + $templates + ' = { ';\n          var $comma = false;\n          var arr7 = _keysArray;\n\n          if (arr7) {\n            var $k,\n                i7 = -1,\n                l7 = arr7.length - 1;\n\n            while (i7 < l7) {\n              $k = arr7[i7 += 1];\n\n              if (INTERPOLATION.test($schema.items[$k])) {\n                if ($comma) {\n                  out += ',';\n                }\n\n                out += '' + it.util.toQuotedString($k) + ': ' + templateFunc($schema.items[$k]) + ' ';\n                $comma = true;\n              }\n            }\n          }\n\n          out += ' }; ';\n        }\n\n        out += ' var ' + $child + ', ' + $matches + '; while (' + $i + ' < errors) { ' + $err + ' = vErrors[' + $i + ']; if (  ' + $err + '.keyword != \\'' + $keyword + '\\' ';\n\n        if ($config.options.keepErrors) {\n          out += ' && !' + $err + '.emUsed ';\n        }\n\n        out += ' && ' + $err + '.dataPath.indexOf(' + $dataPath + ') == 0 && (' + $matches + ' = ' + $err + '.dataPath.slice(' + $dataPath + '.length).match(/^\\\\/([^\\\\/]*)(?:\\\\/|$)/), ' + $child + ' = ' + $matches + ' && ' + $matches + '[1].replace(/~1/g, \\'/\\').replace(/~0/g, \\'~\\') ) !== undefined && ' + $child + ' in ' + $errors + ') { ' + $errors + '[' + $child + '].push(' + $err + ');  ';\n\n        if ($config.options.keepErrors) {\n          out += ' ' + $err + '.emUsed = true; ';\n        } else {\n          out += ' vErrors.splice(' + $i + ', 1); errors--; ';\n        }\n\n        out += ' } else { ' + $i + '++; } } for (var ' + $key + ' in ' + $errors + ') { if (' + $errors + '[' + $key + '].length) { var err = { keyword: \\'' + $keyword + '\\' , dataPath: ' + $dataPath + ' + \\'/\\' + ' + $key + '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\') , schemaPath: ' + $errSchemaPathString + ' + \\'/' + $keyword + '\\' , params: { errors: ' + $errors + '[' + $key + '] } , message: ' + $key + ' in ' + $templates + ' ? ' + $templates + '[' + $key + '] () : validate.schema' + $schemaPath + $childProp + '[' + $key + '] ';\n\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' };  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } }  }  ';\n      }\n    }\n\n    var $schemaMessage = typeof $schema == 'string' ? $schema : $schema._;\n\n    if ($schemaMessage) {\n      out += ' ' + $i + ' = 0; ' + $errors + ' = []; while (' + $i + ' < errors) { ' + $err + ' = vErrors[' + $i + ']; if (  ' + $err + '.keyword != \\'' + $keyword + '\\' ';\n\n      if ($config.options.keepErrors) {\n        out += ' && !' + $err + '.emUsed ';\n      }\n\n      out += ' && (' + $err + '.dataPath == ' + $dataPath + ' || (' + $err + '.dataPath.indexOf(' + $dataPath + ') == 0 && ' + $err + '.dataPath[' + $dataPath + '.length] == \\'/\\')) && ' + $err + '.schemaPath.indexOf(' + $errSchemaPathString + ') == 0 && ' + $err + '.schemaPath[' + it.errSchemaPath.length + '] == \\'/\\') { ' + $errors + '.push(' + $err + ');  ';\n\n      if ($config.options.keepErrors) {\n        out += ' ' + $err + '.emUsed = true; ';\n      } else {\n        out += ' vErrors.splice(' + $i + ', 1); errors--; ';\n      }\n\n      out += ' } else { ' + $i + '++; } } if (' + $errors + '.length) { var err = { keyword: \\'' + $keyword + '\\' , dataPath: ' + $dataPath + ' , schemaPath: ' + $errSchemaPathString + ' + \\'/' + $keyword + '\\' , params: { errors: ' + $errors + ' } , message: ' + templateExpr($schemaMessage) + ' ';\n\n      if (it.opts.verbose) {\n        out += ' , schema: ' + it.util.toQuotedString($schemaMessage) + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n      }\n\n      out += ' };  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n    }\n\n    out += ' }';\n  }\n\n  function templateExpr(str) {\n    str = it.util.escapeQuotes(str);\n    if (!INTERPOLATION.test(str)) return \"'\" + str + \"'\";\n    var expr = \"'\" + str.replace(INTERPOLATION_REPLACE, function ($0, $1) {\n      return \"' + JSON.stringify(\" + it.util.getData($1, $dataLvl, it.dataPathArr) + \") + '\";\n    }) + \"'\";\n    return expr.replace(EMPTY_STR, '');\n  }\n\n  function templateFunc(str) {\n    return 'function() { return ' + templateExpr(str) + '; }';\n  }\n\n  return out;\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/ajv-errors/lib/dotjs/errorMessage.js"],"names":["module","exports","generate_errorMessage","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","createErrors","INTERPOLATION","INTERPOLATION_REPLACE","EMPTY_STR","$config","self","getKeyword","config","$dataPath","$i","$key","$keyProp","$err","$child","$childKeyword","$matches","$isArray","$errors","$message","$paramsErrors","$propParam","$keywordPropParams","$templates","$errSchemaPathString","toQuotedString","errorPath","$keywordErrors","$keywordPropErrors","$childErrors","properties","items","$hasKeywordProps","$hasProperties","$hasItems","$k","$prop","$item","length","$keywordErrorsArr","Object","keys","JSON","stringify","$comma","arr1","i1","l1","test","templateFunc","options","keepErrors","singleError","verbose","KEYWORD_PROPERTY_PARAMS","arr2","i2","l2","$keywordMsgs","$innerComma","arr3","i3","l3","$childProp","_keysArray","arr4","i4","l4","arr5","i5","l5","arr6","i6","l6","arr7","i7","l7","$schemaMessage","_","templateExpr","str","escapeQuotes","expr","replace","$0","$1","getData","dataPathArr"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate_errorMessage(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.createErrors !== false) {\n    var INTERPOLATION = /\\$\\{[^\\}]+\\}/;\n    var INTERPOLATION_REPLACE = /\\$\\{([^\\}]+)\\}/g;\n    var EMPTY_STR = /^\\'\\'\\s*\\+\\s*|\\s*\\+\\s*\\'\\'$/g;\n    var $config = it.self.getKeyword($keyword).config,\n      $dataPath = '_em_dataPath' + $lvl,\n      $i = '_em_i' + $lvl,\n      $key = '_em_key' + $lvl,\n      $keyProp = '_em_keyProp' + $lvl,\n      $err = '_em_err' + $lvl,\n      $child = '_em_child' + $lvl,\n      $childKeyword = '_em_childKeyword' + $lvl,\n      $matches = '_em_matches' + $lvl,\n      $isArray = '_em_isArray' + $lvl,\n      $errors = '_em_errors' + $lvl,\n      $message = '_em_message' + $lvl,\n      $paramsErrors = '_em_paramsErrors' + $lvl,\n      $propParam = '_em_propParam' + $lvl,\n      $keywordPropParams = '_em_keywordPropParams' + $lvl,\n      $templates = '_em_templates' + $lvl,\n      $errSchemaPathString = it.util.toQuotedString(it.errSchemaPath);\n    out += ' if (errors > 0) { var ' + ($dataPath) + ' = (dataPath || \\'\\') + ' + (it.errorPath) + '; var ' + ($i) + ', ' + ($err) + ', ' + ($errors) + '; ';\n    if (typeof $schema == 'object') {\n      var $keywordErrors = {},\n        $keywordPropErrors = {},\n        $childErrors = {\n          properties: {},\n          items: {}\n        },\n        $hasKeywordProps = false,\n        $hasProperties = false,\n        $hasItems = false;\n      for (var $k in $schema) {\n        switch ($k) {\n          case 'properties':\n            for (var $prop in $schema.properties) {\n              $hasProperties = true;\n              $childErrors.properties[$prop] = [];\n            }\n            break;\n          case 'items':\n            for (var $item = 0; $item < $schema.items.length; $item++) {\n              $hasItems = true;\n              $childErrors.items[$item] = [];\n            }\n            break;\n          default:\n            if (typeof $schema[$k] == 'object') {\n              $hasKeywordProps = true;\n              $keywordPropErrors[$k] = {};\n              for (var $prop in $schema[$k]) {\n                $keywordPropErrors[$k][$prop] = [];\n              }\n            } else {\n              $keywordErrors[$k] = [];\n            }\n        }\n      }\n      var $keywordErrorsArr = Object.keys($keywordErrors);\n      if ($keywordErrorsArr.length) {\n        out += ' ' + ($i) + ' = 0; ' + ($errors) + ' = ' + (JSON.stringify($keywordErrors)) + ';  var ' + ($templates) + ' = { ';\n        var $comma = false;\n        var arr1 = $keywordErrorsArr;\n        if (arr1) {\n          var $k, i1 = -1,\n            l1 = arr1.length - 1;\n          while (i1 < l1) {\n            $k = arr1[i1 += 1];\n            if (INTERPOLATION.test($schema[$k])) {\n              if ($comma) {\n                out += ',';\n              }\n              out += '' + (it.util.toQuotedString($k)) + ': ' + (templateFunc($schema[$k])) + ' ';\n              $comma = true;\n            }\n          }\n        }\n        out += ' }; while (' + ($i) + ' < errors) { ' + ($err) + ' = vErrors[' + ($i) + ']; if (  ' + ($err) + '.keyword != \\'' + ($keyword) + '\\' ';\n        if ($config.options.keepErrors) {\n          out += ' && !' + ($err) + '.emUsed ';\n        }\n        out += ' && ' + ($err) + '.keyword in ' + ($errors) + ' && ' + ($err) + '.dataPath == ' + ($dataPath) + ' && ' + ($err) + '.schemaPath.indexOf(' + ($errSchemaPathString) + ') == 0 && /^\\\\/[^\\\\/]*$/.test(' + ($err) + '.schemaPath.slice(' + (it.errSchemaPath.length) + '))) { ' + ($errors) + '[' + ($err) + '.keyword].push(' + ($err) + ');  ';\n        if ($config.options.keepErrors) {\n          out += ' ' + ($err) + '.emUsed = true; ';\n        } else {\n          out += ' vErrors.splice(' + ($i) + ', 1); errors--; ';\n        }\n        out += ' } else { ' + ($i) + '++; } } ';\n        if ($config.options.singleError) {\n          out += ' var ' + ($message) + ' = \\'\\'; var ' + ($paramsErrors) + ' = []; ';\n        }\n        out += ' for (var ' + ($key) + ' in ' + ($errors) + ') { if (' + ($errors) + '[' + ($key) + '].length) { ';\n        if ($config.options.singleError) {\n          out += ' if (' + ($message) + ') { ' + ($message) + ' += ';\n          if (typeof $config.options.singleError == 'string') {\n            out += ' ' + (it.util.toQuotedString($config.options.singleError)) + ' ';\n          } else {\n            out += ' \\'; \\' ';\n          }\n          out += '; } ' + ($message) + ' +=   ' + ($key) + ' in ' + ($templates) + ' ? ' + ($templates) + '[' + ($key) + '] () : validate.schema' + ($schemaPath) + '[' + ($key) + ']; ' + ($paramsErrors) + ' = ' + ($paramsErrors) + '.concat(' + ($errors) + '[' + ($key) + ']); } } ';\n        } else {\n          out += ' var ' + ($message) + ' =   ' + ($key) + ' in ' + ($templates) + ' ? ' + ($templates) + '[' + ($key) + '] () : validate.schema' + ($schemaPath) + '[' + ($key) + ']; var ' + ($paramsErrors) + ' = ' + ($errors) + '[' + ($key) + ']; ';\n        }\n        out += '  var err = { keyword: \\'' + ($keyword) + '\\' , dataPath: ' + ($dataPath) + ' , schemaPath: ' + ($errSchemaPathString) + ' + \\'/' + ($keyword) + '\\' , params: { errors: ' + ($paramsErrors) + ' } , message: ' + ($message) + ' ';\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' };  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        if (!$config.options.singleError) {\n          out += ' } } ';\n        }\n      }\n      if ($hasKeywordProps) {\n        out += ' ' + ($i) + ' = 0; ' + ($errors) + ' = ' + (JSON.stringify($keywordPropErrors)) + '; var ' + ($paramsErrors) + ', ' + ($propParam) + '; var ' + ($keywordPropParams) + ' = ' + (JSON.stringify($config.KEYWORD_PROPERTY_PARAMS)) + ';  var ' + ($templates) + ' = { ';\n        var $comma = false;\n        var arr2 = Object.keys($keywordPropErrors);\n        if (arr2) {\n          var $k, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $k = arr2[i2 += 1];\n            var $keywordMsgs = $schema[$k];\n            if ($comma) {\n              out += ',';\n            }\n            out += '' + (it.util.toQuotedString($k)) + ': { ';\n            $comma = true;\n            var $innerComma = false;\n            var arr3 = Object.keys($keywordMsgs);\n            if (arr3) {\n              var $prop, i3 = -1,\n                l3 = arr3.length - 1;\n              while (i3 < l3) {\n                $prop = arr3[i3 += 1];\n                if (INTERPOLATION.test($keywordMsgs[$prop])) {\n                  if ($innerComma) {\n                    out += ',';\n                  }\n                  out += '' + (it.util.toQuotedString($prop)) + ': ' + (templateFunc($keywordMsgs[$prop])) + ' ';\n                  $innerComma = true;\n                }\n              }\n            }\n            out += ' } ';\n          }\n        }\n        out += ' }; while (' + ($i) + ' < errors) { ' + ($err) + ' = vErrors[' + ($i) + ']; if (  ' + ($err) + '.keyword != \\'' + ($keyword) + '\\' ';\n        if ($config.options.keepErrors) {\n          out += ' && !' + ($err) + '.emUsed ';\n        }\n        out += ' && ' + ($err) + '.keyword in ' + ($errors) + ' && ' + ($err) + '.dataPath == ' + ($dataPath) + ' && ' + ($err) + '.schemaPath.indexOf(' + ($errSchemaPathString) + ') == 0 && /^\\\\/[^\\\\/]*$/.test(' + ($err) + '.schemaPath.slice(' + (it.errSchemaPath.length) + '))) { ' + ($propParam) + ' = ' + ($keywordPropParams) + '[' + ($err) + '.keyword]; ' + ($paramsErrors) + ' = ' + ($errors) + '[' + ($err) + '.keyword][' + ($err) + '.params[' + ($propParam) + ']]; if (' + ($paramsErrors) + ') { ' + ($paramsErrors) + '.push(' + ($err) + ');  ';\n        if ($config.options.keepErrors) {\n          out += ' ' + ($err) + '.emUsed = true; ';\n        } else {\n          out += ' vErrors.splice(' + ($i) + ', 1); errors--; ';\n        }\n        out += ' } else { ' + ($i) + '++; } } else { ' + ($i) + '++; } } for (var ' + ($key) + ' in ' + ($errors) + ') { for (var ' + ($keyProp) + ' in ' + ($errors) + '[' + ($key) + ']) { ' + ($paramsErrors) + ' = ' + ($errors) + '[' + ($key) + '][' + ($keyProp) + ']; if (' + ($paramsErrors) + '.length) { var ' + ($message) + ' =   ' + ($key) + ' in ' + ($templates) + ' && ' + ($keyProp) + ' in ' + ($templates) + '[' + ($key) + '] ? ' + ($templates) + '[' + ($key) + '][' + ($keyProp) + '] () : validate.schema' + ($schemaPath) + '[' + ($key) + '][' + ($keyProp) + '];  var err = { keyword: \\'' + ($keyword) + '\\' , dataPath: ' + ($dataPath) + ' , schemaPath: ' + ($errSchemaPathString) + ' + \\'/' + ($keyword) + '\\' , params: { errors: ' + ($paramsErrors) + ' } , message: ' + ($message) + ' ';\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' };  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } } ';\n      }\n      if ($hasProperties || $hasItems) {\n        out += ' var ' + ($isArray) + ' = Array.isArray(' + ($data) + '); if ';\n        if ($hasProperties && $hasItems) {\n          out += ' (typeof ' + ($data) + ' == \\'object\\') { ';\n          var $childProp = '[' + $childKeyword + ']';\n          out += ' ' + ($i) + ' = 0; if (' + ($isArray) + ') { var ' + ($childKeyword) + ' = \\'items\\'; ' + ($errors) + ' = ' + (JSON.stringify($childErrors.items)) + ';    ';\n          var _keysArray = Object.keys($childErrors.items);\n          out += ' var ' + ($templates) + ' = { ';\n          var $comma = false;\n          var arr4 = _keysArray;\n          if (arr4) {\n            var $k, i4 = -1,\n              l4 = arr4.length - 1;\n            while (i4 < l4) {\n              $k = arr4[i4 += 1];\n              if (INTERPOLATION.test($schema.items[$k])) {\n                if ($comma) {\n                  out += ',';\n                }\n                out += '' + (it.util.toQuotedString($k)) + ': ' + (templateFunc($schema.items[$k])) + ' ';\n                $comma = true;\n              }\n            }\n          }\n          out += ' }; } else { var ' + ($childKeyword) + ' = \\'properties\\'; ' + ($errors) + ' =  ' + (JSON.stringify($childErrors.properties)) + ';    ';\n          var _keysArray = Object.keys($childErrors.properties);\n          out += ' var ' + ($templates) + ' = { ';\n          var $comma = false;\n          var arr5 = _keysArray;\n          if (arr5) {\n            var $k, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $k = arr5[i5 += 1];\n              if (INTERPOLATION.test($schema.properties[$k])) {\n                if ($comma) {\n                  out += ',';\n                }\n                out += '' + (it.util.toQuotedString($k)) + ': ' + (templateFunc($schema.properties[$k])) + ' ';\n                $comma = true;\n              }\n            }\n          }\n          out += ' }; } ';\n        } else if ($hasProperties) {\n          out += ' (typeof ' + ($data) + ' == \\'object\\' && !' + ($isArray) + ') { ';\n          var $childProp = '.properties';\n          out += ' ' + ($i) + ' = 0; ' + ($errors) + ' = ' + (JSON.stringify($childErrors.properties)) + ';  ';\n          var _keysArray = Object.keys($childErrors.properties);\n          out += ' var ' + ($templates) + ' = { ';\n          var $comma = false;\n          var arr6 = _keysArray;\n          if (arr6) {\n            var $k, i6 = -1,\n              l6 = arr6.length - 1;\n            while (i6 < l6) {\n              $k = arr6[i6 += 1];\n              if (INTERPOLATION.test($schema.properties[$k])) {\n                if ($comma) {\n                  out += ',';\n                }\n                out += '' + (it.util.toQuotedString($k)) + ': ' + (templateFunc($schema.properties[$k])) + ' ';\n                $comma = true;\n              }\n            }\n          }\n          out += ' }; ';\n        } else {\n          out += ' (' + ($isArray) + ') { ';\n          var $childProp = '.items';\n          out += ' ' + ($i) + ' = 0; ' + ($errors) + ' = ' + (JSON.stringify($childErrors.items)) + ';  ';\n          var _keysArray = Object.keys($childErrors.items);\n          out += ' var ' + ($templates) + ' = { ';\n          var $comma = false;\n          var arr7 = _keysArray;\n          if (arr7) {\n            var $k, i7 = -1,\n              l7 = arr7.length - 1;\n            while (i7 < l7) {\n              $k = arr7[i7 += 1];\n              if (INTERPOLATION.test($schema.items[$k])) {\n                if ($comma) {\n                  out += ',';\n                }\n                out += '' + (it.util.toQuotedString($k)) + ': ' + (templateFunc($schema.items[$k])) + ' ';\n                $comma = true;\n              }\n            }\n          }\n          out += ' }; ';\n        }\n        out += ' var ' + ($child) + ', ' + ($matches) + '; while (' + ($i) + ' < errors) { ' + ($err) + ' = vErrors[' + ($i) + ']; if (  ' + ($err) + '.keyword != \\'' + ($keyword) + '\\' ';\n        if ($config.options.keepErrors) {\n          out += ' && !' + ($err) + '.emUsed ';\n        }\n        out += ' && ' + ($err) + '.dataPath.indexOf(' + ($dataPath) + ') == 0 && (' + ($matches) + ' = ' + ($err) + '.dataPath.slice(' + ($dataPath) + '.length).match(/^\\\\/([^\\\\/]*)(?:\\\\/|$)/), ' + ($child) + ' = ' + ($matches) + ' && ' + ($matches) + '[1].replace(/~1/g, \\'/\\').replace(/~0/g, \\'~\\') ) !== undefined && ' + ($child) + ' in ' + ($errors) + ') { ' + ($errors) + '[' + ($child) + '].push(' + ($err) + ');  ';\n        if ($config.options.keepErrors) {\n          out += ' ' + ($err) + '.emUsed = true; ';\n        } else {\n          out += ' vErrors.splice(' + ($i) + ', 1); errors--; ';\n        }\n        out += ' } else { ' + ($i) + '++; } } for (var ' + ($key) + ' in ' + ($errors) + ') { if (' + ($errors) + '[' + ($key) + '].length) { var err = { keyword: \\'' + ($keyword) + '\\' , dataPath: ' + ($dataPath) + ' + \\'/\\' + ' + ($key) + '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\') , schemaPath: ' + ($errSchemaPathString) + ' + \\'/' + ($keyword) + '\\' , params: { errors: ' + ($errors) + '[' + ($key) + '] } , message: ' + ($key) + ' in ' + ($templates) + ' ? ' + ($templates) + '[' + ($key) + '] () : validate.schema' + ($schemaPath) + ($childProp) + '[' + ($key) + '] ';\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' };  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } }  }  ';\n      }\n    }\n    var $schemaMessage = typeof $schema == 'string' ? $schema : $schema._;\n    if ($schemaMessage) {\n      out += ' ' + ($i) + ' = 0; ' + ($errors) + ' = []; while (' + ($i) + ' < errors) { ' + ($err) + ' = vErrors[' + ($i) + ']; if (  ' + ($err) + '.keyword != \\'' + ($keyword) + '\\' ';\n      if ($config.options.keepErrors) {\n        out += ' && !' + ($err) + '.emUsed ';\n      }\n      out += ' && (' + ($err) + '.dataPath == ' + ($dataPath) + ' || (' + ($err) + '.dataPath.indexOf(' + ($dataPath) + ') == 0 && ' + ($err) + '.dataPath[' + ($dataPath) + '.length] == \\'/\\')) && ' + ($err) + '.schemaPath.indexOf(' + ($errSchemaPathString) + ') == 0 && ' + ($err) + '.schemaPath[' + (it.errSchemaPath.length) + '] == \\'/\\') { ' + ($errors) + '.push(' + ($err) + ');  ';\n      if ($config.options.keepErrors) {\n        out += ' ' + ($err) + '.emUsed = true; ';\n      } else {\n        out += ' vErrors.splice(' + ($i) + ', 1); errors--; ';\n      }\n      out += ' } else { ' + ($i) + '++; } } if (' + ($errors) + '.length) { var err = { keyword: \\'' + ($keyword) + '\\' , dataPath: ' + ($dataPath) + ' , schemaPath: ' + ($errSchemaPathString) + ' + \\'/' + ($keyword) + '\\' , params: { errors: ' + ($errors) + ' } , message: ' + (templateExpr($schemaMessage)) + ' ';\n      if (it.opts.verbose) {\n        out += ' , schema: ' + (it.util.toQuotedString($schemaMessage)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' };  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n    }\n    out += ' }';\n  }\n\n  function templateExpr(str) {\n    str = it.util.escapeQuotes(str);\n    if (!INTERPOLATION.test(str)) return \"'\" + str + \"'\";\n    var expr = \"'\" + str.replace(INTERPOLATION_REPLACE, function($0, $1) {\n      return \"' + JSON.stringify(\" + it.util.getData($1, $dataLvl, it.dataPathArr) + \") + '\";\n    }) + \"'\";\n    return expr.replace(EMPTY_STR, '');\n  }\n\n  function templateFunc(str) {\n    return 'function() { return ' + templateExpr(str) + '; }';\n  }\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}