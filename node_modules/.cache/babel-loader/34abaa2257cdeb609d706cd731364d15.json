{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nconst Template = require(\"../Template\");\n\nclass RequireIncludeDependency extends ModuleDependency {\n  constructor(request, range) {\n    super(request);\n    this.range = range;\n  }\n\n  getReference() {\n    if (!this.module) return null; // This doesn't use any export\n\n    return new DependencyReference(this.module, [], false);\n  }\n\n  get type() {\n    return \"require.include\";\n  }\n\n}\n\nRequireIncludeDependency.Template = class RequireIncludeDependencyTemplate {\n  apply(dep, source, runtime) {\n    const comment = runtime.outputOptions.pathinfo ? Template.toComment(`require.include ${runtime.requestShortener.shorten(dep.request)}`) : \"\";\n    source.replace(dep.range[0], dep.range[1] - 1, `undefined${comment}`);\n  }\n\n};\nmodule.exports = RequireIncludeDependency;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/dependencies/RequireIncludeDependency.js"],"names":["DependencyReference","require","ModuleDependency","Template","RequireIncludeDependency","constructor","request","range","getReference","module","type","RequireIncludeDependencyTemplate","apply","dep","source","runtime","comment","outputOptions","pathinfo","toComment","requestShortener","shorten","replace","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAnC;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAhC;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AAEA,MAAMG,wBAAN,SAAuCF,gBAAvC,CAAwD;AACvDG,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiB;AAC3B,UAAMD,OAAN;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA;;AAEDC,EAAAA,YAAY,GAAG;AACd,QAAI,CAAC,KAAKC,MAAV,EAAkB,OAAO,IAAP,CADJ,CAEd;;AACA,WAAO,IAAIT,mBAAJ,CAAwB,KAAKS,MAA7B,EAAqC,EAArC,EAAyC,KAAzC,CAAP;AACA;;AAED,MAAIC,IAAJ,GAAW;AACV,WAAO,iBAAP;AACA;;AAdsD;;AAiBxDN,wBAAwB,CAACD,QAAzB,GAAoC,MAAMQ,gCAAN,CAAuC;AAC1EC,EAAAA,KAAK,CAACC,GAAD,EAAMC,MAAN,EAAcC,OAAd,EAAuB;AAC3B,UAAMC,OAAO,GAAGD,OAAO,CAACE,aAAR,CAAsBC,QAAtB,GACbf,QAAQ,CAACgB,SAAT,CACC,mBAAkBJ,OAAO,CAACK,gBAAR,CAAyBC,OAAzB,CAAiCR,GAAG,CAACP,OAArC,CAA8C,EADjE,CADa,GAIb,EAJH;AAKAQ,IAAAA,MAAM,CAACQ,OAAP,CAAeT,GAAG,CAACN,KAAJ,CAAU,CAAV,CAAf,EAA6BM,GAAG,CAACN,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAAgD,YAAWS,OAAQ,EAAnE;AACA;;AARyE,CAA3E;AAWAP,MAAM,CAACc,OAAP,GAAiBnB,wBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst Template = require(\"../Template\");\n\nclass RequireIncludeDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t}\n\n\tgetReference() {\n\t\tif (!this.module) return null;\n\t\t// This doesn't use any export\n\t\treturn new DependencyReference(this.module, [], false);\n\t}\n\n\tget type() {\n\t\treturn \"require.include\";\n\t}\n}\n\nRequireIncludeDependency.Template = class RequireIncludeDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst comment = runtime.outputOptions.pathinfo\n\t\t\t? Template.toComment(\n\t\t\t\t\t`require.include ${runtime.requestShortener.shorten(dep.request)}`\n\t\t\t  )\n\t\t\t: \"\";\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, `undefined${comment}`);\n\t}\n};\n\nmodule.exports = RequireIncludeDependency;\n"]},"metadata":{},"sourceType":"script"}