{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Stats = require(\"./Stats\");\n\nconst optionOrFallback = (optionValue, fallbackValue) => optionValue !== undefined ? optionValue : fallbackValue;\n\nclass MultiStats {\n  constructor(stats) {\n    this.stats = stats;\n    this.hash = stats.map(stat => stat.hash).join(\"\");\n  }\n\n  hasErrors() {\n    return this.stats.map(stat => stat.hasErrors()).reduce((a, b) => a || b, false);\n  }\n\n  hasWarnings() {\n    return this.stats.map(stat => stat.hasWarnings()).reduce((a, b) => a || b, false);\n  }\n\n  toJson(options, forToString) {\n    if (typeof options === \"boolean\" || typeof options === \"string\") {\n      options = Stats.presetToOptions(options);\n    } else if (!options) {\n      options = {};\n    }\n\n    const jsons = this.stats.map((stat, idx) => {\n      const childOptions = Stats.getChildOptions(options, idx);\n      const obj = stat.toJson(childOptions, forToString);\n      obj.name = stat.compilation && stat.compilation.name;\n      return obj;\n    });\n    const showVersion = options.version === undefined ? jsons.every(j => j.version) : options.version !== false;\n    const showHash = options.hash === undefined ? jsons.every(j => j.hash) : options.hash !== false;\n\n    if (showVersion) {\n      for (const j of jsons) {\n        delete j.version;\n      }\n    }\n\n    const obj = {\n      errors: jsons.reduce((arr, j) => {\n        return arr.concat(j.errors.map(msg => {\n          return `(${j.name}) ${msg}`;\n        }));\n      }, []),\n      warnings: jsons.reduce((arr, j) => {\n        return arr.concat(j.warnings.map(msg => {\n          return `(${j.name}) ${msg}`;\n        }));\n      }, [])\n    };\n    if (showVersion) obj.version = require(\"../package.json\").version;\n    if (showHash) obj.hash = this.hash;\n    if (options.children !== false) obj.children = jsons;\n    return obj;\n  }\n\n  toString(options) {\n    if (typeof options === \"boolean\" || typeof options === \"string\") {\n      options = Stats.presetToOptions(options);\n    } else if (!options) {\n      options = {};\n    }\n\n    const useColors = optionOrFallback(options.colors, false);\n    const obj = this.toJson(options, true);\n    return Stats.jsonToString(obj, useColors);\n  }\n\n}\n\nmodule.exports = MultiStats;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/MultiStats.js"],"names":["Stats","require","optionOrFallback","optionValue","fallbackValue","undefined","MultiStats","constructor","stats","hash","map","stat","join","hasErrors","reduce","a","b","hasWarnings","toJson","options","forToString","presetToOptions","jsons","idx","childOptions","getChildOptions","obj","name","compilation","showVersion","version","every","j","showHash","errors","arr","concat","msg","warnings","children","toString","useColors","colors","jsonToString","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Stats = require(\"./Stats\");\n\nconst optionOrFallback = (optionValue, fallbackValue) =>\n\toptionValue !== undefined ? optionValue : fallbackValue;\n\nclass MultiStats {\n\tconstructor(stats) {\n\t\tthis.stats = stats;\n\t\tthis.hash = stats.map(stat => stat.hash).join(\"\");\n\t}\n\n\thasErrors() {\n\t\treturn this.stats\n\t\t\t.map(stat => stat.hasErrors())\n\t\t\t.reduce((a, b) => a || b, false);\n\t}\n\n\thasWarnings() {\n\t\treturn this.stats\n\t\t\t.map(stat => stat.hasWarnings())\n\t\t\t.reduce((a, b) => a || b, false);\n\t}\n\n\ttoJson(options, forToString) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\t\tconst jsons = this.stats.map((stat, idx) => {\n\t\t\tconst childOptions = Stats.getChildOptions(options, idx);\n\t\t\tconst obj = stat.toJson(childOptions, forToString);\n\t\t\tobj.name = stat.compilation && stat.compilation.name;\n\t\t\treturn obj;\n\t\t});\n\t\tconst showVersion =\n\t\t\toptions.version === undefined\n\t\t\t\t? jsons.every(j => j.version)\n\t\t\t\t: options.version !== false;\n\t\tconst showHash =\n\t\t\toptions.hash === undefined\n\t\t\t\t? jsons.every(j => j.hash)\n\t\t\t\t: options.hash !== false;\n\t\tif (showVersion) {\n\t\t\tfor (const j of jsons) {\n\t\t\t\tdelete j.version;\n\t\t\t}\n\t\t}\n\t\tconst obj = {\n\t\t\terrors: jsons.reduce((arr, j) => {\n\t\t\t\treturn arr.concat(\n\t\t\t\t\tj.errors.map(msg => {\n\t\t\t\t\t\treturn `(${j.name}) ${msg}`;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}, []),\n\t\t\twarnings: jsons.reduce((arr, j) => {\n\t\t\t\treturn arr.concat(\n\t\t\t\t\tj.warnings.map(msg => {\n\t\t\t\t\t\treturn `(${j.name}) ${msg}`;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}, [])\n\t\t};\n\t\tif (showVersion) obj.version = require(\"../package.json\").version;\n\t\tif (showHash) obj.hash = this.hash;\n\t\tif (options.children !== false) obj.children = jsons;\n\t\treturn obj;\n\t}\n\n\ttoString(options) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst useColors = optionOrFallback(options.colors, false);\n\n\t\tconst obj = this.toJson(options, true);\n\n\t\treturn Stats.jsonToString(obj, useColors);\n\t}\n}\n\nmodule.exports = MultiStats;\n"]},"metadata":{},"sourceType":"script"}