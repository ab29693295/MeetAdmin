{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Generator = require(\"../Generator\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\n\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../Dependency\").DependencyTemplate} DependencyTemplate */\n\n\nclass WebAssemblyJavascriptGenerator extends Generator {\n  /**\n   * @param {NormalModule} module module for which the code should be generated\n   * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n   * @param {RuntimeTemplate} runtimeTemplate the runtime template\n   * @param {string} type which kind of code should be generated\n   * @returns {Source} generated code\n   */\n  generate(module, dependencyTemplates, runtimeTemplate, type) {\n    const initIdentifer = Array.isArray(module.usedExports) ? Template.numberToIdentifer(module.usedExports.length) : \"__webpack_init__\";\n    let needExportsCopy = false;\n    const importedModules = new Map();\n    const initParams = [];\n    let index = 0;\n\n    for (const dep of module.dependencies) {\n      const depAsAny =\n      /** @type {any} */\n      dep;\n\n      if (dep.module) {\n        let importData = importedModules.get(dep.module);\n\n        if (importData === undefined) {\n          importedModules.set(dep.module, importData = {\n            importVar: `m${index}`,\n            index,\n            request: \"userRequest\" in depAsAny ? depAsAny.userRequest : undefined,\n            names: new Set(),\n            reexports: []\n          });\n          index++;\n        }\n\n        if (dep instanceof WebAssemblyImportDependency) {\n          importData.names.add(dep.name);\n\n          if (dep.description.type === \"GlobalType\") {\n            const exportName = dep.name;\n            const usedName = dep.module && dep.module.isUsed(exportName);\n\n            if (dep.module) {\n              if (usedName) {\n                initParams.push(runtimeTemplate.exportFromImport({\n                  module: dep.module,\n                  request: dep.request,\n                  importVar: importData.importVar,\n                  originModule: module,\n                  exportName: dep.name,\n                  asiSafe: true,\n                  isCall: false,\n                  callContext: null\n                }));\n              }\n            }\n          }\n        }\n\n        if (dep instanceof WebAssemblyExportImportedDependency) {\n          importData.names.add(dep.name);\n          const usedName = module.isUsed(dep.exportName);\n\n          if (usedName) {\n            const exportProp = `${module.exportsArgument}[${JSON.stringify(usedName)}]`;\n            const defineStatement = Template.asString([`${exportProp} = ${runtimeTemplate.exportFromImport({\n              module: dep.module,\n              request: dep.request,\n              importVar: importData.importVar,\n              originModule: module,\n              exportName: dep.name,\n              asiSafe: true,\n              isCall: false,\n              callContext: null\n            })};`, `if(WebAssembly.Global) ${exportProp} = ` + `new WebAssembly.Global({ value: ${JSON.stringify(dep.valueType)} }, ${exportProp});`]);\n            importData.reexports.push(defineStatement);\n            needExportsCopy = true;\n          }\n        }\n      }\n    }\n\n    const importsCode = Template.asString(Array.from(importedModules, ([module, {\n      importVar,\n      request,\n      reexports\n    }]) => {\n      const importStatement = runtimeTemplate.importStatement({\n        module,\n        request,\n        importVar,\n        originModule: module\n      });\n      return importStatement + reexports.join(\"\\n\");\n    })); // create source\n\n    const source = new RawSource(['\"use strict\";', \"// Instantiate WebAssembly module\", \"var wasmExports = __webpack_require__.w[module.i];\", !Array.isArray(module.usedExports) ? `__webpack_require__.r(${module.exportsArgument});` : \"\", // this must be before import for circular dependencies\n    \"// export exports from WebAssembly module\", Array.isArray(module.usedExports) && !needExportsCopy ? `${module.moduleArgument}.exports = wasmExports;` : \"for(var name in wasmExports) \" + `if(name != ${JSON.stringify(initIdentifer)}) ` + `${module.exportsArgument}[name] = wasmExports[name];`, \"// exec imports from WebAssembly module (for esm order)\", importsCode, \"\", \"// exec wasm module\", `wasmExports[${JSON.stringify(initIdentifer)}](${initParams.join(\", \")})`].join(\"\\n\"));\n    return source;\n  }\n\n}\n\nmodule.exports = WebAssemblyJavascriptGenerator;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/wasm/WebAssemblyJavascriptGenerator.js"],"names":["Generator","require","Template","RawSource","WebAssemblyImportDependency","WebAssemblyExportImportedDependency","WebAssemblyJavascriptGenerator","generate","module","dependencyTemplates","runtimeTemplate","type","initIdentifer","Array","isArray","usedExports","numberToIdentifer","length","needExportsCopy","importedModules","Map","initParams","index","dep","dependencies","depAsAny","importData","get","undefined","set","importVar","request","userRequest","names","Set","reexports","add","name","description","exportName","usedName","isUsed","push","exportFromImport","originModule","asiSafe","isCall","callContext","exportProp","exportsArgument","JSON","stringify","defineStatement","asString","valueType","importsCode","from","importStatement","join","source","moduleArgument","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Generator = require(\"../Generator\");\nconst Template = require(\"../Template\");\nconst { RawSource } = require(\"webpack-sources\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\").DependencyTemplate} DependencyTemplate */\n\nclass WebAssemblyJavascriptGenerator extends Generator {\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n\t * @param {RuntimeTemplate} runtimeTemplate the runtime template\n\t * @param {string} type which kind of code should be generated\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, dependencyTemplates, runtimeTemplate, type) {\n\t\tconst initIdentifer = Array.isArray(module.usedExports)\n\t\t\t? Template.numberToIdentifer(module.usedExports.length)\n\t\t\t: \"__webpack_init__\";\n\n\t\tlet needExportsCopy = false;\n\t\tconst importedModules = new Map();\n\t\tconst initParams = [];\n\t\tlet index = 0;\n\t\tfor (const dep of module.dependencies) {\n\t\t\tconst depAsAny = /** @type {any} */ (dep);\n\t\t\tif (dep.module) {\n\t\t\t\tlet importData = importedModules.get(dep.module);\n\t\t\t\tif (importData === undefined) {\n\t\t\t\t\timportedModules.set(\n\t\t\t\t\t\tdep.module,\n\t\t\t\t\t\t(importData = {\n\t\t\t\t\t\t\timportVar: `m${index}`,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\trequest:\n\t\t\t\t\t\t\t\t\"userRequest\" in depAsAny ? depAsAny.userRequest : undefined,\n\t\t\t\t\t\t\tnames: new Set(),\n\t\t\t\t\t\t\treexports: []\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyImportDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tif (dep.description.type === \"GlobalType\") {\n\t\t\t\t\t\tconst exportName = dep.name;\n\t\t\t\t\t\tconst usedName = dep.module && dep.module.isUsed(exportName);\n\n\t\t\t\t\t\tif (dep.module) {\n\t\t\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\t\t\tinitParams.push(\n\t\t\t\t\t\t\t\t\truntimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\t\t\tmodule: dep.module,\n\t\t\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\t\t\tcallContext: null\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyExportImportedDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tconst usedName = module.isUsed(dep.exportName);\n\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\tconst exportProp = `${module.exportsArgument}[${JSON.stringify(\n\t\t\t\t\t\t\tusedName\n\t\t\t\t\t\t)}]`;\n\t\t\t\t\t\tconst defineStatement = Template.asString([\n\t\t\t\t\t\t\t`${exportProp} = ${runtimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\tmodule: dep.module,\n\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\tcallContext: null\n\t\t\t\t\t\t\t})};`,\n\t\t\t\t\t\t\t`if(WebAssembly.Global) ${exportProp} = ` +\n\t\t\t\t\t\t\t\t`new WebAssembly.Global({ value: ${JSON.stringify(\n\t\t\t\t\t\t\t\t\tdep.valueType\n\t\t\t\t\t\t\t\t)} }, ${exportProp});`\n\t\t\t\t\t\t]);\n\t\t\t\t\t\timportData.reexports.push(defineStatement);\n\t\t\t\t\t\tneedExportsCopy = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst importsCode = Template.asString(\n\t\t\tArray.from(\n\t\t\t\timportedModules,\n\t\t\t\t([module, { importVar, request, reexports }]) => {\n\t\t\t\t\tconst importStatement = runtimeTemplate.importStatement({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\toriginModule: module\n\t\t\t\t\t});\n\t\t\t\t\treturn importStatement + reexports.join(\"\\n\");\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\t// create source\n\t\tconst source = new RawSource(\n\t\t\t[\n\t\t\t\t'\"use strict\";',\n\t\t\t\t\"// Instantiate WebAssembly module\",\n\t\t\t\t\"var wasmExports = __webpack_require__.w[module.i];\",\n\n\t\t\t\t!Array.isArray(module.usedExports)\n\t\t\t\t\t? `__webpack_require__.r(${module.exportsArgument});`\n\t\t\t\t\t: \"\",\n\n\t\t\t\t// this must be before import for circular dependencies\n\t\t\t\t\"// export exports from WebAssembly module\",\n\t\t\t\tArray.isArray(module.usedExports) && !needExportsCopy\n\t\t\t\t\t? `${module.moduleArgument}.exports = wasmExports;`\n\t\t\t\t\t: \"for(var name in wasmExports) \" +\n\t\t\t\t\t  `if(name != ${JSON.stringify(initIdentifer)}) ` +\n\t\t\t\t\t  `${module.exportsArgument}[name] = wasmExports[name];`,\n\t\t\t\t\"// exec imports from WebAssembly module (for esm order)\",\n\t\t\t\timportsCode,\n\t\t\t\t\"\",\n\t\t\t\t\"// exec wasm module\",\n\t\t\t\t`wasmExports[${JSON.stringify(initIdentifer)}](${initParams.join(\n\t\t\t\t\t\", \"\n\t\t\t\t)})`\n\t\t\t].join(\"\\n\")\n\t\t);\n\t\treturn source;\n\t}\n}\n\nmodule.exports = WebAssemblyJavascriptGenerator;\n"]},"metadata":{},"sourceType":"script"}