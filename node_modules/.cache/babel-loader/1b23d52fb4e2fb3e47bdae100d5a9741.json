{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nconst NullFactory = require(\"./NullFactory\");\n/* eslint-disable camelcase */\n\n\nconst REPLACEMENTS = {\n  __webpack_require__: \"__webpack_require__\",\n  __webpack_public_path__: \"__webpack_require__.p\",\n  __webpack_modules__: \"__webpack_require__.m\",\n  __webpack_chunk_load__: \"__webpack_require__.e\",\n  __non_webpack_require__: \"require\",\n  __webpack_nonce__: \"__webpack_require__.nc\",\n  \"require.onError\": \"__webpack_require__.oe\"\n};\nconst NO_WEBPACK_REQUIRE = {\n  __non_webpack_require__: true\n};\nconst REPLACEMENT_TYPES = {\n  __webpack_public_path__: \"string\",\n  __webpack_require__: \"function\",\n  __webpack_modules__: \"object\",\n  __webpack_chunk_load__: \"function\",\n  __webpack_nonce__: \"string\"\n};\n/* eslint-enable camelcase */\n\nclass APIPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"APIPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n      compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n\n      const handler = parser => {\n        Object.keys(REPLACEMENTS).forEach(key => {\n          parser.hooks.expression.for(key).tap(\"APIPlugin\", NO_WEBPACK_REQUIRE[key] ? ParserHelpers.toConstantDependency(parser, REPLACEMENTS[key]) : ParserHelpers.toConstantDependencyWithWebpackRequire(parser, REPLACEMENTS[key]));\n          const type = REPLACEMENT_TYPES[key];\n\n          if (type) {\n            parser.hooks.evaluateTypeof.for(key).tap(\"APIPlugin\", ParserHelpers.evaluateToString(type));\n          }\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"APIPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"APIPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"APIPlugin\", handler);\n    });\n  }\n\n}\n\nmodule.exports = APIPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/APIPlugin.js"],"names":["ConstDependency","require","ParserHelpers","NullFactory","REPLACEMENTS","__webpack_require__","__webpack_public_path__","__webpack_modules__","__webpack_chunk_load__","__non_webpack_require__","__webpack_nonce__","NO_WEBPACK_REQUIRE","REPLACEMENT_TYPES","APIPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","Object","keys","forEach","key","expression","for","toConstantDependency","toConstantDependencyWithWebpackRequire","type","evaluateTypeof","evaluateToString","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,gCAAD,CAA/B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AAEA,MAAME,WAAW,GAAGF,OAAO,CAAC,eAAD,CAA3B;AAEA;;;AACA,MAAMG,YAAY,GAAG;AACpBC,EAAAA,mBAAmB,EAAE,qBADD;AAEpBC,EAAAA,uBAAuB,EAAE,uBAFL;AAGpBC,EAAAA,mBAAmB,EAAE,uBAHD;AAIpBC,EAAAA,sBAAsB,EAAE,uBAJJ;AAKpBC,EAAAA,uBAAuB,EAAE,SALL;AAMpBC,EAAAA,iBAAiB,EAAE,wBANC;AAOpB,qBAAmB;AAPC,CAArB;AASA,MAAMC,kBAAkB,GAAG;AAC1BF,EAAAA,uBAAuB,EAAE;AADC,CAA3B;AAGA,MAAMG,iBAAiB,GAAG;AACzBN,EAAAA,uBAAuB,EAAE,QADA;AAEzBD,EAAAA,mBAAmB,EAAE,UAFI;AAGzBE,EAAAA,mBAAmB,EAAE,QAHI;AAIzBC,EAAAA,sBAAsB,EAAE,UAJC;AAKzBE,EAAAA,iBAAiB,EAAE;AALM,CAA1B;AAOA;;AAEA,MAAMG,SAAN,CAAgB;AACfC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,WADD,EAEC,CAACD,WAAD,EAAc;AAAEE,MAAAA;AAAF,KAAd,KAA0C;AACzCF,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CAAoCrB,eAApC,EAAqD,IAAIG,WAAJ,EAArD;AACAc,MAAAA,WAAW,CAACK,mBAAZ,CAAgCD,GAAhC,CACCrB,eADD,EAEC,IAAIA,eAAe,CAACuB,QAApB,EAFD;;AAKA,YAAMC,OAAO,GAAGC,MAAM,IAAI;AACzBC,QAAAA,MAAM,CAACC,IAAP,CAAYvB,YAAZ,EAA0BwB,OAA1B,CAAkCC,GAAG,IAAI;AACxCJ,UAAAA,MAAM,CAACT,KAAP,CAAac,UAAb,CACEC,GADF,CACMF,GADN,EAEEX,GAFF,CAGE,WAHF,EAIEP,kBAAkB,CAACkB,GAAD,CAAlB,GACG3B,aAAa,CAAC8B,oBAAd,CACAP,MADA,EAEArB,YAAY,CAACyB,GAAD,CAFZ,CADH,GAKG3B,aAAa,CAAC+B,sCAAd,CACAR,MADA,EAEArB,YAAY,CAACyB,GAAD,CAFZ,CATL;AAcA,gBAAMK,IAAI,GAAGtB,iBAAiB,CAACiB,GAAD,CAA9B;;AACA,cAAIK,IAAJ,EAAU;AACTT,YAAAA,MAAM,CAACT,KAAP,CAAamB,cAAb,CACEJ,GADF,CACMF,GADN,EAEEX,GAFF,CAEM,WAFN,EAEmBhB,aAAa,CAACkC,gBAAd,CAA+BF,IAA/B,CAFnB;AAGA;AACD,SArBD;AAsBA,OAvBD;;AAyBAf,MAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEM,GADF,CACM,iBADN,EAEEb,GAFF,CAEM,WAFN,EAEmBM,OAFnB;AAGAL,MAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEM,GADF,CACM,oBADN,EAEEb,GAFF,CAEM,WAFN,EAEmBM,OAFnB;AAGAL,MAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEM,GADF,CACM,gBADN,EAEEb,GAFF,CAEM,WAFN,EAEmBM,OAFnB;AAGA,KA3CF;AA6CA;;AA/Cc;;AAkDhBa,MAAM,CAACC,OAAP,GAAiBzB,SAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nconst NullFactory = require(\"./NullFactory\");\n\n/* eslint-disable camelcase */\nconst REPLACEMENTS = {\n\t__webpack_require__: \"__webpack_require__\",\n\t__webpack_public_path__: \"__webpack_require__.p\",\n\t__webpack_modules__: \"__webpack_require__.m\",\n\t__webpack_chunk_load__: \"__webpack_require__.e\",\n\t__non_webpack_require__: \"require\",\n\t__webpack_nonce__: \"__webpack_require__.nc\",\n\t\"require.onError\": \"__webpack_require__.oe\"\n};\nconst NO_WEBPACK_REQUIRE = {\n\t__non_webpack_require__: true\n};\nconst REPLACEMENT_TYPES = {\n\t__webpack_public_path__: \"string\",\n\t__webpack_require__: \"function\",\n\t__webpack_modules__: \"object\",\n\t__webpack_chunk_load__: \"function\",\n\t__webpack_nonce__: \"string\"\n};\n/* eslint-enable camelcase */\n\nclass APIPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"APIPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tObject.keys(REPLACEMENTS).forEach(key => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"APIPlugin\",\n\t\t\t\t\t\t\t\tNO_WEBPACK_REQUIRE[key]\n\t\t\t\t\t\t\t\t\t? ParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: ParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tconst type = REPLACEMENT_TYPES[key];\n\t\t\t\t\t\tif (type) {\n\t\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t\t.tap(\"APIPlugin\", ParserHelpers.evaluateToString(type));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"APIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"APIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"APIPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = APIPlugin;\n"]},"metadata":{},"sourceType":"script"}