{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncBailHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onResult,\n    resultReturns,\n    onDone,\n    rethrowIfPossible\n  }) {\n    return this.callTapsSeries({\n      onError: (i, err) => onError(err),\n      onResult: (i, result, next) => `if(${result} !== undefined) {\\n${onResult(result)};\\n} else {\\n${next()}}\\n`,\n      resultReturns,\n      onDone,\n      rethrowIfPossible\n    });\n  }\n\n}\n\nconst factory = new SyncBailHookCodeFactory();\n\nclass SyncBailHook extends Hook {\n  tapAsync() {\n    throw new Error(\"tapAsync is not supported on a SyncBailHook\");\n  }\n\n  tapPromise() {\n    throw new Error(\"tapPromise is not supported on a SyncBailHook\");\n  }\n\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nmodule.exports = SyncBailHook;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/tapable/lib/SyncBailHook.js"],"names":["Hook","require","HookCodeFactory","SyncBailHookCodeFactory","content","onError","onResult","resultReturns","onDone","rethrowIfPossible","callTapsSeries","i","err","result","next","factory","SyncBailHook","tapAsync","Error","tapPromise","compile","options","setup","create","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,uBAAN,SAAsCD,eAAtC,CAAsD;AACrDE,EAAAA,OAAO,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,aAArB;AAAoCC,IAAAA,MAApC;AAA4CC,IAAAA;AAA5C,GAAD,EAAkE;AACxE,WAAO,KAAKC,cAAL,CAAoB;AAC1BL,MAAAA,OAAO,EAAE,CAACM,CAAD,EAAIC,GAAJ,KAAYP,OAAO,CAACO,GAAD,CADF;AAE1BN,MAAAA,QAAQ,EAAE,CAACK,CAAD,EAAIE,MAAJ,EAAYC,IAAZ,KACR,MAAKD,MAAO,sBAAqBP,QAAQ,CACzCO,MADyC,CAExC,gBAAeC,IAAI,EAAG,KALC;AAM1BP,MAAAA,aAN0B;AAO1BC,MAAAA,MAP0B;AAQ1BC,MAAAA;AAR0B,KAApB,CAAP;AAUA;;AAZoD;;AAetD,MAAMM,OAAO,GAAG,IAAIZ,uBAAJ,EAAhB;;AAEA,MAAMa,YAAN,SAA2BhB,IAA3B,CAAgC;AAC/BiB,EAAAA,QAAQ,GAAG;AACV,UAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACA;;AAEDC,EAAAA,UAAU,GAAG;AACZ,UAAM,IAAID,KAAJ,CAAU,+CAAV,CAAN;AACA;;AAEDE,EAAAA,OAAO,CAACC,OAAD,EAAU;AAChBN,IAAAA,OAAO,CAACO,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,WAAON,OAAO,CAACQ,MAAR,CAAeF,OAAf,CAAP;AACA;;AAZ8B;;AAehCG,MAAM,CAACC,OAAP,GAAiBT,YAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncBailHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onResult, resultReturns, onDone, rethrowIfPossible }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err) => onError(err),\n\t\t\tonResult: (i, result, next) =>\n\t\t\t\t`if(${result} !== undefined) {\\n${onResult(\n\t\t\t\t\tresult\n\t\t\t\t)};\\n} else {\\n${next()}}\\n`,\n\t\t\tresultReturns,\n\t\t\tonDone,\n\t\t\trethrowIfPossible\n\t\t});\n\t}\n}\n\nconst factory = new SyncBailHookCodeFactory();\n\nclass SyncBailHook extends Hook {\n\ttapAsync() {\n\t\tthrow new Error(\"tapAsync is not supported on a SyncBailHook\");\n\t}\n\n\ttapPromise() {\n\t\tthrow new Error(\"tapPromise is not supported on a SyncBailHook\");\n\t}\n\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nmodule.exports = SyncBailHook;\n"]},"metadata":{},"sourceType":"script"}