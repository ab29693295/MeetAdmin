{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst fs = require(\"graceful-fs\");\n\nclass NodeJsInputFileSystem {\n  readdir(path, callback) {\n    fs.readdir(path, (err, files) => {\n      callback(err, files && files.map(file => {\n        return file.normalize ? file.normalize(\"NFC\") : file;\n      }));\n    });\n  }\n\n  readdirSync(path) {\n    const files = fs.readdirSync(path);\n    return files && files.map(file => {\n      return file.normalize ? file.normalize(\"NFC\") : file;\n    });\n  }\n\n}\n\nconst fsMethods = [\"stat\", \"statSync\", \"readFile\", \"readFileSync\", \"readlink\", \"readlinkSync\"];\n\nfor (const key of fsMethods) {\n  Object.defineProperty(NodeJsInputFileSystem.prototype, key, {\n    configurable: true,\n    writable: true,\n    value: fs[key].bind(fs)\n  });\n}\n\nmodule.exports = NodeJsInputFileSystem;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js"],"names":["fs","require","NodeJsInputFileSystem","readdir","path","callback","err","files","map","file","normalize","readdirSync","fsMethods","key","Object","defineProperty","prototype","configurable","writable","value","bind","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AAEA,MAAMC,qBAAN,CAA4B;AAC3BC,EAAAA,OAAO,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACvBL,IAAAA,EAAE,CAACG,OAAH,CAAWC,IAAX,EAAiB,CAACE,GAAD,EAAMC,KAAN,KAAgB;AAChCF,MAAAA,QAAQ,CACPC,GADO,EAEPC,KAAK,IACJA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACjB,eAAOA,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACC,SAAL,CAAe,KAAf,CAAjB,GAAyCD,IAAhD;AACA,OAFD,CAHM,CAAR;AAOA,KARD;AASA;;AAEDE,EAAAA,WAAW,CAACP,IAAD,EAAO;AACjB,UAAMG,KAAK,GAAGP,EAAE,CAACW,WAAH,CAAeP,IAAf,CAAd;AACA,WACCG,KAAK,IACLA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACjB,aAAOA,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACC,SAAL,CAAe,KAAf,CAAjB,GAAyCD,IAAhD;AACA,KAFD,CAFD;AAMA;;AArB0B;;AAwB5B,MAAMG,SAAS,GAAG,CACjB,MADiB,EAEjB,UAFiB,EAGjB,UAHiB,EAIjB,cAJiB,EAKjB,UALiB,EAMjB,cANiB,CAAlB;;AASA,KAAK,MAAMC,GAAX,IAAkBD,SAAlB,EAA6B;AAC5BE,EAAAA,MAAM,CAACC,cAAP,CAAsBb,qBAAqB,CAACc,SAA5C,EAAuDH,GAAvD,EAA4D;AAC3DI,IAAAA,YAAY,EAAE,IAD6C;AAE3DC,IAAAA,QAAQ,EAAE,IAFiD;AAG3DC,IAAAA,KAAK,EAAEnB,EAAE,CAACa,GAAD,CAAF,CAAQO,IAAR,CAAapB,EAAb;AAHoD,GAA5D;AAKA;;AAEDqB,MAAM,CAACC,OAAP,GAAiBpB,qBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst fs = require(\"graceful-fs\");\n\nclass NodeJsInputFileSystem {\n\treaddir(path, callback) {\n\t\tfs.readdir(path, (err, files) => {\n\t\t\tcallback(\n\t\t\t\terr,\n\t\t\t\tfiles &&\n\t\t\t\t\tfiles.map(file => {\n\t\t\t\t\t\treturn file.normalize ? file.normalize(\"NFC\") : file;\n\t\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\n\treaddirSync(path) {\n\t\tconst files = fs.readdirSync(path);\n\t\treturn (\n\t\t\tfiles &&\n\t\t\tfiles.map(file => {\n\t\t\t\treturn file.normalize ? file.normalize(\"NFC\") : file;\n\t\t\t})\n\t\t);\n\t}\n}\n\nconst fsMethods = [\n\t\"stat\",\n\t\"statSync\",\n\t\"readFile\",\n\t\"readFileSync\",\n\t\"readlink\",\n\t\"readlinkSync\"\n];\n\nfor (const key of fsMethods) {\n\tObject.defineProperty(NodeJsInputFileSystem.prototype, key, {\n\t\tconfigurable: true,\n\t\twritable: true,\n\t\tvalue: fs[key].bind(fs)\n\t});\n}\n\nmodule.exports = NodeJsInputFileSystem;\n"]},"metadata":{},"sourceType":"script"}