{"ast":null,"code":"\"use strict\";\n/**\n * @template T\n */\n\nclass Queue {\n  /**\n   * @param {Iterable<T>=} items The initial elements.\n   */\n  constructor(items) {\n    /** @private @type {Set<T>} */\n    this.set = new Set(items);\n    /** @private @type {Iterator<T>} */\n\n    this.iterator = this.set[Symbol.iterator]();\n  }\n  /**\n   * Returns the number of elements in this queue.\n   * @returns {number} The number of elements in this queue.\n   */\n\n\n  get length() {\n    return this.set.size;\n  }\n  /**\n   * Appends the specified element to this queue.\n   * @param {T} item The element to add.\n   * @returns {void}\n   */\n\n\n  enqueue(item) {\n    this.set.add(item);\n  }\n  /**\n   * Retrieves and removes the head of this queue.\n   * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n   */\n\n\n  dequeue() {\n    const result = this.iterator.next();\n    if (result.done) return undefined;\n    this.set.delete(result.value);\n    return result.value;\n  }\n\n}\n\nmodule.exports = Queue;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/util/Queue.js"],"names":["Queue","constructor","items","set","Set","iterator","Symbol","length","size","enqueue","item","add","dequeue","result","next","done","undefined","delete","value","module","exports"],"mappings":"AAAA;AAEA;;;;AAGA,MAAMA,KAAN,CAAY;AACX;;;AAGAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB;AACA,SAAKC,GAAL,GAAW,IAAIC,GAAJ,CAAQF,KAAR,CAAX;AACA;;AACA,SAAKG,QAAL,GAAgB,KAAKF,GAAL,CAASG,MAAM,CAACD,QAAhB,GAAhB;AACA;AAED;;;;;;AAIA,MAAIE,MAAJ,GAAa;AACZ,WAAO,KAAKJ,GAAL,CAASK,IAAhB;AACA;AAED;;;;;;;AAKAC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACb,SAAKP,GAAL,CAASQ,GAAT,CAAaD,IAAb;AACA;AAED;;;;;;AAIAE,EAAAA,OAAO,GAAG;AACT,UAAMC,MAAM,GAAG,KAAKR,QAAL,CAAcS,IAAd,EAAf;AACA,QAAID,MAAM,CAACE,IAAX,EAAiB,OAAOC,SAAP;AACjB,SAAKb,GAAL,CAASc,MAAT,CAAgBJ,MAAM,CAACK,KAAvB;AACA,WAAOL,MAAM,CAACK,KAAd;AACA;;AArCU;;AAwCZC,MAAM,CAACC,OAAP,GAAiBpB,KAAjB","sourcesContent":["\"use strict\";\n\n/**\n * @template T\n */\nclass Queue {\n\t/**\n\t * @param {Iterable<T>=} items The initial elements.\n\t */\n\tconstructor(items) {\n\t\t/** @private @type {Set<T>} */\n\t\tthis.set = new Set(items);\n\t\t/** @private @type {Iterator<T>} */\n\t\tthis.iterator = this.set[Symbol.iterator]();\n\t}\n\n\t/**\n\t * Returns the number of elements in this queue.\n\t * @returns {number} The number of elements in this queue.\n\t */\n\tget length() {\n\t\treturn this.set.size;\n\t}\n\n\t/**\n\t * Appends the specified element to this queue.\n\t * @param {T} item The element to add.\n\t * @returns {void}\n\t */\n\tenqueue(item) {\n\t\tthis.set.add(item);\n\t}\n\n\t/**\n\t * Retrieves and removes the head of this queue.\n\t * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n\t */\n\tdequeue() {\n\t\tconst result = this.iterator.next();\n\t\tif (result.done) return undefined;\n\t\tthis.set.delete(result.value);\n\t\treturn result.value;\n\t}\n}\n\nmodule.exports = Queue;\n"]},"metadata":{},"sourceType":"script"}