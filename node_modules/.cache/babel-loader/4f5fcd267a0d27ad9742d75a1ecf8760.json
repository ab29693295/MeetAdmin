{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _os = _interopRequireDefault(require(\"os\"));\n\nvar _cacache = _interopRequireDefault(require(\"cacache\"));\n\nvar _findCacheDir = _interopRequireDefault(require(\"find-cache-dir\"));\n\nvar _workerFarm = _interopRequireDefault(require(\"worker-farm\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _isWsl = _interopRequireDefault(require(\"is-wsl\"));\n\nvar _minify = _interopRequireDefault(require(\"./minify\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst worker = require.resolve('./worker');\n\nclass TaskRunner {\n  constructor(options = {}) {\n    const {\n      cache,\n      parallel\n    } = options;\n    this.cacheDir = cache === true ? (0, _findCacheDir.default)({\n      name: 'terser-webpack-plugin'\n    }) || _os.default.tmpdir() : cache; // In some cases cpus() returns undefined\n    // https://github.com/nodejs/node/issues/19022\n\n    const cpus = _os.default.cpus() || {\n      length: 1\n    }; // WSL sometimes freezes, error seems to be on the WSL side\n    // https://github.com/webpack-contrib/terser-webpack-plugin/issues/21\n\n    this.maxConcurrentWorkers = _isWsl.default ? 1 : parallel === true ? cpus.length - 1 : Math.min(Number(parallel) || 0, cpus.length - 1);\n  }\n\n  run(tasks, callback) {\n    /* istanbul ignore if */\n    if (!tasks.length) {\n      callback(null, []);\n      return;\n    }\n\n    if (this.maxConcurrentWorkers > 1) {\n      const workerOptions = process.platform === 'win32' ? {\n        maxConcurrentWorkers: this.maxConcurrentWorkers,\n        maxConcurrentCallsPerWorker: 1\n      } : {\n        maxConcurrentWorkers: this.maxConcurrentWorkers\n      };\n      this.workers = (0, _workerFarm.default)(workerOptions, worker);\n\n      this.boundWorkers = (options, cb) => {\n        try {\n          this.workers((0, _serializeJavascript.default)(options), cb);\n        } catch (error) {\n          // worker-farm can fail with ENOMEM or something else\n          cb(error);\n        }\n      };\n    } else {\n      this.boundWorkers = (options, cb) => {\n        try {\n          cb(null, (0, _minify.default)(options));\n        } catch (error) {\n          cb(error);\n        }\n      };\n    }\n\n    let toRun = tasks.length;\n    const results = [];\n\n    const step = (index, data) => {\n      toRun -= 1;\n      results[index] = data;\n\n      if (!toRun) {\n        callback(null, results);\n      }\n    };\n\n    tasks.forEach((task, index) => {\n      const enqueue = () => {\n        this.boundWorkers(task, (error, data) => {\n          const result = error ? {\n            error\n          } : data;\n\n          const done = () => step(index, result);\n\n          if (this.cacheDir && !result.error) {\n            _cacache.default.put(this.cacheDir, (0, _serializeJavascript.default)(task.cacheKeys), JSON.stringify(data)).then(done, done);\n          } else {\n            done();\n          }\n        });\n      };\n\n      if (this.cacheDir) {\n        _cacache.default.get(this.cacheDir, (0, _serializeJavascript.default)(task.cacheKeys)).then(({\n          data\n        }) => step(index, JSON.parse(data)), enqueue);\n      } else {\n        enqueue();\n      }\n    });\n  }\n\n  exit() {\n    if (this.workers) {\n      _workerFarm.default.end(this.workers);\n    }\n  }\n\n}\n\nexports.default = TaskRunner;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/node_modules/terser-webpack-plugin/dist/TaskRunner.js"],"names":["Object","defineProperty","exports","value","default","_os","_interopRequireDefault","require","_cacache","_findCacheDir","_workerFarm","_serializeJavascript","_isWsl","_minify","obj","__esModule","worker","resolve","TaskRunner","constructor","options","cache","parallel","cacheDir","name","tmpdir","cpus","length","maxConcurrentWorkers","Math","min","Number","run","tasks","callback","workerOptions","process","platform","maxConcurrentCallsPerWorker","workers","boundWorkers","cb","error","toRun","results","step","index","data","forEach","task","enqueue","result","done","put","cacheKeys","JSON","stringify","then","get","parse","exit","end"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _os = _interopRequireDefault(require(\"os\"));\n\nvar _cacache = _interopRequireDefault(require(\"cacache\"));\n\nvar _findCacheDir = _interopRequireDefault(require(\"find-cache-dir\"));\n\nvar _workerFarm = _interopRequireDefault(require(\"worker-farm\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _isWsl = _interopRequireDefault(require(\"is-wsl\"));\n\nvar _minify = _interopRequireDefault(require(\"./minify\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst worker = require.resolve('./worker');\n\nclass TaskRunner {\n  constructor(options = {}) {\n    const {\n      cache,\n      parallel\n    } = options;\n    this.cacheDir = cache === true ? (0, _findCacheDir.default)({\n      name: 'terser-webpack-plugin'\n    }) || _os.default.tmpdir() : cache; // In some cases cpus() returns undefined\n    // https://github.com/nodejs/node/issues/19022\n\n    const cpus = _os.default.cpus() || {\n      length: 1\n    }; // WSL sometimes freezes, error seems to be on the WSL side\n    // https://github.com/webpack-contrib/terser-webpack-plugin/issues/21\n\n    this.maxConcurrentWorkers = _isWsl.default ? 1 : parallel === true ? cpus.length - 1 : Math.min(Number(parallel) || 0, cpus.length - 1);\n  }\n\n  run(tasks, callback) {\n    /* istanbul ignore if */\n    if (!tasks.length) {\n      callback(null, []);\n      return;\n    }\n\n    if (this.maxConcurrentWorkers > 1) {\n      const workerOptions = process.platform === 'win32' ? {\n        maxConcurrentWorkers: this.maxConcurrentWorkers,\n        maxConcurrentCallsPerWorker: 1\n      } : {\n        maxConcurrentWorkers: this.maxConcurrentWorkers\n      };\n      this.workers = (0, _workerFarm.default)(workerOptions, worker);\n\n      this.boundWorkers = (options, cb) => {\n        try {\n          this.workers((0, _serializeJavascript.default)(options), cb);\n        } catch (error) {\n          // worker-farm can fail with ENOMEM or something else\n          cb(error);\n        }\n      };\n    } else {\n      this.boundWorkers = (options, cb) => {\n        try {\n          cb(null, (0, _minify.default)(options));\n        } catch (error) {\n          cb(error);\n        }\n      };\n    }\n\n    let toRun = tasks.length;\n    const results = [];\n\n    const step = (index, data) => {\n      toRun -= 1;\n      results[index] = data;\n\n      if (!toRun) {\n        callback(null, results);\n      }\n    };\n\n    tasks.forEach((task, index) => {\n      const enqueue = () => {\n        this.boundWorkers(task, (error, data) => {\n          const result = error ? {\n            error\n          } : data;\n\n          const done = () => step(index, result);\n\n          if (this.cacheDir && !result.error) {\n            _cacache.default.put(this.cacheDir, (0, _serializeJavascript.default)(task.cacheKeys), JSON.stringify(data)).then(done, done);\n          } else {\n            done();\n          }\n        });\n      };\n\n      if (this.cacheDir) {\n        _cacache.default.get(this.cacheDir, (0, _serializeJavascript.default)(task.cacheKeys)).then(({\n          data\n        }) => step(index, JSON.parse(data)), enqueue);\n      } else {\n        enqueue();\n      }\n    });\n  }\n\n  exit() {\n    if (this.workers) {\n      _workerFarm.default.end(this.workers);\n    }\n  }\n\n}\n\nexports.default = TaskRunner;"]},"metadata":{},"sourceType":"script"}