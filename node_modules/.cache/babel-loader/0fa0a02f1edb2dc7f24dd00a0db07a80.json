{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class ModuleKindPlugin {\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"ModuleKindPlugin\", (request, resolveContext, callback) => {\n      if (!request.module) return callback();\n      const obj = Object.assign({}, request);\n      delete obj.module;\n      resolver.doResolve(target, obj, \"resolve as module\", resolveContext, (err, result) => {\n        if (err) return callback(err); // Don't allow other alternatives\n\n        if (result === undefined) return callback(null, null);\n        callback(null, result);\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/enhanced-resolve/lib/ModuleKindPlugin.js"],"names":["module","exports","ModuleKindPlugin","constructor","source","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","obj","Object","assign","doResolve","err","result","undefined"],"mappings":"AAAA;;;;AAIA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,gBAAN,CAAuB;AACvCC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,UAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;AACAE,IAAAA,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAEW,kBAFX,EAE+B,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;AACpE,UAAI,CAACF,OAAO,CAACX,MAAb,EAAqB,OAAOa,QAAQ,EAAf;AACrB,YAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,OAAlB,CAAZ;AACA,aAAOG,GAAG,CAACd,MAAX;AACAO,MAAAA,QAAQ,CAACU,SAAT,CACCZ,MADD,EAECS,GAFD,EAGC,mBAHD,EAICF,cAJD,EAKC,CAACM,GAAD,EAAMC,MAAN,KAAiB;AAChB,YAAID,GAAJ,EAAS,OAAOL,QAAQ,CAACK,GAAD,CAAf,CADO,CAGhB;;AACA,YAAIC,MAAM,KAAKC,SAAf,EAA0B,OAAOP,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;AAC1BA,QAAAA,QAAQ,CAAC,IAAD,EAAOM,MAAP,CAAR;AACA,OAXF;AAaA,KAnBF;AAoBA;;AA5BsC,CAAxC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class ModuleKindPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ModuleKindPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!request.module) return callback();\n\t\t\t\tconst obj = Object.assign({}, request);\n\t\t\t\tdelete obj.module;\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"resolve as module\",\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t// Don't allow other alternatives\n\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}