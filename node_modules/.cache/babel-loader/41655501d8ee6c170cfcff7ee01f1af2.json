{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nconst concord = require(\"./concord\");\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\nmodule.exports = class ConcordMainPlugin {\n  constructor(source, options, target) {\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"ConcordMainPlugin\", (request, resolveContext, callback) => {\n      if (request.path !== request.descriptionFileRoot) return callback();\n      const concordField = DescriptionFileUtils.getField(request.descriptionFileData, \"concord\");\n      if (!concordField) return callback();\n      const mainModule = concord.getMain(request.context, concordField);\n      if (!mainModule) return callback();\n      const obj = Object.assign({}, request, {\n        request: mainModule\n      });\n      const filename = path.basename(request.descriptionFilePath);\n      return resolver.doResolve(target, obj, \"use \" + mainModule + \" from \" + filename, resolveContext, callback);\n    });\n  }\n\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/enhanced-resolve/lib/ConcordMainPlugin.js"],"names":["path","require","concord","DescriptionFileUtils","module","exports","ConcordMainPlugin","constructor","source","options","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileRoot","concordField","getField","descriptionFileData","mainModule","getMain","context","obj","Object","assign","filename","basename","descriptionFilePath","doResolve"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,wBAAD,CAApC;;AAEAG,MAAM,CAACC,OAAP,GAAiB,MAAMC,iBAAN,CAAwB;AACxCC,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACpC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,UAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;AACAE,IAAAA,QAAQ,CACNE,OADF,CACU,KAAKN,MADf,EAEEO,QAFF,CAEW,mBAFX,EAEgC,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;AACrE,UAAIF,OAAO,CAAChB,IAAR,KAAiBgB,OAAO,CAACG,mBAA7B,EAAkD,OAAOD,QAAQ,EAAf;AAClD,YAAME,YAAY,GAAGjB,oBAAoB,CAACkB,QAArB,CACpBL,OAAO,CAACM,mBADY,EAEpB,SAFoB,CAArB;AAIA,UAAI,CAACF,YAAL,EAAmB,OAAOF,QAAQ,EAAf;AACnB,YAAMK,UAAU,GAAGrB,OAAO,CAACsB,OAAR,CAAgBR,OAAO,CAACS,OAAxB,EAAiCL,YAAjC,CAAnB;AACA,UAAI,CAACG,UAAL,EAAiB,OAAOL,QAAQ,EAAf;AACjB,YAAMQ,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,OAAlB,EAA2B;AACtCA,QAAAA,OAAO,EAAEO;AAD6B,OAA3B,CAAZ;AAGA,YAAMM,QAAQ,GAAG7B,IAAI,CAAC8B,QAAL,CAAcd,OAAO,CAACe,mBAAtB,CAAjB;AACA,aAAOnB,QAAQ,CAACoB,SAAT,CACNtB,MADM,EAENgB,GAFM,EAGN,SAASH,UAAT,GAAsB,QAAtB,GAAiCM,QAH3B,EAINZ,cAJM,EAKNC,QALM,CAAP;AAOA,KAtBF;AAuBA;;AAhCuC,CAAzC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst concord = require(\"./concord\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\nmodule.exports = class ConcordMainPlugin {\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ConcordMainPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (request.path !== request.descriptionFileRoot) return callback();\n\t\t\t\tconst concordField = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\t\"concord\"\n\t\t\t\t);\n\t\t\t\tif (!concordField) return callback();\n\t\t\t\tconst mainModule = concord.getMain(request.context, concordField);\n\t\t\t\tif (!mainModule) return callback();\n\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\trequest: mainModule\n\t\t\t\t});\n\t\t\t\tconst filename = path.basename(request.descriptionFilePath);\n\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"use \" + mainModule + \" from \" + filename,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}