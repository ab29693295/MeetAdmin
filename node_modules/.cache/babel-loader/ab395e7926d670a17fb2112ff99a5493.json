{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"./Template\");\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nconst NullFactory = require(\"./NullFactory\");\n\nconst REPLACEMENTS = {\n  // eslint-disable-next-line camelcase\n  __webpack_hash__: \"__webpack_require__.h\",\n  // eslint-disable-next-line camelcase\n  __webpack_chunkname__: \"__webpack_require__.cn\"\n};\nconst REPLACEMENT_TYPES = {\n  // eslint-disable-next-line camelcase\n  __webpack_hash__: \"string\",\n  // eslint-disable-next-line camelcase\n  __webpack_chunkname__: \"string\"\n};\n\nclass ExtendedAPIPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"ExtendedAPIPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n      compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n      const mainTemplate = compilation.mainTemplate;\n      mainTemplate.hooks.requireExtensions.tap(\"ExtendedAPIPlugin\", (source, chunk, hash) => {\n        const buf = [source];\n        buf.push(\"\");\n        buf.push(\"// __webpack_hash__\");\n        buf.push(`${mainTemplate.requireFn}.h = ${JSON.stringify(hash)};`);\n        buf.push(\"\");\n        buf.push(\"// __webpack_chunkname__\");\n        buf.push(`${mainTemplate.requireFn}.cn = ${JSON.stringify(chunk.name)};`);\n        return Template.asString(buf);\n      });\n      mainTemplate.hooks.globalHash.tap(\"ExtendedAPIPlugin\", () => true);\n\n      const handler = (parser, parserOptions) => {\n        Object.keys(REPLACEMENTS).forEach(key => {\n          parser.hooks.expression.for(key).tap(\"ExtendedAPIPlugin\", ParserHelpers.toConstantDependencyWithWebpackRequire(parser, REPLACEMENTS[key]));\n          parser.hooks.evaluateTypeof.for(key).tap(\"ExtendedAPIPlugin\", ParserHelpers.evaluateToString(REPLACEMENT_TYPES[key]));\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ExtendedAPIPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ExtendedAPIPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ExtendedAPIPlugin\", handler);\n    });\n  }\n\n}\n\nmodule.exports = ExtendedAPIPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/ExtendedAPIPlugin.js"],"names":["Template","require","ConstDependency","ParserHelpers","NullFactory","REPLACEMENTS","__webpack_hash__","__webpack_chunkname__","REPLACEMENT_TYPES","ExtendedAPIPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","mainTemplate","requireExtensions","source","chunk","hash","buf","push","requireFn","JSON","stringify","name","asString","globalHash","handler","parser","parserOptions","Object","keys","forEach","key","expression","for","toConstantDependencyWithWebpackRequire","evaluateTypeof","evaluateToString","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"./Template\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst ParserHelpers = require(\"./ParserHelpers\");\nconst NullFactory = require(\"./NullFactory\");\n\nconst REPLACEMENTS = {\n\t// eslint-disable-next-line camelcase\n\t__webpack_hash__: \"__webpack_require__.h\",\n\t// eslint-disable-next-line camelcase\n\t__webpack_chunkname__: \"__webpack_require__.cn\"\n};\nconst REPLACEMENT_TYPES = {\n\t// eslint-disable-next-line camelcase\n\t__webpack_hash__: \"string\",\n\t// eslint-disable-next-line camelcase\n\t__webpack_chunkname__: \"string\"\n};\n\nclass ExtendedAPIPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\t\t\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t(source, chunk, hash) => {\n\t\t\t\t\t\tconst buf = [source];\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_hash__\");\n\t\t\t\t\t\tbuf.push(`${mainTemplate.requireFn}.h = ${JSON.stringify(hash)};`);\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_chunkname__\");\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\t`${mainTemplate.requireFn}.cn = ${JSON.stringify(chunk.name)};`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn Template.asString(buf);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tmainTemplate.hooks.globalHash.tap(\"ExtendedAPIPlugin\", () => true);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tObject.keys(REPLACEMENTS).forEach(key => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.evaluateToString(REPLACEMENT_TYPES[key])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ExtendedAPIPlugin;\n"]},"metadata":{},"sourceType":"script"}