{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\n\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\n\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\n\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nclass RequireResolveDependencyParserPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(parser) {\n    const options = this.options;\n\n    const process = (expr, weak) => {\n      if (expr.arguments.length !== 1) return;\n      const param = parser.evaluateExpression(expr.arguments[0]);\n\n      if (param.isConditional()) {\n        for (const option of param.options) {\n          const result = processItem(expr, option, weak);\n\n          if (result === undefined) {\n            processContext(expr, option, weak);\n          }\n        }\n\n        const dep = new RequireResolveHeaderDependency(expr.callee.range);\n        dep.loc = expr.loc;\n        parser.state.current.addDependency(dep);\n        return true;\n      } else {\n        const result = processItem(expr, param, weak);\n\n        if (result === undefined) {\n          processContext(expr, param, weak);\n        }\n\n        const dep = new RequireResolveHeaderDependency(expr.callee.range);\n        dep.loc = expr.loc;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    };\n\n    const processItem = (expr, param, weak) => {\n      if (param.isString()) {\n        const dep = new RequireResolveDependency(param.string, param.range);\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        dep.weak = weak;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    };\n\n    const processContext = (expr, param, weak) => {\n      const dep = ContextDependencyHelpers.create(RequireResolveContextDependency, param.range, param, expr, options, {\n        mode: weak ? \"weak\" : \"sync\"\n      }, parser);\n      if (!dep) return;\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    };\n\n    parser.hooks.call.for(\"require.resolve\").tap(\"RequireResolveDependencyParserPlugin\", expr => {\n      return process(expr, false);\n    });\n    parser.hooks.call.for(\"require.resolveWeak\").tap(\"RequireResolveDependencyParserPlugin\", expr => {\n      return process(expr, true);\n    });\n  }\n\n}\n\nmodule.exports = RequireResolveDependencyParserPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/dependencies/RequireResolveDependencyParserPlugin.js"],"names":["RequireResolveDependency","require","RequireResolveContextDependency","RequireResolveHeaderDependency","ContextDependencyHelpers","RequireResolveDependencyParserPlugin","constructor","options","apply","parser","process","expr","weak","arguments","length","param","evaluateExpression","isConditional","option","result","processItem","undefined","processContext","dep","callee","range","loc","state","current","addDependency","isString","string","optional","scope","inTry","create","mode","hooks","call","for","tap","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nclass RequireResolveDependencyParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tconst options = this.options;\n\n\t\tconst process = (expr, weak) => {\n\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tif (param.isConditional()) {\n\t\t\t\tfor (const option of param.options) {\n\t\t\t\t\tconst result = processItem(expr, option, weak);\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tprocessContext(expr, option, weak);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst result = processItem(expr, param, weak);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tprocessContext(expr, param, weak);\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processItem = (expr, param, weak) => {\n\t\t\tif (param.isString()) {\n\t\t\t\tconst dep = new RequireResolveDependency(param.string, param.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tdep.weak = weak;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processContext = (expr, param, weak) => {\n\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\tRequireResolveContextDependency,\n\t\t\t\tparam.range,\n\t\t\t\tparam,\n\t\t\t\texpr,\n\t\t\t\toptions,\n\t\t\t\t{\n\t\t\t\t\tmode: weak ? \"weak\" : \"sync\"\n\t\t\t\t},\n\t\t\t\tparser\n\t\t\t);\n\t\t\tif (!dep) return;\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolve\")\n\t\t\t.tap(\"RequireResolveDependencyParserPlugin\", expr => {\n\t\t\t\treturn process(expr, false);\n\t\t\t});\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolveWeak\")\n\t\t\t.tap(\"RequireResolveDependencyParserPlugin\", expr => {\n\t\t\t\treturn process(expr, true);\n\t\t\t});\n\t}\n}\nmodule.exports = RequireResolveDependencyParserPlugin;\n"]},"metadata":{},"sourceType":"script"}