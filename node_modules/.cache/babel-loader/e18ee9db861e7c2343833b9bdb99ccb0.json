{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\n\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\n\nvar Source = require(\"./Source\");\n\nclass LineToLineMappedSource extends Source {\n  constructor(value, name, originalSource) {\n    super();\n    this._value = value;\n    this._name = name;\n    this._originalSource = originalSource;\n  }\n\n  source() {\n    return this._value;\n  }\n\n  node(options) {\n    var value = this._value;\n    var name = this._name;\n    var lines = value.split(\"\\n\");\n    var node = new SourceNode(null, null, null, lines.map(function (line, idx) {\n      return new SourceNode(idx + 1, 0, name, line + (idx != lines.length - 1 ? \"\\n\" : \"\"));\n    }));\n    node.setSourceContent(name, this._originalSource);\n    return node;\n  }\n\n  listMap(options) {\n    return new SourceListMap(this._value, this._name, this._originalSource);\n  }\n\n  updateHash(hash) {\n    hash.update(this._value);\n    hash.update(this._originalSource);\n  }\n\n}\n\nrequire(\"./SourceAndMapMixin\")(LineToLineMappedSource.prototype);\n\nmodule.exports = LineToLineMappedSource;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack-sources/lib/LineToLineMappedSource.js"],"names":["SourceNode","require","SourceMapConsumer","SourceListMap","Source","LineToLineMappedSource","constructor","value","name","originalSource","_value","_name","_originalSource","source","node","options","lines","split","map","line","idx","length","setSourceContent","listMap","updateHash","hash","update","prototype","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,UAAvC;;AACA,IAAIE,iBAAiB,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,iBAA9C;;AACA,IAAIC,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAAP,CAA2BE,aAA/C;;AACA,IAAIC,MAAM,GAAGH,OAAO,CAAC,UAAD,CAApB;;AAEA,MAAMI,sBAAN,SAAqCD,MAArC,CAA4C;AAC3CE,EAAAA,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAcC,cAAd,EAA8B;AACxC;AACA,SAAKC,MAAL,GAAcH,KAAd;AACA,SAAKI,KAAL,GAAaH,IAAb;AACA,SAAKI,eAAL,GAAuBH,cAAvB;AACA;;AAEDI,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKH,MAAZ;AACA;;AAEDI,EAAAA,IAAI,CAACC,OAAD,EAAU;AACb,QAAIR,KAAK,GAAG,KAAKG,MAAjB;AACA,QAAIF,IAAI,GAAG,KAAKG,KAAhB;AACA,QAAIK,KAAK,GAAGT,KAAK,CAACU,KAAN,CAAY,IAAZ,CAAZ;AACA,QAAIH,IAAI,GAAG,IAAId,UAAJ,CAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EACVgB,KAAK,CAACE,GAAN,CAAU,UAASC,IAAT,EAAeC,GAAf,EAAoB;AAC7B,aAAO,IAAIpB,UAAJ,CAAeoB,GAAG,GAAG,CAArB,EAAwB,CAAxB,EAA2BZ,IAA3B,EAAkCW,IAAI,IAAIC,GAAG,IAAIJ,KAAK,CAACK,MAAN,GAAe,CAAtB,GAA0B,IAA1B,GAAiC,EAArC,CAAtC,CAAP;AACA,KAFD,CADU,CAAX;AAKAP,IAAAA,IAAI,CAACQ,gBAAL,CAAsBd,IAAtB,EAA4B,KAAKI,eAAjC;AACA,WAAOE,IAAP;AACA;;AAEDS,EAAAA,OAAO,CAACR,OAAD,EAAU;AAChB,WAAO,IAAIZ,aAAJ,CAAkB,KAAKO,MAAvB,EAA+B,KAAKC,KAApC,EAA2C,KAAKC,eAAhD,CAAP;AACA;;AAEDY,EAAAA,UAAU,CAACC,IAAD,EAAO;AAChBA,IAAAA,IAAI,CAACC,MAAL,CAAY,KAAKhB,MAAjB;AACAe,IAAAA,IAAI,CAACC,MAAL,CAAY,KAAKd,eAAjB;AACA;;AAhC0C;;AAmC5CX,OAAO,CAAC,qBAAD,CAAP,CAA+BI,sBAAsB,CAACsB,SAAtD;;AAEAC,MAAM,CAACC,OAAP,GAAiBxB,sBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar Source = require(\"./Source\");\n\nclass LineToLineMappedSource extends Source {\n\tconstructor(value, name, originalSource) {\n\t\tsuper();\n\t\tthis._value = value;\n\t\tthis._name = name;\n\t\tthis._originalSource = originalSource;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tnode(options) {\n\t\tvar value = this._value;\n\t\tvar name = this._name;\n\t\tvar lines = value.split(\"\\n\");\n\t\tvar node = new SourceNode(null, null, null,\n\t\t\tlines.map(function(line, idx) {\n\t\t\t\treturn new SourceNode(idx + 1, 0, name, (line + (idx != lines.length - 1 ? \"\\n\" : \"\")));\n\t\t\t})\n\t\t);\n\t\tnode.setSourceContent(name, this._originalSource);\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\treturn new SourceListMap(this._value, this._name, this._originalSource)\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t\thash.update(this._originalSource);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(LineToLineMappedSource.prototype);\n\nmodule.exports = LineToLineMappedSource;\n"]},"metadata":{},"sourceType":"script"}