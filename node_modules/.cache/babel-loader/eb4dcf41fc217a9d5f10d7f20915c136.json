{"ast":null,"code":"\"use strict\";\n/**\n * trace-event - A library to create a trace of your node app per\n * Google's Trace Event format:\n * // JSSTYLED\n *      https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar stream_1 = require(\"stream\");\n\nfunction evCommon() {\n  var hrtime = process.hrtime(); // [seconds, nanoseconds]\n\n  var ts = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000); // microseconds\n\n  return {\n    ts: ts,\n    pid: process.pid,\n    tid: process.pid // no meaningful tid for node.js\n\n  };\n}\n\nvar Tracer =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Tracer, _super);\n\n  function Tracer(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.noStream = false;\n    _this.events = [];\n\n    if (typeof opts !== \"object\") {\n      throw new Error(\"Invalid options passed (must be an object)\");\n    }\n\n    if (opts.parent != null && typeof opts.parent !== \"object\") {\n      throw new Error(\"Invalid option (parent) passed (must be an object)\");\n    }\n\n    if (opts.fields != null && typeof opts.fields !== \"object\") {\n      throw new Error(\"Invalid option (fields) passed (must be an object)\");\n    }\n\n    if (opts.objectMode != null && opts.objectMode !== true && opts.objectMode !== false) {\n      throw new Error(\"Invalid option (objectsMode) passed (must be a boolean)\");\n    }\n\n    _this.noStream = opts.noStream || false;\n    _this.parent = opts.parent;\n\n    if (_this.parent) {\n      _this.fields = Object.assign({}, opts.parent && opts.parent.fields);\n    } else {\n      _this.fields = {};\n    }\n\n    if (opts.fields) {\n      Object.assign(_this.fields, opts.fields);\n    }\n\n    if (!_this.fields.cat) {\n      // trace-viewer *requires* `cat`, so let's have a fallback.\n      _this.fields.cat = \"default\";\n    } else if (Array.isArray(_this.fields.cat)) {\n      _this.fields.cat = _this.fields.cat.join(\",\");\n    }\n\n    if (!_this.fields.args) {\n      // trace-viewer *requires* `args`, so let's have a fallback.\n      _this.fields.args = {};\n    }\n\n    if (_this.parent) {\n      // TODO: Not calling Readable ctor here. Does that cause probs?\n      //      Probably if trying to pipe from the child.\n      //      Might want a serpate TracerChild class for these guys.\n      _this._push = _this.parent._push.bind(_this.parent);\n    } else {\n      _this._objectMode = Boolean(opts.objectMode);\n      var streamOpts = {\n        objectMode: _this._objectMode\n      };\n\n      if (_this._objectMode) {\n        _this._push = _this.push;\n      } else {\n        _this._push = _this._pushString;\n        streamOpts.encoding = \"utf8\";\n      }\n\n      stream_1.Readable.call(_this, streamOpts);\n    }\n\n    return _this;\n  }\n  /**\n   * If in no streamMode in order to flush out the trace\n   * you need to call flush.\n   */\n\n\n  Tracer.prototype.flush = function () {\n    if (this.noStream === true) {\n      for (var _i = 0, _a = this.events; _i < _a.length; _i++) {\n        var evt = _a[_i];\n\n        this._push(evt);\n      }\n\n      this._flush();\n    }\n  };\n\n  Tracer.prototype._read = function (_) {};\n\n  Tracer.prototype._pushString = function (ev) {\n    var separator = \"\";\n\n    if (!this.firstPush) {\n      this.push(\"[\");\n      this.firstPush = true;\n    } else {\n      separator = \",\\n\";\n    }\n\n    this.push(separator + JSON.stringify(ev), \"utf8\");\n  };\n\n  Tracer.prototype._flush = function () {\n    if (!this._objectMode) {\n      this.push(\"]\");\n    }\n  };\n\n  Tracer.prototype.child = function (fields) {\n    return new Tracer({\n      parent: this,\n      fields: fields\n    });\n  };\n\n  Tracer.prototype.begin = function (fields) {\n    return this.mkEventFunc(\"b\")(fields);\n  };\n\n  Tracer.prototype.end = function (fields) {\n    return this.mkEventFunc(\"e\")(fields);\n  };\n\n  Tracer.prototype.completeEvent = function (fields) {\n    return this.mkEventFunc(\"X\")(fields);\n  };\n\n  Tracer.prototype.instantEvent = function (fields) {\n    return this.mkEventFunc(\"I\")(fields);\n  };\n\n  Tracer.prototype.mkEventFunc = function (ph) {\n    var _this = this;\n\n    return function (fields) {\n      var ev = evCommon(); // Assign the event phase.\n\n      ev.ph = ph;\n\n      if (fields) {\n        if (typeof fields === \"string\") {\n          ev.name = fields;\n        } else {\n          for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n            var k = _a[_i];\n\n            if (k === \"cat\") {\n              ev.cat = fields.cat.join(\",\");\n            } else {\n              ev[k] = fields[k];\n            }\n          }\n        }\n      }\n\n      if (!_this.noStream) {\n        _this._push(ev);\n      } else {\n        _this.events.push(ev);\n      }\n    };\n  };\n\n  return Tracer;\n}(stream_1.Readable);\n\nexports.Tracer = Tracer;\n/*\n * These correspond to the \"Async events\" in the Trace Events doc.\n *\n * Required fields:\n * - name\n * - id\n *\n * Optional fields:\n * - cat (array)\n * - args (object)\n * - TODO: stack fields, other optional fields?\n *\n * Dev Note: We don't explicitly assert that correct fields are\n * used for speed (premature optimization alert!).\n */","map":{"version":3,"sources":["../lib/trace-event.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * trace-event - A library to create a trace of your node app per\n * Google's Trace Event format:\n * // JSSTYLED\n *      https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar stream_1 = require(\"stream\");\nfunction evCommon() {\n    var hrtime = process.hrtime(); // [seconds, nanoseconds]\n    var ts = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000); // microseconds\n    return {\n        ts: ts,\n        pid: process.pid,\n        tid: process.pid // no meaningful tid for node.js\n    };\n}\nvar Tracer = /** @class */ (function (_super) {\n    tslib_1.__extends(Tracer, _super);\n    function Tracer(opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = _super.call(this) || this;\n        _this.noStream = false;\n        _this.events = [];\n        if (typeof opts !== \"object\") {\n            throw new Error(\"Invalid options passed (must be an object)\");\n        }\n        if (opts.parent != null && typeof opts.parent !== \"object\") {\n            throw new Error(\"Invalid option (parent) passed (must be an object)\");\n        }\n        if (opts.fields != null && typeof opts.fields !== \"object\") {\n            throw new Error(\"Invalid option (fields) passed (must be an object)\");\n        }\n        if (opts.objectMode != null &&\n            (opts.objectMode !== true && opts.objectMode !== false)) {\n            throw new Error(\"Invalid option (objectsMode) passed (must be a boolean)\");\n        }\n        _this.noStream = opts.noStream || false;\n        _this.parent = opts.parent;\n        if (_this.parent) {\n            _this.fields = Object.assign({}, opts.parent && opts.parent.fields);\n        }\n        else {\n            _this.fields = {};\n        }\n        if (opts.fields) {\n            Object.assign(_this.fields, opts.fields);\n        }\n        if (!_this.fields.cat) {\n            // trace-viewer *requires* `cat`, so let's have a fallback.\n            _this.fields.cat = \"default\";\n        }\n        else if (Array.isArray(_this.fields.cat)) {\n            _this.fields.cat = _this.fields.cat.join(\",\");\n        }\n        if (!_this.fields.args) {\n            // trace-viewer *requires* `args`, so let's have a fallback.\n            _this.fields.args = {};\n        }\n        if (_this.parent) {\n            // TODO: Not calling Readable ctor here. Does that cause probs?\n            //      Probably if trying to pipe from the child.\n            //      Might want a serpate TracerChild class for these guys.\n            _this._push = _this.parent._push.bind(_this.parent);\n        }\n        else {\n            _this._objectMode = Boolean(opts.objectMode);\n            var streamOpts = { objectMode: _this._objectMode };\n            if (_this._objectMode) {\n                _this._push = _this.push;\n            }\n            else {\n                _this._push = _this._pushString;\n                streamOpts.encoding = \"utf8\";\n            }\n            stream_1.Readable.call(_this, streamOpts);\n        }\n        return _this;\n    }\n    /**\n     * If in no streamMode in order to flush out the trace\n     * you need to call flush.\n     */\n    Tracer.prototype.flush = function () {\n        if (this.noStream === true) {\n            for (var _i = 0, _a = this.events; _i < _a.length; _i++) {\n                var evt = _a[_i];\n                this._push(evt);\n            }\n            this._flush();\n        }\n    };\n    Tracer.prototype._read = function (_) { };\n    Tracer.prototype._pushString = function (ev) {\n        var separator = \"\";\n        if (!this.firstPush) {\n            this.push(\"[\");\n            this.firstPush = true;\n        }\n        else {\n            separator = \",\\n\";\n        }\n        this.push(separator + JSON.stringify(ev), \"utf8\");\n    };\n    Tracer.prototype._flush = function () {\n        if (!this._objectMode) {\n            this.push(\"]\");\n        }\n    };\n    Tracer.prototype.child = function (fields) {\n        return new Tracer({\n            parent: this,\n            fields: fields\n        });\n    };\n    Tracer.prototype.begin = function (fields) {\n        return this.mkEventFunc(\"b\")(fields);\n    };\n    Tracer.prototype.end = function (fields) {\n        return this.mkEventFunc(\"e\")(fields);\n    };\n    Tracer.prototype.completeEvent = function (fields) {\n        return this.mkEventFunc(\"X\")(fields);\n    };\n    Tracer.prototype.instantEvent = function (fields) {\n        return this.mkEventFunc(\"I\")(fields);\n    };\n    Tracer.prototype.mkEventFunc = function (ph) {\n        var _this = this;\n        return function (fields) {\n            var ev = evCommon();\n            // Assign the event phase.\n            ev.ph = ph;\n            if (fields) {\n                if (typeof fields === \"string\") {\n                    ev.name = fields;\n                }\n                else {\n                    for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n                        var k = _a[_i];\n                        if (k === \"cat\") {\n                            ev.cat = fields.cat.join(\",\");\n                        }\n                        else {\n                            ev[k] = fields[k];\n                        }\n                    }\n                }\n            }\n            if (!_this.noStream) {\n                _this._push(ev);\n            }\n            else {\n                _this.events.push(ev);\n            }\n        };\n    };\n    return Tracer;\n}(stream_1.Readable));\nexports.Tracer = Tracer;\n/*\n * These correspond to the \"Async events\" in the Trace Events doc.\n *\n * Required fields:\n * - name\n * - id\n *\n * Optional fields:\n * - cat (array)\n * - args (object)\n * - TODO: stack fields, other optional fields?\n *\n * Dev Note: We don't explicitly assert that correct fields are\n * used for speed (premature optimization alert!).\n */\n//# sourceMappingURL=trace-event.js.map"]},"metadata":{},"sourceType":"script"}