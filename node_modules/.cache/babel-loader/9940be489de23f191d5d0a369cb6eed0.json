{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NativeModule = require(\"module\");\n\nconst {\n  CachedSource,\n  LineToLineMappedSource,\n  OriginalSource,\n  RawSource,\n  SourceMapSource\n} = require(\"webpack-sources\");\n\nconst {\n  getContext,\n  runLoaders\n} = require(\"loader-runner\");\n\nconst WebpackError = require(\"./WebpackError\");\n\nconst Module = require(\"./Module\");\n\nconst ModuleParseError = require(\"./ModuleParseError\");\n\nconst ModuleBuildError = require(\"./ModuleBuildError\");\n\nconst ModuleError = require(\"./ModuleError\");\n\nconst ModuleWarning = require(\"./ModuleWarning\");\n\nconst createHash = require(\"./util/createHash\");\n\nconst contextify = require(\"./util/identifier\").contextify;\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n\nconst asString = buf => {\n  if (Buffer.isBuffer(buf)) {\n    return buf.toString(\"utf-8\");\n  }\n\n  return buf;\n};\n\nconst asBuffer = str => {\n  if (!Buffer.isBuffer(str)) {\n    return Buffer.from(str, \"utf-8\");\n  }\n\n  return str;\n};\n\nclass NonErrorEmittedError extends WebpackError {\n  constructor(error) {\n    super();\n    this.name = \"NonErrorEmittedError\";\n    this.message = \"(Emitted value instead of an instance of Error) \" + error;\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n}\n/**\n * @typedef {Object} CachedSourceEntry\n * @property {TODO} source the generated source\n * @property {string} hash the hash value\n */\n\n\nclass NormalModule extends Module {\n  constructor({\n    type,\n    request,\n    userRequest,\n    rawRequest,\n    loaders,\n    resource,\n    matchResource,\n    parser,\n    generator,\n    resolveOptions\n  }) {\n    super(type, getContext(resource)); // Info from Factory\n\n    this.request = request;\n    this.userRequest = userRequest;\n    this.rawRequest = rawRequest;\n    this.binary = type.startsWith(\"webassembly\");\n    this.parser = parser;\n    this.generator = generator;\n    this.resource = resource;\n    this.matchResource = matchResource;\n    this.loaders = loaders;\n    if (resolveOptions !== undefined) this.resolveOptions = resolveOptions; // Info from Build\n\n    this.error = null;\n    this._source = null;\n    this._sourceSize = null;\n    this._buildHash = \"\";\n    this.buildTimestamp = undefined;\n    /** @private @type {Map<string, CachedSourceEntry>} */\n\n    this._cachedSources = new Map(); // Options for the NormalModule set by plugins\n    // TODO refactor this -> options object filled from Factory\n\n    this.useSourceMap = false;\n    this.lineToLine = false; // Cache\n\n    this._lastSuccessfulBuildMeta = {};\n  }\n\n  identifier() {\n    return this.request;\n  }\n\n  readableIdentifier(requestShortener) {\n    return requestShortener.shorten(this.userRequest);\n  }\n\n  libIdent(options) {\n    return contextify(options.context, this.userRequest);\n  }\n\n  nameForCondition() {\n    const resource = this.matchResource || this.resource;\n    const idx = resource.indexOf(\"?\");\n    if (idx >= 0) return resource.substr(0, idx);\n    return resource;\n  }\n\n  updateCacheModule(module) {\n    this.type = module.type;\n    this.request = module.request;\n    this.userRequest = module.userRequest;\n    this.rawRequest = module.rawRequest;\n    this.parser = module.parser;\n    this.generator = module.generator;\n    this.resource = module.resource;\n    this.matchResource = module.matchResource;\n    this.loaders = module.loaders;\n    this.resolveOptions = module.resolveOptions;\n  }\n\n  createSourceForAsset(name, content, sourceMap) {\n    if (!sourceMap) {\n      return new RawSource(content);\n    }\n\n    if (typeof sourceMap === \"string\") {\n      return new OriginalSource(content, sourceMap);\n    }\n\n    return new SourceMapSource(content, name, sourceMap);\n  }\n\n  createLoaderContext(resolver, options, compilation, fs) {\n    const requestShortener = compilation.runtimeTemplate.requestShortener;\n\n    const getCurrentLoaderName = () => {\n      const currentLoader = this.getCurrentLoader(loaderContext);\n      if (!currentLoader) return \"(not in loader scope)\";\n      return requestShortener.shorten(currentLoader.loader);\n    };\n\n    const loaderContext = {\n      version: 2,\n      emitWarning: warning => {\n        if (!(warning instanceof Error)) {\n          warning = new NonErrorEmittedError(warning);\n        }\n\n        this.warnings.push(new ModuleWarning(this, warning, {\n          from: getCurrentLoaderName()\n        }));\n      },\n      emitError: error => {\n        if (!(error instanceof Error)) {\n          error = new NonErrorEmittedError(error);\n        }\n\n        this.errors.push(new ModuleError(this, error, {\n          from: getCurrentLoaderName()\n        }));\n      },\n      getLogger: name => {\n        const currentLoader = this.getCurrentLoader(loaderContext);\n        return compilation.getLogger(() => [currentLoader && currentLoader.loader, name, this.identifier()].filter(Boolean).join(\"|\"));\n      },\n      // TODO remove in webpack 5\n      exec: (code, filename) => {\n        // @ts-ignore Argument of type 'this' is not assignable to parameter of type 'Module'.\n        const module = new NativeModule(filename, this); // @ts-ignore _nodeModulePaths is deprecated and undocumented Node.js API\n\n        module.paths = NativeModule._nodeModulePaths(this.context);\n        module.filename = filename;\n\n        module._compile(code, filename);\n\n        return module.exports;\n      },\n\n      resolve(context, request, callback) {\n        resolver.resolve({}, context, request, {}, callback);\n      },\n\n      getResolve(options) {\n        const child = options ? resolver.withOptions(options) : resolver;\n        return (context, request, callback) => {\n          if (callback) {\n            child.resolve({}, context, request, {}, callback);\n          } else {\n            return new Promise((resolve, reject) => {\n              child.resolve({}, context, request, {}, (err, result) => {\n                if (err) reject(err);else resolve(result);\n              });\n            });\n          }\n        };\n      },\n\n      emitFile: (name, content, sourceMap, assetInfo) => {\n        if (!this.buildInfo.assets) {\n          this.buildInfo.assets = Object.create(null);\n          this.buildInfo.assetsInfo = new Map();\n        }\n\n        this.buildInfo.assets[name] = this.createSourceForAsset(name, content, sourceMap);\n        this.buildInfo.assetsInfo.set(name, assetInfo);\n      },\n      rootContext: options.context,\n      webpack: true,\n      sourceMap: !!this.useSourceMap,\n      mode: options.mode || \"production\",\n      _module: this,\n      _compilation: compilation,\n      _compiler: compilation.compiler,\n      fs: fs\n    };\n    compilation.hooks.normalModuleLoader.call(loaderContext, this);\n\n    if (options.loader) {\n      Object.assign(loaderContext, options.loader);\n    }\n\n    return loaderContext;\n  }\n\n  getCurrentLoader(loaderContext, index = loaderContext.loaderIndex) {\n    if (this.loaders && this.loaders.length && index < this.loaders.length && index >= 0 && this.loaders[index]) {\n      return this.loaders[index];\n    }\n\n    return null;\n  }\n\n  createSource(source, resourceBuffer, sourceMap) {\n    // if there is no identifier return raw source\n    if (!this.identifier) {\n      return new RawSource(source);\n    } // from here on we assume we have an identifier\n\n\n    const identifier = this.identifier();\n\n    if (this.lineToLine && resourceBuffer) {\n      return new LineToLineMappedSource(source, identifier, asString(resourceBuffer));\n    }\n\n    if (this.useSourceMap && sourceMap) {\n      return new SourceMapSource(source, identifier, sourceMap);\n    }\n\n    if (Buffer.isBuffer(source)) {\n      // @ts-ignore\n      // TODO We need to fix @types/webpack-sources to allow RawSource to take a Buffer | string\n      return new RawSource(source);\n    }\n\n    return new OriginalSource(source, identifier);\n  }\n\n  doBuild(options, compilation, resolver, fs, callback) {\n    const loaderContext = this.createLoaderContext(resolver, options, compilation, fs);\n    runLoaders({\n      resource: this.resource,\n      loaders: this.loaders,\n      context: loaderContext,\n      readResource: fs.readFile.bind(fs)\n    }, (err, result) => {\n      if (result) {\n        this.buildInfo.cacheable = result.cacheable;\n        this.buildInfo.fileDependencies = new Set(result.fileDependencies);\n        this.buildInfo.contextDependencies = new Set(result.contextDependencies);\n      }\n\n      if (err) {\n        if (!(err instanceof Error)) {\n          err = new NonErrorEmittedError(err);\n        }\n\n        const currentLoader = this.getCurrentLoader(loaderContext);\n        const error = new ModuleBuildError(this, err, {\n          from: currentLoader && compilation.runtimeTemplate.requestShortener.shorten(currentLoader.loader)\n        });\n        return callback(error);\n      }\n\n      const resourceBuffer = result.resourceBuffer;\n      const source = result.result[0];\n      const sourceMap = result.result.length >= 1 ? result.result[1] : null;\n      const extraInfo = result.result.length >= 2 ? result.result[2] : null;\n\n      if (!Buffer.isBuffer(source) && typeof source !== \"string\") {\n        const currentLoader = this.getCurrentLoader(loaderContext, 0);\n        const err = new Error(`Final loader (${currentLoader ? compilation.runtimeTemplate.requestShortener.shorten(currentLoader.loader) : \"unknown\"}) didn't return a Buffer or String`);\n        const error = new ModuleBuildError(this, err);\n        return callback(error);\n      }\n\n      this._source = this.createSource(this.binary ? asBuffer(source) : asString(source), resourceBuffer, sourceMap);\n      this._sourceSize = null;\n      this._ast = typeof extraInfo === \"object\" && extraInfo !== null && extraInfo.webpackAST !== undefined ? extraInfo.webpackAST : null;\n      return callback();\n    });\n  }\n\n  markModuleAsErrored(error) {\n    // Restore build meta from successful build to keep importing state\n    this.buildMeta = Object.assign({}, this._lastSuccessfulBuildMeta);\n    this.error = error;\n    this.errors.push(this.error);\n    this._source = new RawSource(\"throw new Error(\" + JSON.stringify(this.error.message) + \");\");\n    this._sourceSize = null;\n    this._ast = null;\n  }\n\n  applyNoParseRule(rule, content) {\n    // must start with \"rule\" if rule is a string\n    if (typeof rule === \"string\") {\n      return content.indexOf(rule) === 0;\n    }\n\n    if (typeof rule === \"function\") {\n      return rule(content);\n    } // we assume rule is a regexp\n\n\n    return rule.test(content);\n  } // check if module should not be parsed\n  // returns \"true\" if the module should !not! be parsed\n  // returns \"false\" if the module !must! be parsed\n\n\n  shouldPreventParsing(noParseRule, request) {\n    // if no noParseRule exists, return false\n    // the module !must! be parsed.\n    if (!noParseRule) {\n      return false;\n    } // we only have one rule to check\n\n\n    if (!Array.isArray(noParseRule)) {\n      // returns \"true\" if the module is !not! to be parsed\n      return this.applyNoParseRule(noParseRule, request);\n    }\n\n    for (let i = 0; i < noParseRule.length; i++) {\n      const rule = noParseRule[i]; // early exit on first truthy match\n      // this module is !not! to be parsed\n\n      if (this.applyNoParseRule(rule, request)) {\n        return true;\n      }\n    } // no match found, so this module !should! be parsed\n\n\n    return false;\n  }\n\n  _initBuildHash(compilation) {\n    const hash = createHash(compilation.outputOptions.hashFunction);\n\n    if (this._source) {\n      hash.update(\"source\");\n\n      this._source.updateHash(hash);\n    }\n\n    hash.update(\"meta\");\n    hash.update(JSON.stringify(this.buildMeta));\n    this._buildHash =\n    /** @type {string} */\n    hash.digest(\"hex\");\n  }\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildTimestamp = Date.now();\n    this.built = true;\n    this._source = null;\n    this._sourceSize = null;\n    this._ast = null;\n    this._buildHash = \"\";\n    this.error = null;\n    this.errors.length = 0;\n    this.warnings.length = 0;\n    this.buildMeta = {};\n    this.buildInfo = {\n      cacheable: false,\n      fileDependencies: new Set(),\n      contextDependencies: new Set(),\n      assets: undefined,\n      assetsInfo: undefined\n    };\n    return this.doBuild(options, compilation, resolver, fs, err => {\n      this._cachedSources.clear(); // if we have an error mark module as failed and exit\n\n\n      if (err) {\n        this.markModuleAsErrored(err);\n\n        this._initBuildHash(compilation);\n\n        return callback();\n      } // check if this module should !not! be parsed.\n      // if so, exit here;\n\n\n      const noParseRule = options.module && options.module.noParse;\n\n      if (this.shouldPreventParsing(noParseRule, this.request)) {\n        this._initBuildHash(compilation);\n\n        return callback();\n      }\n\n      const handleParseError = e => {\n        const source = this._source.source();\n\n        const loaders = this.loaders.map(item => contextify(options.context, item.loader));\n        const error = new ModuleParseError(this, source, e, loaders);\n        this.markModuleAsErrored(error);\n\n        this._initBuildHash(compilation);\n\n        return callback();\n      };\n\n      const handleParseResult = result => {\n        this._lastSuccessfulBuildMeta = this.buildMeta;\n\n        this._initBuildHash(compilation);\n\n        return callback();\n      };\n\n      try {\n        const result = this.parser.parse(this._ast || this._source.source(), {\n          current: this,\n          module: this,\n          compilation: compilation,\n          options: options\n        }, (err, result) => {\n          if (err) {\n            handleParseError(err);\n          } else {\n            handleParseResult(result);\n          }\n        });\n\n        if (result !== undefined) {\n          // parse is sync\n          handleParseResult(result);\n        }\n      } catch (e) {\n        handleParseError(e);\n      }\n    });\n  }\n\n  getHashDigest(dependencyTemplates) {\n    // TODO webpack 5 refactor\n    let dtHash = dependencyTemplates.get(\"hash\");\n    return `${this.hash}-${dtHash}`;\n  }\n\n  source(dependencyTemplates, runtimeTemplate, type = \"javascript\") {\n    const hashDigest = this.getHashDigest(dependencyTemplates);\n\n    const cacheEntry = this._cachedSources.get(type);\n\n    if (cacheEntry !== undefined && cacheEntry.hash === hashDigest) {\n      // We can reuse the cached source\n      return cacheEntry.source;\n    }\n\n    const source = this.generator.generate(this, dependencyTemplates, runtimeTemplate, type);\n    const cachedSource = new CachedSource(source);\n\n    this._cachedSources.set(type, {\n      source: cachedSource,\n      hash: hashDigest\n    });\n\n    return cachedSource;\n  }\n\n  originalSource() {\n    return this._source;\n  }\n\n  needRebuild(fileTimestamps, contextTimestamps) {\n    // always try to rebuild in case of an error\n    if (this.error) return true; // always rebuild when module is not cacheable\n\n    if (!this.buildInfo.cacheable) return true; // Check timestamps of all dependencies\n    // Missing timestamp -> need rebuild\n    // Timestamp bigger than buildTimestamp -> need rebuild\n\n    for (const file of this.buildInfo.fileDependencies) {\n      const timestamp = fileTimestamps.get(file);\n      if (!timestamp) return true;\n      if (timestamp >= this.buildTimestamp) return true;\n    }\n\n    for (const file of this.buildInfo.contextDependencies) {\n      const timestamp = contextTimestamps.get(file);\n      if (!timestamp) return true;\n      if (timestamp >= this.buildTimestamp) return true;\n    } // elsewise -> no rebuild needed\n\n\n    return false;\n  }\n\n  size() {\n    if (this._sourceSize === null) {\n      this._sourceSize = this._source ? this._source.size() : -1;\n    }\n\n    return this._sourceSize;\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @returns {void}\n   */\n\n\n  updateHash(hash) {\n    hash.update(this._buildHash);\n    super.updateHash(hash);\n  }\n\n}\n\nmodule.exports = NormalModule;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/NormalModule.js"],"names":["NativeModule","require","CachedSource","LineToLineMappedSource","OriginalSource","RawSource","SourceMapSource","getContext","runLoaders","WebpackError","Module","ModuleParseError","ModuleBuildError","ModuleError","ModuleWarning","createHash","contextify","asString","buf","Buffer","isBuffer","toString","asBuffer","str","from","NonErrorEmittedError","constructor","error","name","message","Error","captureStackTrace","NormalModule","type","request","userRequest","rawRequest","loaders","resource","matchResource","parser","generator","resolveOptions","binary","startsWith","undefined","_source","_sourceSize","_buildHash","buildTimestamp","_cachedSources","Map","useSourceMap","lineToLine","_lastSuccessfulBuildMeta","identifier","readableIdentifier","requestShortener","shorten","libIdent","options","context","nameForCondition","idx","indexOf","substr","updateCacheModule","module","createSourceForAsset","content","sourceMap","createLoaderContext","resolver","compilation","fs","runtimeTemplate","getCurrentLoaderName","currentLoader","getCurrentLoader","loaderContext","loader","version","emitWarning","warning","warnings","push","emitError","errors","getLogger","filter","Boolean","join","exec","code","filename","paths","_nodeModulePaths","_compile","exports","resolve","callback","getResolve","child","withOptions","Promise","reject","err","result","emitFile","assetInfo","buildInfo","assets","Object","create","assetsInfo","set","rootContext","webpack","mode","_module","_compilation","_compiler","compiler","hooks","normalModuleLoader","call","assign","index","loaderIndex","length","createSource","source","resourceBuffer","doBuild","readResource","readFile","bind","cacheable","fileDependencies","Set","contextDependencies","extraInfo","_ast","webpackAST","markModuleAsErrored","buildMeta","JSON","stringify","applyNoParseRule","rule","test","shouldPreventParsing","noParseRule","Array","isArray","i","_initBuildHash","hash","outputOptions","hashFunction","update","updateHash","digest","build","Date","now","built","clear","noParse","handleParseError","e","map","item","handleParseResult","parse","current","getHashDigest","dependencyTemplates","dtHash","get","hashDigest","cacheEntry","generate","cachedSource","originalSource","needRebuild","fileTimestamps","contextTimestamps","file","timestamp","size"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NativeModule = require(\"module\");\n\nconst {\n\tCachedSource,\n\tLineToLineMappedSource,\n\tOriginalSource,\n\tRawSource,\n\tSourceMapSource\n} = require(\"webpack-sources\");\nconst { getContext, runLoaders } = require(\"loader-runner\");\n\nconst WebpackError = require(\"./WebpackError\");\nconst Module = require(\"./Module\");\nconst ModuleParseError = require(\"./ModuleParseError\");\nconst ModuleBuildError = require(\"./ModuleBuildError\");\nconst ModuleError = require(\"./ModuleError\");\nconst ModuleWarning = require(\"./ModuleWarning\");\nconst createHash = require(\"./util/createHash\");\nconst contextify = require(\"./util/identifier\").contextify;\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nconst asString = buf => {\n\tif (Buffer.isBuffer(buf)) {\n\t\treturn buf.toString(\"utf-8\");\n\t}\n\treturn buf;\n};\n\nconst asBuffer = str => {\n\tif (!Buffer.isBuffer(str)) {\n\t\treturn Buffer.from(str, \"utf-8\");\n\t}\n\treturn str;\n};\n\nclass NonErrorEmittedError extends WebpackError {\n\tconstructor(error) {\n\t\tsuper();\n\n\t\tthis.name = \"NonErrorEmittedError\";\n\t\tthis.message = \"(Emitted value instead of an instance of Error) \" + error;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\n/**\n * @typedef {Object} CachedSourceEntry\n * @property {TODO} source the generated source\n * @property {string} hash the hash value\n */\n\nclass NormalModule extends Module {\n\tconstructor({\n\t\ttype,\n\t\trequest,\n\t\tuserRequest,\n\t\trawRequest,\n\t\tloaders,\n\t\tresource,\n\t\tmatchResource,\n\t\tparser,\n\t\tgenerator,\n\t\tresolveOptions\n\t}) {\n\t\tsuper(type, getContext(resource));\n\n\t\t// Info from Factory\n\t\tthis.request = request;\n\t\tthis.userRequest = userRequest;\n\t\tthis.rawRequest = rawRequest;\n\t\tthis.binary = type.startsWith(\"webassembly\");\n\t\tthis.parser = parser;\n\t\tthis.generator = generator;\n\t\tthis.resource = resource;\n\t\tthis.matchResource = matchResource;\n\t\tthis.loaders = loaders;\n\t\tif (resolveOptions !== undefined) this.resolveOptions = resolveOptions;\n\n\t\t// Info from Build\n\t\tthis.error = null;\n\t\tthis._source = null;\n\t\tthis._sourceSize = null;\n\t\tthis._buildHash = \"\";\n\t\tthis.buildTimestamp = undefined;\n\t\t/** @private @type {Map<string, CachedSourceEntry>} */\n\t\tthis._cachedSources = new Map();\n\n\t\t// Options for the NormalModule set by plugins\n\t\t// TODO refactor this -> options object filled from Factory\n\t\tthis.useSourceMap = false;\n\t\tthis.lineToLine = false;\n\n\t\t// Cache\n\t\tthis._lastSuccessfulBuildMeta = {};\n\t}\n\n\tidentifier() {\n\t\treturn this.request;\n\t}\n\n\treadableIdentifier(requestShortener) {\n\t\treturn requestShortener.shorten(this.userRequest);\n\t}\n\n\tlibIdent(options) {\n\t\treturn contextify(options.context, this.userRequest);\n\t}\n\n\tnameForCondition() {\n\t\tconst resource = this.matchResource || this.resource;\n\t\tconst idx = resource.indexOf(\"?\");\n\t\tif (idx >= 0) return resource.substr(0, idx);\n\t\treturn resource;\n\t}\n\n\tupdateCacheModule(module) {\n\t\tthis.type = module.type;\n\t\tthis.request = module.request;\n\t\tthis.userRequest = module.userRequest;\n\t\tthis.rawRequest = module.rawRequest;\n\t\tthis.parser = module.parser;\n\t\tthis.generator = module.generator;\n\t\tthis.resource = module.resource;\n\t\tthis.matchResource = module.matchResource;\n\t\tthis.loaders = module.loaders;\n\t\tthis.resolveOptions = module.resolveOptions;\n\t}\n\n\tcreateSourceForAsset(name, content, sourceMap) {\n\t\tif (!sourceMap) {\n\t\t\treturn new RawSource(content);\n\t\t}\n\n\t\tif (typeof sourceMap === \"string\") {\n\t\t\treturn new OriginalSource(content, sourceMap);\n\t\t}\n\n\t\treturn new SourceMapSource(content, name, sourceMap);\n\t}\n\n\tcreateLoaderContext(resolver, options, compilation, fs) {\n\t\tconst requestShortener = compilation.runtimeTemplate.requestShortener;\n\t\tconst getCurrentLoaderName = () => {\n\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\tif (!currentLoader) return \"(not in loader scope)\";\n\t\t\treturn requestShortener.shorten(currentLoader.loader);\n\t\t};\n\t\tconst loaderContext = {\n\t\t\tversion: 2,\n\t\t\temitWarning: warning => {\n\t\t\t\tif (!(warning instanceof Error)) {\n\t\t\t\t\twarning = new NonErrorEmittedError(warning);\n\t\t\t\t}\n\t\t\t\tthis.warnings.push(\n\t\t\t\t\tnew ModuleWarning(this, warning, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\temitError: error => {\n\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\terror = new NonErrorEmittedError(error);\n\t\t\t\t}\n\t\t\t\tthis.errors.push(\n\t\t\t\t\tnew ModuleError(this, error, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\tgetLogger: name => {\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\treturn compilation.getLogger(() =>\n\t\t\t\t\t[currentLoader && currentLoader.loader, name, this.identifier()]\n\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t.join(\"|\")\n\t\t\t\t);\n\t\t\t},\n\t\t\t// TODO remove in webpack 5\n\t\t\texec: (code, filename) => {\n\t\t\t\t// @ts-ignore Argument of type 'this' is not assignable to parameter of type 'Module'.\n\t\t\t\tconst module = new NativeModule(filename, this);\n\t\t\t\t// @ts-ignore _nodeModulePaths is deprecated and undocumented Node.js API\n\t\t\t\tmodule.paths = NativeModule._nodeModulePaths(this.context);\n\t\t\t\tmodule.filename = filename;\n\t\t\t\tmodule._compile(code, filename);\n\t\t\t\treturn module.exports;\n\t\t\t},\n\t\t\tresolve(context, request, callback) {\n\t\t\t\tresolver.resolve({}, context, request, {}, callback);\n\t\t\t},\n\t\t\tgetResolve(options) {\n\t\t\t\tconst child = options ? resolver.withOptions(options) : resolver;\n\t\t\t\treturn (context, request, callback) => {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tchild.resolve({}, context, request, {}, callback);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tchild.resolve({}, context, request, {}, (err, result) => {\n\t\t\t\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\t\t\t\telse resolve(result);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\temitFile: (name, content, sourceMap, assetInfo) => {\n\t\t\t\tif (!this.buildInfo.assets) {\n\t\t\t\t\tthis.buildInfo.assets = Object.create(null);\n\t\t\t\t\tthis.buildInfo.assetsInfo = new Map();\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.assets[name] = this.createSourceForAsset(\n\t\t\t\t\tname,\n\t\t\t\t\tcontent,\n\t\t\t\t\tsourceMap\n\t\t\t\t);\n\t\t\t\tthis.buildInfo.assetsInfo.set(name, assetInfo);\n\t\t\t},\n\t\t\trootContext: options.context,\n\t\t\twebpack: true,\n\t\t\tsourceMap: !!this.useSourceMap,\n\t\t\tmode: options.mode || \"production\",\n\t\t\t_module: this,\n\t\t\t_compilation: compilation,\n\t\t\t_compiler: compilation.compiler,\n\t\t\tfs: fs\n\t\t};\n\n\t\tcompilation.hooks.normalModuleLoader.call(loaderContext, this);\n\t\tif (options.loader) {\n\t\t\tObject.assign(loaderContext, options.loader);\n\t\t}\n\n\t\treturn loaderContext;\n\t}\n\n\tgetCurrentLoader(loaderContext, index = loaderContext.loaderIndex) {\n\t\tif (\n\t\t\tthis.loaders &&\n\t\t\tthis.loaders.length &&\n\t\t\tindex < this.loaders.length &&\n\t\t\tindex >= 0 &&\n\t\t\tthis.loaders[index]\n\t\t) {\n\t\t\treturn this.loaders[index];\n\t\t}\n\t\treturn null;\n\t}\n\n\tcreateSource(source, resourceBuffer, sourceMap) {\n\t\t// if there is no identifier return raw source\n\t\tif (!this.identifier) {\n\t\t\treturn new RawSource(source);\n\t\t}\n\n\t\t// from here on we assume we have an identifier\n\t\tconst identifier = this.identifier();\n\n\t\tif (this.lineToLine && resourceBuffer) {\n\t\t\treturn new LineToLineMappedSource(\n\t\t\t\tsource,\n\t\t\t\tidentifier,\n\t\t\t\tasString(resourceBuffer)\n\t\t\t);\n\t\t}\n\n\t\tif (this.useSourceMap && sourceMap) {\n\t\t\treturn new SourceMapSource(source, identifier, sourceMap);\n\t\t}\n\n\t\tif (Buffer.isBuffer(source)) {\n\t\t\t// @ts-ignore\n\t\t\t// TODO We need to fix @types/webpack-sources to allow RawSource to take a Buffer | string\n\t\t\treturn new RawSource(source);\n\t\t}\n\n\t\treturn new OriginalSource(source, identifier);\n\t}\n\n\tdoBuild(options, compilation, resolver, fs, callback) {\n\t\tconst loaderContext = this.createLoaderContext(\n\t\t\tresolver,\n\t\t\toptions,\n\t\t\tcompilation,\n\t\t\tfs\n\t\t);\n\n\t\trunLoaders(\n\t\t\t{\n\t\t\t\tresource: this.resource,\n\t\t\t\tloaders: this.loaders,\n\t\t\t\tcontext: loaderContext,\n\t\t\t\treadResource: fs.readFile.bind(fs)\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\tthis.buildInfo.cacheable = result.cacheable;\n\t\t\t\t\tthis.buildInfo.fileDependencies = new Set(result.fileDependencies);\n\t\t\t\t\tthis.buildInfo.contextDependencies = new Set(\n\t\t\t\t\t\tresult.contextDependencies\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (err) {\n\t\t\t\t\tif (!(err instanceof Error)) {\n\t\t\t\t\t\terr = new NonErrorEmittedError(err);\n\t\t\t\t\t}\n\t\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\t\tconst error = new ModuleBuildError(this, err, {\n\t\t\t\t\t\tfrom:\n\t\t\t\t\t\t\tcurrentLoader &&\n\t\t\t\t\t\t\tcompilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t\t)\n\t\t\t\t\t});\n\t\t\t\t\treturn callback(error);\n\t\t\t\t}\n\n\t\t\t\tconst resourceBuffer = result.resourceBuffer;\n\t\t\t\tconst source = result.result[0];\n\t\t\t\tconst sourceMap = result.result.length >= 1 ? result.result[1] : null;\n\t\t\t\tconst extraInfo = result.result.length >= 2 ? result.result[2] : null;\n\n\t\t\t\tif (!Buffer.isBuffer(source) && typeof source !== \"string\") {\n\t\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext, 0);\n\t\t\t\t\tconst err = new Error(\n\t\t\t\t\t\t`Final loader (${\n\t\t\t\t\t\t\tcurrentLoader\n\t\t\t\t\t\t\t\t? compilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: \"unknown\"\n\t\t\t\t\t\t}) didn't return a Buffer or String`\n\t\t\t\t\t);\n\t\t\t\t\tconst error = new ModuleBuildError(this, err);\n\t\t\t\t\treturn callback(error);\n\t\t\t\t}\n\n\t\t\t\tthis._source = this.createSource(\n\t\t\t\t\tthis.binary ? asBuffer(source) : asString(source),\n\t\t\t\t\tresourceBuffer,\n\t\t\t\t\tsourceMap\n\t\t\t\t);\n\t\t\t\tthis._sourceSize = null;\n\t\t\t\tthis._ast =\n\t\t\t\t\ttypeof extraInfo === \"object\" &&\n\t\t\t\t\textraInfo !== null &&\n\t\t\t\t\textraInfo.webpackAST !== undefined\n\t\t\t\t\t\t? extraInfo.webpackAST\n\t\t\t\t\t\t: null;\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t);\n\t}\n\n\tmarkModuleAsErrored(error) {\n\t\t// Restore build meta from successful build to keep importing state\n\t\tthis.buildMeta = Object.assign({}, this._lastSuccessfulBuildMeta);\n\t\tthis.error = error;\n\t\tthis.errors.push(this.error);\n\t\tthis._source = new RawSource(\n\t\t\t\"throw new Error(\" + JSON.stringify(this.error.message) + \");\"\n\t\t);\n\t\tthis._sourceSize = null;\n\t\tthis._ast = null;\n\t}\n\n\tapplyNoParseRule(rule, content) {\n\t\t// must start with \"rule\" if rule is a string\n\t\tif (typeof rule === \"string\") {\n\t\t\treturn content.indexOf(rule) === 0;\n\t\t}\n\n\t\tif (typeof rule === \"function\") {\n\t\t\treturn rule(content);\n\t\t}\n\t\t// we assume rule is a regexp\n\t\treturn rule.test(content);\n\t}\n\n\t// check if module should not be parsed\n\t// returns \"true\" if the module should !not! be parsed\n\t// returns \"false\" if the module !must! be parsed\n\tshouldPreventParsing(noParseRule, request) {\n\t\t// if no noParseRule exists, return false\n\t\t// the module !must! be parsed.\n\t\tif (!noParseRule) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// we only have one rule to check\n\t\tif (!Array.isArray(noParseRule)) {\n\t\t\t// returns \"true\" if the module is !not! to be parsed\n\t\t\treturn this.applyNoParseRule(noParseRule, request);\n\t\t}\n\n\t\tfor (let i = 0; i < noParseRule.length; i++) {\n\t\t\tconst rule = noParseRule[i];\n\t\t\t// early exit on first truthy match\n\t\t\t// this module is !not! to be parsed\n\t\t\tif (this.applyNoParseRule(rule, request)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// no match found, so this module !should! be parsed\n\t\treturn false;\n\t}\n\n\t_initBuildHash(compilation) {\n\t\tconst hash = createHash(compilation.outputOptions.hashFunction);\n\t\tif (this._source) {\n\t\t\thash.update(\"source\");\n\t\t\tthis._source.updateHash(hash);\n\t\t}\n\t\thash.update(\"meta\");\n\t\thash.update(JSON.stringify(this.buildMeta));\n\t\tthis._buildHash = /** @type {string} */ (hash.digest(\"hex\"));\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildTimestamp = Date.now();\n\t\tthis.built = true;\n\t\tthis._source = null;\n\t\tthis._sourceSize = null;\n\t\tthis._ast = null;\n\t\tthis._buildHash = \"\";\n\t\tthis.error = null;\n\t\tthis.errors.length = 0;\n\t\tthis.warnings.length = 0;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tcacheable: false,\n\t\t\tfileDependencies: new Set(),\n\t\t\tcontextDependencies: new Set(),\n\t\t\tassets: undefined,\n\t\t\tassetsInfo: undefined\n\t\t};\n\n\t\treturn this.doBuild(options, compilation, resolver, fs, err => {\n\t\t\tthis._cachedSources.clear();\n\n\t\t\t// if we have an error mark module as failed and exit\n\t\t\tif (err) {\n\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\t// check if this module should !not! be parsed.\n\t\t\t// if so, exit here;\n\t\t\tconst noParseRule = options.module && options.module.noParse;\n\t\t\tif (this.shouldPreventParsing(noParseRule, this.request)) {\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tconst handleParseError = e => {\n\t\t\t\tconst source = this._source.source();\n\t\t\t\tconst loaders = this.loaders.map(item =>\n\t\t\t\t\tcontextify(options.context, item.loader)\n\t\t\t\t);\n\t\t\t\tconst error = new ModuleParseError(this, source, e, loaders);\n\t\t\t\tthis.markModuleAsErrored(error);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t};\n\n\t\t\tconst handleParseResult = result => {\n\t\t\t\tthis._lastSuccessfulBuildMeta = this.buildMeta;\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tconst result = this.parser.parse(\n\t\t\t\t\tthis._ast || this._source.source(),\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent: this,\n\t\t\t\t\t\tmodule: this,\n\t\t\t\t\t\tcompilation: compilation,\n\t\t\t\t\t\toptions: options\n\t\t\t\t\t},\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\thandleParseError(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thandleParseResult(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (result !== undefined) {\n\t\t\t\t\t// parse is sync\n\t\t\t\t\thandleParseResult(result);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\thandleParseError(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetHashDigest(dependencyTemplates) {\n\t\t// TODO webpack 5 refactor\n\t\tlet dtHash = dependencyTemplates.get(\"hash\");\n\t\treturn `${this.hash}-${dtHash}`;\n\t}\n\n\tsource(dependencyTemplates, runtimeTemplate, type = \"javascript\") {\n\t\tconst hashDigest = this.getHashDigest(dependencyTemplates);\n\t\tconst cacheEntry = this._cachedSources.get(type);\n\t\tif (cacheEntry !== undefined && cacheEntry.hash === hashDigest) {\n\t\t\t// We can reuse the cached source\n\t\t\treturn cacheEntry.source;\n\t\t}\n\n\t\tconst source = this.generator.generate(\n\t\t\tthis,\n\t\t\tdependencyTemplates,\n\t\t\truntimeTemplate,\n\t\t\ttype\n\t\t);\n\n\t\tconst cachedSource = new CachedSource(source);\n\t\tthis._cachedSources.set(type, {\n\t\t\tsource: cachedSource,\n\t\t\thash: hashDigest\n\t\t});\n\t\treturn cachedSource;\n\t}\n\n\toriginalSource() {\n\t\treturn this._source;\n\t}\n\n\tneedRebuild(fileTimestamps, contextTimestamps) {\n\t\t// always try to rebuild in case of an error\n\t\tif (this.error) return true;\n\n\t\t// always rebuild when module is not cacheable\n\t\tif (!this.buildInfo.cacheable) return true;\n\n\t\t// Check timestamps of all dependencies\n\t\t// Missing timestamp -> need rebuild\n\t\t// Timestamp bigger than buildTimestamp -> need rebuild\n\t\tfor (const file of this.buildInfo.fileDependencies) {\n\t\t\tconst timestamp = fileTimestamps.get(file);\n\t\t\tif (!timestamp) return true;\n\t\t\tif (timestamp >= this.buildTimestamp) return true;\n\t\t}\n\t\tfor (const file of this.buildInfo.contextDependencies) {\n\t\t\tconst timestamp = contextTimestamps.get(file);\n\t\t\tif (!timestamp) return true;\n\t\t\tif (timestamp >= this.buildTimestamp) return true;\n\t\t}\n\t\t// elsewise -> no rebuild needed\n\t\treturn false;\n\t}\n\n\tsize() {\n\t\tif (this._sourceSize === null) {\n\t\t\tthis._sourceSize = this._source ? this._source.size() : -1;\n\t\t}\n\t\treturn this._sourceSize;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(this._buildHash);\n\t\tsuper.updateHash(hash);\n\t}\n}\n\nmodule.exports = NormalModule;\n"]},"metadata":{},"sourceType":"script"}