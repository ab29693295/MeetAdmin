{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SetVarMainTemplatePlugin = require(\"./SetVarMainTemplatePlugin\");\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\n\n\nconst accessorToObjectAccess = accessor => {\n  return accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]|LibraryCustomUmdObject} accessor the accessor\n * @param {\"amd\" | \"commonjs\" | \"root\"} umdProperty property used when a custom umd object is provided\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\n\n\nconst accessorAccess = (base, accessor, umdProperty, joinWith = \"; \") => {\n  const normalizedAccessor = typeof accessor === \"object\" && !Array.isArray(accessor) ? accessor[umdProperty] : accessor;\n  const accessors = Array.isArray(normalizedAccessor) ? normalizedAccessor : [normalizedAccessor];\n  return accessors.map((_, idx) => {\n    const a = base ? base + accessorToObjectAccess(accessors.slice(0, idx + 1)) : accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n    if (idx === accessors.length - 1) return a;\n\n    if (idx === 0 && base === undefined) {\n      return `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n    }\n\n    return `${a} = ${a} || {}`;\n  }).join(joinWith);\n};\n\nclass LibraryTemplatePlugin {\n  /**\n   * @param {string|string[]|LibraryCustomUmdObject} name name of library\n   * @param {string} target type of library\n   * @param {boolean} umdNamedDefine setting this to true will name the UMD module\n   * @param {string|TODO} auxiliaryComment comment in the UMD wrapper\n   * @param {string|string[]} exportProperty which export should be exposed as library\n   */\n  constructor(name, target, umdNamedDefine, auxiliaryComment, exportProperty) {\n    this.name = name;\n    this.target = target;\n    this.umdNamedDefine = umdNamedDefine;\n    this.auxiliaryComment = auxiliaryComment;\n    this.exportProperty = exportProperty;\n  }\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(\"LibraryTemplatePlugin\", compilation => {\n      if (this.exportProperty) {\n        const ExportPropertyMainTemplatePlugin = require(\"./ExportPropertyMainTemplatePlugin\");\n\n        new ExportPropertyMainTemplatePlugin(this.exportProperty).apply(compilation);\n      }\n\n      switch (this.target) {\n        case \"var\":\n          if (!this.name || typeof this.name === \"object\" && !Array.isArray(this.name)) {\n            throw new Error(\"library name must be set and not an UMD custom object for non-UMD target\");\n          }\n\n          new SetVarMainTemplatePlugin(`var ${accessorAccess(undefined, this.name, \"root\")}`, false).apply(compilation);\n          break;\n\n        case \"assign\":\n          new SetVarMainTemplatePlugin(accessorAccess(undefined, this.name, \"root\"), false).apply(compilation);\n          break;\n\n        case \"this\":\n        case \"self\":\n        case \"window\":\n          if (this.name) {\n            new SetVarMainTemplatePlugin(accessorAccess(this.target, this.name, \"root\"), false).apply(compilation);\n          } else {\n            new SetVarMainTemplatePlugin(this.target, true).apply(compilation);\n          }\n\n          break;\n\n        case \"global\":\n          if (this.name) {\n            new SetVarMainTemplatePlugin(accessorAccess(compilation.runtimeTemplate.outputOptions.globalObject, this.name, \"root\"), false).apply(compilation);\n          } else {\n            new SetVarMainTemplatePlugin(compilation.runtimeTemplate.outputOptions.globalObject, true).apply(compilation);\n          }\n\n          break;\n\n        case \"commonjs\":\n          if (this.name) {\n            new SetVarMainTemplatePlugin(accessorAccess(\"exports\", this.name, \"commonjs\"), false).apply(compilation);\n          } else {\n            new SetVarMainTemplatePlugin(\"exports\", true).apply(compilation);\n          }\n\n          break;\n\n        case \"commonjs2\":\n        case \"commonjs-module\":\n          new SetVarMainTemplatePlugin(\"module.exports\", false).apply(compilation);\n          break;\n\n        case \"amd\":\n        case \"amd-require\":\n          {\n            const AmdMainTemplatePlugin = require(\"./AmdMainTemplatePlugin\");\n\n            if (this.name && typeof this.name !== \"string\") {\n              throw new Error(\"library name must be a string for amd target\");\n            }\n\n            new AmdMainTemplatePlugin({\n              name: this.name,\n              requireAsWrapper: this.target === \"amd-require\"\n            }).apply(compilation);\n            break;\n          }\n\n        case \"umd\":\n        case \"umd2\":\n          {\n            const UmdMainTemplatePlugin = require(\"./UmdMainTemplatePlugin\");\n\n            new UmdMainTemplatePlugin(this.name, {\n              optionalAmdExternalAsGlobal: this.target === \"umd2\",\n              namedDefine: this.umdNamedDefine,\n              auxiliaryComment: this.auxiliaryComment\n            }).apply(compilation);\n            break;\n          }\n\n        case \"jsonp\":\n          {\n            const JsonpExportMainTemplatePlugin = require(\"./web/JsonpExportMainTemplatePlugin\");\n\n            if (typeof this.name !== \"string\") throw new Error(\"library name must be a string for jsonp target\");\n            new JsonpExportMainTemplatePlugin(this.name).apply(compilation);\n            break;\n          }\n\n        case \"system\":\n          {\n            const SystemMainTemplatePlugin = require(\"./SystemMainTemplatePlugin\");\n\n            new SystemMainTemplatePlugin({\n              name: this.name\n            }).apply(compilation);\n            break;\n          }\n\n        default:\n          throw new Error(`${this.target} is not a valid Library target`);\n      }\n    });\n  }\n\n}\n\nmodule.exports = LibraryTemplatePlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/LibraryTemplatePlugin.js"],"names":["SetVarMainTemplatePlugin","require","accessorToObjectAccess","accessor","map","a","JSON","stringify","join","accessorAccess","base","umdProperty","joinWith","normalizedAccessor","Array","isArray","accessors","_","idx","slice","length","undefined","LibraryTemplatePlugin","constructor","name","target","umdNamedDefine","auxiliaryComment","exportProperty","apply","compiler","hooks","thisCompilation","tap","compilation","ExportPropertyMainTemplatePlugin","Error","runtimeTemplate","outputOptions","globalObject","AmdMainTemplatePlugin","requireAsWrapper","UmdMainTemplatePlugin","optionalAmdExternalAsGlobal","namedDefine","JsonpExportMainTemplatePlugin","SystemMainTemplatePlugin","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAAD,CAAxC;AAEA;;AACA;;AAEA;;;;;;AAIA,MAAMC,sBAAsB,GAAGC,QAAQ,IAAI;AAC1C,SAAOA,QAAQ,CAACC,GAAT,CAAaC,CAAC,IAAK,IAAGC,IAAI,CAACC,SAAL,CAAeF,CAAf,CAAkB,GAAxC,EAA4CG,IAA5C,CAAiD,EAAjD,CAAP;AACA,CAFD;AAIA;;;;;;;;;AAOA,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOP,QAAP,EAAiBQ,WAAjB,EAA8BC,QAAQ,GAAG,IAAzC,KAAkD;AACxE,QAAMC,kBAAkB,GACvB,OAAOV,QAAP,KAAoB,QAApB,IAAgC,CAACW,KAAK,CAACC,OAAN,CAAcZ,QAAd,CAAjC,GACGA,QAAQ,CAACQ,WAAD,CADX,GAEGR,QAHJ;AAIA,QAAMa,SAAS,GAAGF,KAAK,CAACC,OAAN,CAAcF,kBAAd,IACfA,kBADe,GAEf,CAACA,kBAAD,CAFH;AAGA,SAAOG,SAAS,CACdZ,GADK,CACD,CAACa,CAAD,EAAIC,GAAJ,KAAY;AAChB,UAAMb,CAAC,GAAGK,IAAI,GACXA,IAAI,GAAGR,sBAAsB,CAACc,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAmBD,GAAG,GAAG,CAAzB,CAAD,CADlB,GAEXF,SAAS,CAAC,CAAD,CAAT,GAAed,sBAAsB,CAACc,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAmBD,GAAG,GAAG,CAAzB,CAAD,CAFxC;AAGA,QAAIA,GAAG,KAAKF,SAAS,CAACI,MAAV,GAAmB,CAA/B,EAAkC,OAAOf,CAAP;;AAClC,QAAIa,GAAG,KAAK,CAAR,IAAaR,IAAI,KAAKW,SAA1B,EAAqC;AACpC,aAAQ,GAAEhB,CAAE,aAAYA,CAAE,mBAAkBA,CAAE,OAA9C;AACA;;AACD,WAAQ,GAAEA,CAAE,MAAKA,CAAE,QAAnB;AACA,GAVK,EAWLG,IAXK,CAWAI,QAXA,CAAP;AAYA,CApBD;;AAsBA,MAAMU,qBAAN,CAA4B;AAC3B;;;;;;;AAOAC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,cAAf,EAA+BC,gBAA/B,EAAiDC,cAAjD,EAAiE;AAC3E,SAAKJ,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA;AAED;;;;;;AAIAC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,eAAf,CAA+BC,GAA/B,CAAmC,uBAAnC,EAA4DC,WAAW,IAAI;AAC1E,UAAI,KAAKN,cAAT,EAAyB;AACxB,cAAMO,gCAAgC,GAAGlC,OAAO,CAAC,oCAAD,CAAhD;;AACA,YAAIkC,gCAAJ,CAAqC,KAAKP,cAA1C,EAA0DC,KAA1D,CACCK,WADD;AAGA;;AACD,cAAQ,KAAKT,MAAb;AACC,aAAK,KAAL;AACC,cACC,CAAC,KAAKD,IAAN,IACC,OAAO,KAAKA,IAAZ,KAAqB,QAArB,IAAiC,CAACV,KAAK,CAACC,OAAN,CAAc,KAAKS,IAAnB,CAFpC,EAGE;AACD,kBAAM,IAAIY,KAAJ,CACL,0EADK,CAAN;AAGA;;AACD,cAAIpC,wBAAJ,CACE,OAAMS,cAAc,CAACY,SAAD,EAAY,KAAKG,IAAjB,EAAuB,MAAvB,CAA+B,EADrD,EAEC,KAFD,EAGEK,KAHF,CAGQK,WAHR;AAIA;;AACD,aAAK,QAAL;AACC,cAAIlC,wBAAJ,CACCS,cAAc,CAACY,SAAD,EAAY,KAAKG,IAAjB,EAAuB,MAAvB,CADf,EAEC,KAFD,EAGEK,KAHF,CAGQK,WAHR;AAIA;;AACD,aAAK,MAAL;AACA,aAAK,MAAL;AACA,aAAK,QAAL;AACC,cAAI,KAAKV,IAAT,EAAe;AACd,gBAAIxB,wBAAJ,CACCS,cAAc,CAAC,KAAKgB,MAAN,EAAc,KAAKD,IAAnB,EAAyB,MAAzB,CADf,EAEC,KAFD,EAGEK,KAHF,CAGQK,WAHR;AAIA,WALD,MAKO;AACN,gBAAIlC,wBAAJ,CAA6B,KAAKyB,MAAlC,EAA0C,IAA1C,EAAgDI,KAAhD,CAAsDK,WAAtD;AACA;;AACD;;AACD,aAAK,QAAL;AACC,cAAI,KAAKV,IAAT,EAAe;AACd,gBAAIxB,wBAAJ,CACCS,cAAc,CACbyB,WAAW,CAACG,eAAZ,CAA4BC,aAA5B,CAA0CC,YAD7B,EAEb,KAAKf,IAFQ,EAGb,MAHa,CADf,EAMC,KAND,EAOEK,KAPF,CAOQK,WAPR;AAQA,WATD,MASO;AACN,gBAAIlC,wBAAJ,CACCkC,WAAW,CAACG,eAAZ,CAA4BC,aAA5B,CAA0CC,YAD3C,EAEC,IAFD,EAGEV,KAHF,CAGQK,WAHR;AAIA;;AACD;;AACD,aAAK,UAAL;AACC,cAAI,KAAKV,IAAT,EAAe;AACd,gBAAIxB,wBAAJ,CACCS,cAAc,CAAC,SAAD,EAAY,KAAKe,IAAjB,EAAuB,UAAvB,CADf,EAEC,KAFD,EAGEK,KAHF,CAGQK,WAHR;AAIA,WALD,MAKO;AACN,gBAAIlC,wBAAJ,CAA6B,SAA7B,EAAwC,IAAxC,EAA8C6B,KAA9C,CAAoDK,WAApD;AACA;;AACD;;AACD,aAAK,WAAL;AACA,aAAK,iBAAL;AACC,cAAIlC,wBAAJ,CAA6B,gBAA7B,EAA+C,KAA/C,EAAsD6B,KAAtD,CACCK,WADD;AAGA;;AACD,aAAK,KAAL;AACA,aAAK,aAAL;AAAoB;AACnB,kBAAMM,qBAAqB,GAAGvC,OAAO,CAAC,yBAAD,CAArC;;AACA,gBAAI,KAAKuB,IAAL,IAAa,OAAO,KAAKA,IAAZ,KAAqB,QAAtC,EAAgD;AAC/C,oBAAM,IAAIY,KAAJ,CAAU,8CAAV,CAAN;AACA;;AACD,gBAAII,qBAAJ,CAA0B;AACzBhB,cAAAA,IAAI,EAAE,KAAKA,IADc;AAEzBiB,cAAAA,gBAAgB,EAAE,KAAKhB,MAAL,KAAgB;AAFT,aAA1B,EAGGI,KAHH,CAGSK,WAHT;AAIA;AACA;;AACD,aAAK,KAAL;AACA,aAAK,MAAL;AAAa;AACZ,kBAAMQ,qBAAqB,GAAGzC,OAAO,CAAC,yBAAD,CAArC;;AACA,gBAAIyC,qBAAJ,CAA0B,KAAKlB,IAA/B,EAAqC;AACpCmB,cAAAA,2BAA2B,EAAE,KAAKlB,MAAL,KAAgB,MADT;AAEpCmB,cAAAA,WAAW,EAAE,KAAKlB,cAFkB;AAGpCC,cAAAA,gBAAgB,EAAE,KAAKA;AAHa,aAArC,EAIGE,KAJH,CAISK,WAJT;AAKA;AACA;;AACD,aAAK,OAAL;AAAc;AACb,kBAAMW,6BAA6B,GAAG5C,OAAO,CAAC,qCAAD,CAA7C;;AACA,gBAAI,OAAO,KAAKuB,IAAZ,KAAqB,QAAzB,EACC,MAAM,IAAIY,KAAJ,CAAU,gDAAV,CAAN;AACD,gBAAIS,6BAAJ,CAAkC,KAAKrB,IAAvC,EAA6CK,KAA7C,CAAmDK,WAAnD;AACA;AACA;;AACD,aAAK,QAAL;AAAe;AACd,kBAAMY,wBAAwB,GAAG7C,OAAO,CAAC,4BAAD,CAAxC;;AACA,gBAAI6C,wBAAJ,CAA6B;AAC5BtB,cAAAA,IAAI,EAAE,KAAKA;AADiB,aAA7B,EAEGK,KAFH,CAESK,WAFT;AAGA;AACA;;AACD;AACC,gBAAM,IAAIE,KAAJ,CAAW,GAAE,KAAKX,MAAO,gCAAzB,CAAN;AAvGF;AAyGA,KAhHD;AAiHA;;AAtI0B;;AAyI5BsB,MAAM,CAACC,OAAP,GAAiB1B,qBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SetVarMainTemplatePlugin = require(\"./SetVarMainTemplatePlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]|LibraryCustomUmdObject} accessor the accessor\n * @param {\"amd\" | \"commonjs\" | \"root\"} umdProperty property used when a custom umd object is provided\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, umdProperty, joinWith = \"; \") => {\n\tconst normalizedAccessor =\n\t\ttypeof accessor === \"object\" && !Array.isArray(accessor)\n\t\t\t? accessor[umdProperty]\n\t\t\t: accessor;\n\tconst accessors = Array.isArray(normalizedAccessor)\n\t\t? normalizedAccessor\n\t\t: [normalizedAccessor];\n\treturn accessors\n\t\t.map((_, idx) => {\n\t\t\tconst a = base\n\t\t\t\t? base + accessorToObjectAccess(accessors.slice(0, idx + 1))\n\t\t\t\t: accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n\t\t\tif (idx === accessors.length - 1) return a;\n\t\t\tif (idx === 0 && base === undefined) {\n\t\t\t\treturn `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n\t\t\t}\n\t\t\treturn `${a} = ${a} || {}`;\n\t\t})\n\t\t.join(joinWith);\n};\n\nclass LibraryTemplatePlugin {\n\t/**\n\t * @param {string|string[]|LibraryCustomUmdObject} name name of library\n\t * @param {string} target type of library\n\t * @param {boolean} umdNamedDefine setting this to true will name the UMD module\n\t * @param {string|TODO} auxiliaryComment comment in the UMD wrapper\n\t * @param {string|string[]} exportProperty which export should be exposed as library\n\t */\n\tconstructor(name, target, umdNamedDefine, auxiliaryComment, exportProperty) {\n\t\tthis.name = name;\n\t\tthis.target = target;\n\t\tthis.umdNamedDefine = umdNamedDefine;\n\t\tthis.auxiliaryComment = auxiliaryComment;\n\t\tthis.exportProperty = exportProperty;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\"LibraryTemplatePlugin\", compilation => {\n\t\t\tif (this.exportProperty) {\n\t\t\t\tconst ExportPropertyMainTemplatePlugin = require(\"./ExportPropertyMainTemplatePlugin\");\n\t\t\t\tnew ExportPropertyMainTemplatePlugin(this.exportProperty).apply(\n\t\t\t\t\tcompilation\n\t\t\t\t);\n\t\t\t}\n\t\t\tswitch (this.target) {\n\t\t\t\tcase \"var\":\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.name ||\n\t\t\t\t\t\t(typeof this.name === \"object\" && !Array.isArray(this.name))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"library name must be set and not an UMD custom object for non-UMD target\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t`var ${accessorAccess(undefined, this.name, \"root\")}`,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"assign\":\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\taccessorAccess(undefined, this.name, \"root\"),\n\t\t\t\t\t\tfalse\n\t\t\t\t\t).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"this\":\n\t\t\t\tcase \"self\":\n\t\t\t\tcase \"window\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(this.target, this.name, \"root\"),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(this.target, true).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"global\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(\n\t\t\t\t\t\t\t\tcompilation.runtimeTemplate.outputOptions.globalObject,\n\t\t\t\t\t\t\t\tthis.name,\n\t\t\t\t\t\t\t\t\"root\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\tcompilation.runtimeTemplate.outputOptions.globalObject,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"commonjs\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(\"exports\", this.name, \"commonjs\"),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\"exports\", true).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"commonjs2\":\n\t\t\t\tcase \"commonjs-module\":\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\"module.exports\", false).apply(\n\t\t\t\t\t\tcompilation\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"amd\":\n\t\t\t\tcase \"amd-require\": {\n\t\t\t\t\tconst AmdMainTemplatePlugin = require(\"./AmdMainTemplatePlugin\");\n\t\t\t\t\tif (this.name && typeof this.name !== \"string\") {\n\t\t\t\t\t\tthrow new Error(\"library name must be a string for amd target\");\n\t\t\t\t\t}\n\t\t\t\t\tnew AmdMainTemplatePlugin({\n\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\trequireAsWrapper: this.target === \"amd-require\"\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"umd\":\n\t\t\t\tcase \"umd2\": {\n\t\t\t\t\tconst UmdMainTemplatePlugin = require(\"./UmdMainTemplatePlugin\");\n\t\t\t\t\tnew UmdMainTemplatePlugin(this.name, {\n\t\t\t\t\t\toptionalAmdExternalAsGlobal: this.target === \"umd2\",\n\t\t\t\t\t\tnamedDefine: this.umdNamedDefine,\n\t\t\t\t\t\tauxiliaryComment: this.auxiliaryComment\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"jsonp\": {\n\t\t\t\t\tconst JsonpExportMainTemplatePlugin = require(\"./web/JsonpExportMainTemplatePlugin\");\n\t\t\t\t\tif (typeof this.name !== \"string\")\n\t\t\t\t\t\tthrow new Error(\"library name must be a string for jsonp target\");\n\t\t\t\t\tnew JsonpExportMainTemplatePlugin(this.name).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"system\": {\n\t\t\t\t\tconst SystemMainTemplatePlugin = require(\"./SystemMainTemplatePlugin\");\n\t\t\t\t\tnew SystemMainTemplatePlugin({\n\t\t\t\t\t\tname: this.name\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`${this.target} is not a valid Library target`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = LibraryTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}