{"ast":null,"code":"/* eslint-disable\n  strict,\n  no-param-reassign\n*/\n'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst Ajv = require('ajv');\n\nconst errors = require('ajv-errors');\n\nconst keywords = require('ajv-keywords');\n\nconst ValidationError = require('./ValidationError');\n\nconst ajv = new Ajv({\n  allErrors: true,\n  jsonPointers: true\n});\nerrors(ajv);\nkeywords(ajv, ['instanceof', 'typeof']);\n\nconst validateOptions = (schema, options, name) => {\n  if (typeof schema === 'string') {\n    schema = fs.readFileSync(path.resolve(schema), 'utf8');\n    schema = JSON.parse(schema);\n  }\n\n  if (!ajv.validate(schema, options)) {\n    throw new ValidationError(ajv.errors, name);\n  }\n\n  return true;\n};\n\nmodule.exports = validateOptions;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/node_modules/schema-utils/src/validateOptions.js"],"names":["fs","require","path","Ajv","errors","keywords","ValidationError","ajv","allErrors","jsonPointers","validateOptions","schema","options","name","readFileSync","resolve","JSON","parse","validate","module","exports"],"mappings":"AAAA;;;;AAKA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAME,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,YAAD,CAAtB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,cAAD,CAAxB;;AAEA,MAAMK,eAAe,GAAGL,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAMM,GAAG,GAAG,IAAIJ,GAAJ,CAAQ;AAClBK,EAAAA,SAAS,EAAE,IADO;AAElBC,EAAAA,YAAY,EAAE;AAFI,CAAR,CAAZ;AAKAL,MAAM,CAACG,GAAD,CAAN;AACAF,QAAQ,CAACE,GAAD,EAAM,CAAC,YAAD,EAAe,QAAf,CAAN,CAAR;;AAEA,MAAMG,eAAe,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,IAAlB,KAA2B;AACjD,MAAI,OAAOF,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,IAAAA,MAAM,GAAGX,EAAE,CAACc,YAAH,CAAgBZ,IAAI,CAACa,OAAL,CAAaJ,MAAb,CAAhB,EAAsC,MAAtC,CAAT;AACAA,IAAAA,MAAM,GAAGK,IAAI,CAACC,KAAL,CAAWN,MAAX,CAAT;AACD;;AAED,MAAI,CAACJ,GAAG,CAACW,QAAJ,CAAaP,MAAb,EAAqBC,OAArB,CAAL,EAAoC;AAClC,UAAM,IAAIN,eAAJ,CAAoBC,GAAG,CAACH,MAAxB,EAAgCS,IAAhC,CAAN;AACD;;AAED,SAAO,IAAP;AACD,CAXD;;AAaAM,MAAM,CAACC,OAAP,GAAiBV,eAAjB","sourcesContent":["/* eslint-disable\n  strict,\n  no-param-reassign\n*/\n\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nconst Ajv = require('ajv');\nconst errors = require('ajv-errors');\nconst keywords = require('ajv-keywords');\n\nconst ValidationError = require('./ValidationError');\n\nconst ajv = new Ajv({\n  allErrors: true,\n  jsonPointers: true,\n});\n\nerrors(ajv);\nkeywords(ajv, ['instanceof', 'typeof']);\n\nconst validateOptions = (schema, options, name) => {\n  if (typeof schema === 'string') {\n    schema = fs.readFileSync(path.resolve(schema), 'utf8');\n    schema = JSON.parse(schema);\n  }\n\n  if (!ajv.validate(schema, options)) {\n    throw new ValidationError(ajv.errors, name);\n  }\n\n  return true;\n};\n\nmodule.exports = validateOptions;\n"]},"metadata":{},"sourceType":"script"}