{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncParallelHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onDone\n  }) {\n    return this.callTapsParallel({\n      onError: (i, err, done, doneBreak) => onError(err) + doneBreak(true),\n      onDone\n    });\n  }\n\n}\n\nconst factory = new AsyncParallelHookCodeFactory();\n\nclass AsyncParallelHook extends Hook {\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nObject.defineProperties(AsyncParallelHook.prototype, {\n  _call: {\n    value: undefined,\n    configurable: true,\n    writable: true\n  }\n});\nmodule.exports = AsyncParallelHook;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/tapable/lib/AsyncParallelHook.js"],"names":["Hook","require","HookCodeFactory","AsyncParallelHookCodeFactory","content","onError","onDone","callTapsParallel","i","err","done","doneBreak","factory","AsyncParallelHook","compile","options","setup","create","Object","defineProperties","prototype","_call","value","undefined","configurable","writable","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,4BAAN,SAA2CD,eAA3C,CAA2D;AAC1DE,EAAAA,OAAO,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAsB;AAC5B,WAAO,KAAKC,gBAAL,CAAsB;AAC5BF,MAAAA,OAAO,EAAE,CAACG,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf,KAA6BN,OAAO,CAACI,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CADlC;AAE5BL,MAAAA;AAF4B,KAAtB,CAAP;AAIA;;AANyD;;AAS3D,MAAMM,OAAO,GAAG,IAAIT,4BAAJ,EAAhB;;AAEA,MAAMU,iBAAN,SAAgCb,IAAhC,CAAqC;AACpCc,EAAAA,OAAO,CAACC,OAAD,EAAU;AAChBH,IAAAA,OAAO,CAACI,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,WAAOH,OAAO,CAACK,MAAR,CAAeF,OAAf,CAAP;AACA;;AAJmC;;AAOrCG,MAAM,CAACC,gBAAP,CAAwBN,iBAAiB,CAACO,SAA1C,EAAqD;AACpDC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA,YAAY,EAAE,IAAlC;AAAwCC,IAAAA,QAAQ,EAAE;AAAlD;AAD6C,CAArD;AAIAC,MAAM,CAACC,OAAP,GAAiBd,iBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncParallelHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onDone }) {\n\t\treturn this.callTapsParallel({\n\t\t\tonError: (i, err, done, doneBreak) => onError(err) + doneBreak(true),\n\t\t\tonDone\n\t\t});\n\t}\n}\n\nconst factory = new AsyncParallelHookCodeFactory();\n\nclass AsyncParallelHook extends Hook {\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nObject.defineProperties(AsyncParallelHook.prototype, {\n\t_call: { value: undefined, configurable: true, writable: true }\n});\n\nmodule.exports = AsyncParallelHook;\n"]},"metadata":{},"sourceType":"script"}