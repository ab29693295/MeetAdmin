{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Module = require(\"./Module\");\n\nconst {\n  OriginalSource,\n  RawSource\n} = require(\"webpack-sources\");\n\nmodule.exports = class RawModule extends Module {\n  constructor(source, identifier, readableIdentifier) {\n    super(\"javascript/dynamic\", null);\n    this.sourceStr = source;\n    this.identifierStr = identifier || this.sourceStr;\n    this.readableIdentifierStr = readableIdentifier || this.identifierStr;\n    this.built = false;\n  }\n\n  identifier() {\n    return this.identifierStr;\n  }\n\n  size() {\n    return this.sourceStr.length;\n  }\n\n  readableIdentifier(requestShortener) {\n    return requestShortener.shorten(this.readableIdentifierStr);\n  }\n\n  needRebuild() {\n    return false;\n  }\n\n  build(options, compilations, resolver, fs, callback) {\n    this.built = true;\n    this.buildMeta = {};\n    this.buildInfo = {\n      cacheable: true\n    };\n    callback();\n  }\n\n  source() {\n    if (this.useSourceMap) {\n      return new OriginalSource(this.sourceStr, this.identifier());\n    } else {\n      return new RawSource(this.sourceStr);\n    }\n  }\n\n  updateHash(hash) {\n    hash.update(this.sourceStr);\n    super.updateHash(hash);\n  }\n\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/RawModule.js"],"names":["Module","require","OriginalSource","RawSource","module","exports","RawModule","constructor","source","identifier","readableIdentifier","sourceStr","identifierStr","readableIdentifierStr","built","size","length","requestShortener","shorten","needRebuild","build","options","compilations","resolver","fs","callback","buildMeta","buildInfo","cacheable","useSourceMap","updateHash","hash","update"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,IAAgCF,OAAO,CAAC,iBAAD,CAA7C;;AAEAG,MAAM,CAACC,OAAP,GAAiB,MAAMC,SAAN,SAAwBN,MAAxB,CAA+B;AAC/CO,EAAAA,WAAW,CAACC,MAAD,EAASC,UAAT,EAAqBC,kBAArB,EAAyC;AACnD,UAAM,oBAAN,EAA4B,IAA5B;AACA,SAAKC,SAAL,GAAiBH,MAAjB;AACA,SAAKI,aAAL,GAAqBH,UAAU,IAAI,KAAKE,SAAxC;AACA,SAAKE,qBAAL,GAA6BH,kBAAkB,IAAI,KAAKE,aAAxD;AACA,SAAKE,KAAL,GAAa,KAAb;AACA;;AAEDL,EAAAA,UAAU,GAAG;AACZ,WAAO,KAAKG,aAAZ;AACA;;AAEDG,EAAAA,IAAI,GAAG;AACN,WAAO,KAAKJ,SAAL,CAAeK,MAAtB;AACA;;AAEDN,EAAAA,kBAAkB,CAACO,gBAAD,EAAmB;AACpC,WAAOA,gBAAgB,CAACC,OAAjB,CAAyB,KAAKL,qBAA9B,CAAP;AACA;;AAEDM,EAAAA,WAAW,GAAG;AACb,WAAO,KAAP;AACA;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EAAUC,YAAV,EAAwBC,QAAxB,EAAkCC,EAAlC,EAAsCC,QAAtC,EAAgD;AACpD,SAAKX,KAAL,GAAa,IAAb;AACA,SAAKY,SAAL,GAAiB,EAAjB;AACA,SAAKC,SAAL,GAAiB;AAChBC,MAAAA,SAAS,EAAE;AADK,KAAjB;AAGAH,IAAAA,QAAQ;AACR;;AAEDjB,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKqB,YAAT,EAAuB;AACtB,aAAO,IAAI3B,cAAJ,CAAmB,KAAKS,SAAxB,EAAmC,KAAKF,UAAL,EAAnC,CAAP;AACA,KAFD,MAEO;AACN,aAAO,IAAIN,SAAJ,CAAc,KAAKQ,SAAnB,CAAP;AACA;AACD;;AAEDmB,EAAAA,UAAU,CAACC,IAAD,EAAO;AAChBA,IAAAA,IAAI,CAACC,MAAL,CAAY,KAAKrB,SAAjB;AACA,UAAMmB,UAAN,CAAiBC,IAAjB;AACA;;AA7C8C,CAAhD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Module = require(\"./Module\");\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\n\nmodule.exports = class RawModule extends Module {\n\tconstructor(source, identifier, readableIdentifier) {\n\t\tsuper(\"javascript/dynamic\", null);\n\t\tthis.sourceStr = source;\n\t\tthis.identifierStr = identifier || this.sourceStr;\n\t\tthis.readableIdentifierStr = readableIdentifier || this.identifierStr;\n\t\tthis.built = false;\n\t}\n\n\tidentifier() {\n\t\treturn this.identifierStr;\n\t}\n\n\tsize() {\n\t\treturn this.sourceStr.length;\n\t}\n\n\treadableIdentifier(requestShortener) {\n\t\treturn requestShortener.shorten(this.readableIdentifierStr);\n\t}\n\n\tneedRebuild() {\n\t\treturn false;\n\t}\n\n\tbuild(options, compilations, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tcacheable: true\n\t\t};\n\t\tcallback();\n\t}\n\n\tsource() {\n\t\tif (this.useSourceMap) {\n\t\t\treturn new OriginalSource(this.sourceStr, this.identifier());\n\t\t} else {\n\t\t\treturn new RawSource(this.sourceStr);\n\t\t}\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this.sourceStr);\n\t\tsuper.updateHash(hash);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}