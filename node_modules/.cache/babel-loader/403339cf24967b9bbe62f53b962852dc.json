{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nclass NormalModuleReplacementPlugin {\n  constructor(resourceRegExp, newResource) {\n    this.resourceRegExp = resourceRegExp;\n    this.newResource = newResource;\n  }\n\n  apply(compiler) {\n    const resourceRegExp = this.resourceRegExp;\n    const newResource = this.newResource;\n    compiler.hooks.normalModuleFactory.tap(\"NormalModuleReplacementPlugin\", nmf => {\n      nmf.hooks.beforeResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n        if (!result) return;\n\n        if (resourceRegExp.test(result.request)) {\n          if (typeof newResource === \"function\") {\n            newResource(result);\n          } else {\n            result.request = newResource;\n          }\n        }\n\n        return result;\n      });\n      nmf.hooks.afterResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n        if (!result) return;\n\n        if (resourceRegExp.test(result.resource)) {\n          if (typeof newResource === \"function\") {\n            newResource(result);\n          } else {\n            result.resource = path.resolve(path.dirname(result.resource), newResource);\n          }\n        }\n\n        return result;\n      });\n    });\n  }\n\n}\n\nmodule.exports = NormalModuleReplacementPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/NormalModuleReplacementPlugin.js"],"names":["path","require","NormalModuleReplacementPlugin","constructor","resourceRegExp","newResource","apply","compiler","hooks","normalModuleFactory","tap","nmf","beforeResolve","result","test","request","afterResolve","resource","resolve","dirname","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,6BAAN,CAAoC;AACnCC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,WAAjB,EAA8B;AACxC,SAAKD,cAAL,GAAsBA,cAAtB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,UAAMH,cAAc,GAAG,KAAKA,cAA5B;AACA,UAAMC,WAAW,GAAG,KAAKA,WAAzB;AACAE,IAAAA,QAAQ,CAACC,KAAT,CAAeC,mBAAf,CAAmCC,GAAnC,CACC,+BADD,EAECC,GAAG,IAAI;AACNA,MAAAA,GAAG,CAACH,KAAJ,CAAUI,aAAV,CAAwBF,GAAxB,CAA4B,+BAA5B,EAA6DG,MAAM,IAAI;AACtE,YAAI,CAACA,MAAL,EAAa;;AACb,YAAIT,cAAc,CAACU,IAAf,CAAoBD,MAAM,CAACE,OAA3B,CAAJ,EAAyC;AACxC,cAAI,OAAOV,WAAP,KAAuB,UAA3B,EAAuC;AACtCA,YAAAA,WAAW,CAACQ,MAAD,CAAX;AACA,WAFD,MAEO;AACNA,YAAAA,MAAM,CAACE,OAAP,GAAiBV,WAAjB;AACA;AACD;;AACD,eAAOQ,MAAP;AACA,OAVD;AAWAF,MAAAA,GAAG,CAACH,KAAJ,CAAUQ,YAAV,CAAuBN,GAAvB,CAA2B,+BAA3B,EAA4DG,MAAM,IAAI;AACrE,YAAI,CAACA,MAAL,EAAa;;AACb,YAAIT,cAAc,CAACU,IAAf,CAAoBD,MAAM,CAACI,QAA3B,CAAJ,EAA0C;AACzC,cAAI,OAAOZ,WAAP,KAAuB,UAA3B,EAAuC;AACtCA,YAAAA,WAAW,CAACQ,MAAD,CAAX;AACA,WAFD,MAEO;AACNA,YAAAA,MAAM,CAACI,QAAP,GAAkBjB,IAAI,CAACkB,OAAL,CACjBlB,IAAI,CAACmB,OAAL,CAAaN,MAAM,CAACI,QAApB,CADiB,EAEjBZ,WAFiB,CAAlB;AAIA;AACD;;AACD,eAAOQ,MAAP;AACA,OAbD;AAcA,KA5BF;AA8BA;;AAvCkC;;AA0CpCO,MAAM,CAACC,OAAP,GAAiBnB,6BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nclass NormalModuleReplacementPlugin {\n\tconstructor(resourceRegExp, newResource) {\n\t\tthis.resourceRegExp = resourceRegExp;\n\t\tthis.newResource = newResource;\n\t}\n\n\tapply(compiler) {\n\t\tconst resourceRegExp = this.resourceRegExp;\n\t\tconst newResource = this.newResource;\n\t\tcompiler.hooks.normalModuleFactory.tap(\n\t\t\t\"NormalModuleReplacementPlugin\",\n\t\t\tnmf => {\n\t\t\t\tnmf.hooks.beforeResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n\t\t\t\t\tif (!result) return;\n\t\t\t\t\tif (resourceRegExp.test(result.request)) {\n\t\t\t\t\t\tif (typeof newResource === \"function\") {\n\t\t\t\t\t\t\tnewResource(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.request = newResource;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t\tnmf.hooks.afterResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n\t\t\t\t\tif (!result) return;\n\t\t\t\t\tif (resourceRegExp.test(result.resource)) {\n\t\t\t\t\t\tif (typeof newResource === \"function\") {\n\t\t\t\t\t\t\tnewResource(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.resource = path.resolve(\n\t\t\t\t\t\t\t\tpath.dirname(result.resource),\n\t\t\t\t\t\t\t\tnewResource\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = NormalModuleReplacementPlugin;\n"]},"metadata":{},"sourceType":"script"}