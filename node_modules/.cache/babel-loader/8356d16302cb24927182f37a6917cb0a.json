{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst truncateArgs = require(\"../logging/truncateArgs\");\n\nconst util = require(\"util\");\n\nconst tty = process.stderr.isTTY && process.env.TERM !== \"dumb\";\nlet currentStatusMessage = undefined;\nlet hasStatusMessage = false;\nlet currentIndent = \"\";\nlet currentCollapsed = 0;\n\nconst indent = (str, prefix, colorPrefix, colorSuffix) => {\n  if (str === \"\") return str;\n  prefix = currentIndent + prefix;\n\n  if (tty) {\n    return prefix + colorPrefix + str.replace(/\\n/g, colorSuffix + \"\\n\" + prefix + colorPrefix) + colorSuffix;\n  } else {\n    return prefix + str.replace(/\\n/g, \"\\n\" + prefix);\n  }\n};\n\nconst clearStatusMessage = () => {\n  if (hasStatusMessage) {\n    process.stderr.write(\"\\x1b[2K\\r\");\n    hasStatusMessage = false;\n  }\n};\n\nconst writeStatusMessage = () => {\n  if (!currentStatusMessage) return;\n  const l = process.stderr.columns;\n  const args = l ? truncateArgs(currentStatusMessage, l - 1) : currentStatusMessage;\n  const str = args.join(\" \");\n  const coloredStr = `\\u001b[1m${str}\\u001b[39m\\u001b[22m`;\n  process.stderr.write(`\\x1b[2K\\r${coloredStr}`);\n  hasStatusMessage = true;\n};\n\nconst writeColored = (prefix, colorPrefix, colorSuffix) => {\n  return (...args) => {\n    if (currentCollapsed > 0) return;\n    clearStatusMessage(); // @ts-ignore\n\n    const str = indent(util.format(...args), prefix, colorPrefix, colorSuffix);\n    process.stderr.write(str + \"\\n\");\n    writeStatusMessage();\n  };\n};\n\nconst writeGroupMessage = writeColored(\"<-> \", \"\\u001b[1m\\u001b[36m\", \"\\u001b[39m\\u001b[22m\");\nconst writeGroupCollapsedMessage = writeColored(\"<+> \", \"\\u001b[1m\\u001b[36m\", \"\\u001b[39m\\u001b[22m\");\nmodule.exports = {\n  log: writeColored(\"    \", \"\\u001b[1m\", \"\\u001b[22m\"),\n  debug: writeColored(\"    \", \"\", \"\"),\n  trace: writeColored(\"    \", \"\", \"\"),\n  info: writeColored(\"<i> \", \"\\u001b[1m\\u001b[32m\", \"\\u001b[39m\\u001b[22m\"),\n  warn: writeColored(\"<w> \", \"\\u001b[1m\\u001b[33m\", \"\\u001b[39m\\u001b[22m\"),\n  error: writeColored(\"<e> \", \"\\u001b[1m\\u001b[31m\", \"\\u001b[39m\\u001b[22m\"),\n  logTime: writeColored(\"<t> \", \"\\u001b[1m\\u001b[35m\", \"\\u001b[39m\\u001b[22m\"),\n  group: (...args) => {\n    writeGroupMessage(...args);\n\n    if (currentCollapsed > 0) {\n      currentCollapsed++;\n    } else {\n      currentIndent += \"  \";\n    }\n  },\n  groupCollapsed: (...args) => {\n    writeGroupCollapsedMessage(...args);\n    currentCollapsed++;\n  },\n  groupEnd: () => {\n    if (currentCollapsed > 0) currentCollapsed--;else if (currentIndent.length >= 2) currentIndent = currentIndent.slice(0, currentIndent.length - 2);\n  },\n  // eslint-disable-next-line node/no-unsupported-features/node-builtins\n  profile: console.profile && (name => console.profile(name)),\n  // eslint-disable-next-line node/no-unsupported-features/node-builtins\n  profileEnd: console.profileEnd && (name => console.profileEnd(name)),\n  clear: tty && // eslint-disable-next-line node/no-unsupported-features/node-builtins\n  console.clear && (() => {\n    clearStatusMessage(); // eslint-disable-next-line node/no-unsupported-features/node-builtins\n\n    console.clear();\n    writeStatusMessage();\n  }),\n  status: tty ? (name, ...args) => {\n    args = args.filter(Boolean);\n\n    if (name === undefined && args.length === 0) {\n      clearStatusMessage();\n      currentStatusMessage = undefined;\n    } else if (typeof name === \"string\" && name.startsWith(\"[webpack.Progress] \")) {\n      currentStatusMessage = [name.slice(19), ...args];\n      writeStatusMessage();\n    } else if (name === \"[webpack.Progress]\") {\n      currentStatusMessage = [...args];\n      writeStatusMessage();\n    } else {\n      currentStatusMessage = [name, ...args];\n      writeStatusMessage();\n    }\n  } : writeColored(\"<s> \", \"\", \"\")\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/node/nodeConsole.js"],"names":["truncateArgs","require","util","tty","process","stderr","isTTY","env","TERM","currentStatusMessage","undefined","hasStatusMessage","currentIndent","currentCollapsed","indent","str","prefix","colorPrefix","colorSuffix","replace","clearStatusMessage","write","writeStatusMessage","l","columns","args","join","coloredStr","writeColored","format","writeGroupMessage","writeGroupCollapsedMessage","module","exports","log","debug","trace","info","warn","error","logTime","group","groupCollapsed","groupEnd","length","slice","profile","console","name","profileEnd","clear","status","filter","Boolean","startsWith"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst truncateArgs = require(\"../logging/truncateArgs\");\nconst util = require(\"util\");\n\nconst tty = process.stderr.isTTY && process.env.TERM !== \"dumb\";\n\nlet currentStatusMessage = undefined;\nlet hasStatusMessage = false;\nlet currentIndent = \"\";\nlet currentCollapsed = 0;\n\nconst indent = (str, prefix, colorPrefix, colorSuffix) => {\n\tif (str === \"\") return str;\n\tprefix = currentIndent + prefix;\n\tif (tty) {\n\t\treturn (\n\t\t\tprefix +\n\t\t\tcolorPrefix +\n\t\t\tstr.replace(/\\n/g, colorSuffix + \"\\n\" + prefix + colorPrefix) +\n\t\t\tcolorSuffix\n\t\t);\n\t} else {\n\t\treturn prefix + str.replace(/\\n/g, \"\\n\" + prefix);\n\t}\n};\n\nconst clearStatusMessage = () => {\n\tif (hasStatusMessage) {\n\t\tprocess.stderr.write(\"\\x1b[2K\\r\");\n\t\thasStatusMessage = false;\n\t}\n};\n\nconst writeStatusMessage = () => {\n\tif (!currentStatusMessage) return;\n\tconst l = process.stderr.columns;\n\tconst args = l\n\t\t? truncateArgs(currentStatusMessage, l - 1)\n\t\t: currentStatusMessage;\n\tconst str = args.join(\" \");\n\tconst coloredStr = `\\u001b[1m${str}\\u001b[39m\\u001b[22m`;\n\tprocess.stderr.write(`\\x1b[2K\\r${coloredStr}`);\n\thasStatusMessage = true;\n};\n\nconst writeColored = (prefix, colorPrefix, colorSuffix) => {\n\treturn (...args) => {\n\t\tif (currentCollapsed > 0) return;\n\t\tclearStatusMessage();\n\t\t// @ts-ignore\n\t\tconst str = indent(util.format(...args), prefix, colorPrefix, colorSuffix);\n\t\tprocess.stderr.write(str + \"\\n\");\n\t\twriteStatusMessage();\n\t};\n};\n\nconst writeGroupMessage = writeColored(\n\t\"<-> \",\n\t\"\\u001b[1m\\u001b[36m\",\n\t\"\\u001b[39m\\u001b[22m\"\n);\n\nconst writeGroupCollapsedMessage = writeColored(\n\t\"<+> \",\n\t\"\\u001b[1m\\u001b[36m\",\n\t\"\\u001b[39m\\u001b[22m\"\n);\n\nmodule.exports = {\n\tlog: writeColored(\"    \", \"\\u001b[1m\", \"\\u001b[22m\"),\n\tdebug: writeColored(\"    \", \"\", \"\"),\n\ttrace: writeColored(\"    \", \"\", \"\"),\n\tinfo: writeColored(\"<i> \", \"\\u001b[1m\\u001b[32m\", \"\\u001b[39m\\u001b[22m\"),\n\twarn: writeColored(\"<w> \", \"\\u001b[1m\\u001b[33m\", \"\\u001b[39m\\u001b[22m\"),\n\terror: writeColored(\"<e> \", \"\\u001b[1m\\u001b[31m\", \"\\u001b[39m\\u001b[22m\"),\n\tlogTime: writeColored(\"<t> \", \"\\u001b[1m\\u001b[35m\", \"\\u001b[39m\\u001b[22m\"),\n\tgroup: (...args) => {\n\t\twriteGroupMessage(...args);\n\t\tif (currentCollapsed > 0) {\n\t\t\tcurrentCollapsed++;\n\t\t} else {\n\t\t\tcurrentIndent += \"  \";\n\t\t}\n\t},\n\tgroupCollapsed: (...args) => {\n\t\twriteGroupCollapsedMessage(...args);\n\t\tcurrentCollapsed++;\n\t},\n\tgroupEnd: () => {\n\t\tif (currentCollapsed > 0) currentCollapsed--;\n\t\telse if (currentIndent.length >= 2)\n\t\t\tcurrentIndent = currentIndent.slice(0, currentIndent.length - 2);\n\t},\n\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\tprofile: console.profile && (name => console.profile(name)),\n\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\tprofileEnd: console.profileEnd && (name => console.profileEnd(name)),\n\tclear:\n\t\ttty &&\n\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\tconsole.clear &&\n\t\t(() => {\n\t\t\tclearStatusMessage();\n\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\tconsole.clear();\n\t\t\twriteStatusMessage();\n\t\t}),\n\tstatus: tty\n\t\t? (name, ...args) => {\n\t\t\t\targs = args.filter(Boolean);\n\t\t\t\tif (name === undefined && args.length === 0) {\n\t\t\t\t\tclearStatusMessage();\n\t\t\t\t\tcurrentStatusMessage = undefined;\n\t\t\t\t} else if (\n\t\t\t\t\ttypeof name === \"string\" &&\n\t\t\t\t\tname.startsWith(\"[webpack.Progress] \")\n\t\t\t\t) {\n\t\t\t\t\tcurrentStatusMessage = [name.slice(19), ...args];\n\t\t\t\t\twriteStatusMessage();\n\t\t\t\t} else if (name === \"[webpack.Progress]\") {\n\t\t\t\t\tcurrentStatusMessage = [...args];\n\t\t\t\t\twriteStatusMessage();\n\t\t\t\t} else {\n\t\t\t\t\tcurrentStatusMessage = [name, ...args];\n\t\t\t\t\twriteStatusMessage();\n\t\t\t\t}\n\t\t  }\n\t\t: writeColored(\"<s> \", \"\", \"\")\n};\n"]},"metadata":{},"sourceType":"script"}