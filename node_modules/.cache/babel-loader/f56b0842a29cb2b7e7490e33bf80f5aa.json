{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\n\nconst schema = require(\"../schemas/plugins/IgnorePlugin.json\");\n/** @typedef {import(\"../declarations/plugins/IgnorePlugin\").IgnorePluginOptions} IgnorePluginOptions */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nclass IgnorePlugin {\n  /**\n   * @param {IgnorePluginOptions} options IgnorePlugin options\n   */\n  constructor(options) {\n    // TODO webpack 5 remove this compat-layer\n    if (arguments.length > 1 || options instanceof RegExp) {\n      options = {\n        resourceRegExp: arguments[0],\n        contextRegExp: arguments[1]\n      };\n    }\n\n    validateOptions(schema, options, \"IgnorePlugin\");\n    this.options = options;\n    /** @private @type {Function} */\n\n    this.checkIgnore = this.checkIgnore.bind(this);\n  }\n  /**\n   * Note that if \"contextRegExp\" is given, both the \"resourceRegExp\"\n   * and \"contextRegExp\" have to match.\n   *\n   * @param {TODO} result result\n   * @returns {TODO|null} returns result or null if result should be ignored\n   */\n\n\n  checkIgnore(result) {\n    if (!result) return result;\n\n    if (\"checkResource\" in this.options && this.options.checkResource && this.options.checkResource(result.request, result.context)) {\n      // TODO webpack 5 remove checkContext, as checkResource already gets context\n      if (\"checkContext\" in this.options && this.options.checkContext) {\n        if (this.options.checkContext(result.context)) {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n\n    if (\"resourceRegExp\" in this.options && this.options.resourceRegExp && this.options.resourceRegExp.test(result.request)) {\n      if (\"contextRegExp\" in this.options && this.options.contextRegExp) {\n        // if \"contextRegExp\" is given,\n        // both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n        if (this.options.contextRegExp.test(result.context)) {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * @param {Compiler} compiler Webpack Compiler\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.normalModuleFactory.tap(\"IgnorePlugin\", nmf => {\n      nmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n    });\n    compiler.hooks.contextModuleFactory.tap(\"IgnorePlugin\", cmf => {\n      cmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n    });\n  }\n\n}\n\nmodule.exports = IgnorePlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/IgnorePlugin.js"],"names":["validateOptions","require","schema","IgnorePlugin","constructor","options","arguments","length","RegExp","resourceRegExp","contextRegExp","checkIgnore","bind","result","checkResource","request","context","checkContext","test","apply","compiler","hooks","normalModuleFactory","tap","nmf","beforeResolve","contextModuleFactory","cmf","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,cAAD,CAA/B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,sCAAD,CAAtB;AAEA;;AACA;;;AAEA,MAAME,YAAN,CAAmB;AAClB;;;AAGAC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB;AACA,QAAIC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBF,OAAO,YAAYG,MAA/C,EAAuD;AACtDH,MAAAA,OAAO,GAAG;AACTI,QAAAA,cAAc,EAAEH,SAAS,CAAC,CAAD,CADhB;AAETI,QAAAA,aAAa,EAAEJ,SAAS,CAAC,CAAD;AAFf,OAAV;AAIA;;AAEDN,IAAAA,eAAe,CAACE,MAAD,EAASG,OAAT,EAAkB,cAAlB,CAAf;AACA,SAAKA,OAAL,GAAeA,OAAf;AAEA;;AACA,SAAKM,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA;AAED;;;;;;;;;AAOAD,EAAAA,WAAW,CAACE,MAAD,EAAS;AACnB,QAAI,CAACA,MAAL,EAAa,OAAOA,MAAP;;AAEb,QACC,mBAAmB,KAAKR,OAAxB,IACA,KAAKA,OAAL,CAAaS,aADb,IAEA,KAAKT,OAAL,CAAaS,aAAb,CAA2BD,MAAM,CAACE,OAAlC,EAA2CF,MAAM,CAACG,OAAlD,CAHD,EAIE;AACD;AACA,UAAI,kBAAkB,KAAKX,OAAvB,IAAkC,KAAKA,OAAL,CAAaY,YAAnD,EAAiE;AAChE,YAAI,KAAKZ,OAAL,CAAaY,YAAb,CAA0BJ,MAAM,CAACG,OAAjC,CAAJ,EAA+C;AAC9C,iBAAO,IAAP;AACA;AACD,OAJD,MAIO;AACN,eAAO,IAAP;AACA;AACD;;AAED,QACC,oBAAoB,KAAKX,OAAzB,IACA,KAAKA,OAAL,CAAaI,cADb,IAEA,KAAKJ,OAAL,CAAaI,cAAb,CAA4BS,IAA5B,CAAiCL,MAAM,CAACE,OAAxC,CAHD,EAIE;AACD,UAAI,mBAAmB,KAAKV,OAAxB,IAAmC,KAAKA,OAAL,CAAaK,aAApD,EAAmE;AAClE;AACA;AACA,YAAI,KAAKL,OAAL,CAAaK,aAAb,CAA2BQ,IAA3B,CAAgCL,MAAM,CAACG,OAAvC,CAAJ,EAAqD;AACpD,iBAAO,IAAP;AACA;AACD,OAND,MAMO;AACN,eAAO,IAAP;AACA;AACD;;AAED,WAAOH,MAAP;AACA;AAED;;;;;;AAIAM,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,mBAAf,CAAmCC,GAAnC,CAAuC,cAAvC,EAAuDC,GAAG,IAAI;AAC7DA,MAAAA,GAAG,CAACH,KAAJ,CAAUI,aAAV,CAAwBF,GAAxB,CAA4B,cAA5B,EAA4C,KAAKZ,WAAjD;AACA,KAFD;AAGAS,IAAAA,QAAQ,CAACC,KAAT,CAAeK,oBAAf,CAAoCH,GAApC,CAAwC,cAAxC,EAAwDI,GAAG,IAAI;AAC9DA,MAAAA,GAAG,CAACN,KAAJ,CAAUI,aAAV,CAAwBF,GAAxB,CAA4B,cAA5B,EAA4C,KAAKZ,WAAjD;AACA,KAFD;AAGA;;AA3EiB;;AA8EnBiB,MAAM,CAACC,OAAP,GAAiB1B,YAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/IgnorePlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/IgnorePlugin\").IgnorePluginOptions} IgnorePluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass IgnorePlugin {\n\t/**\n\t * @param {IgnorePluginOptions} options IgnorePlugin options\n\t */\n\tconstructor(options) {\n\t\t// TODO webpack 5 remove this compat-layer\n\t\tif (arguments.length > 1 || options instanceof RegExp) {\n\t\t\toptions = {\n\t\t\t\tresourceRegExp: arguments[0],\n\t\t\t\tcontextRegExp: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvalidateOptions(schema, options, \"IgnorePlugin\");\n\t\tthis.options = options;\n\n\t\t/** @private @type {Function} */\n\t\tthis.checkIgnore = this.checkIgnore.bind(this);\n\t}\n\n\t/**\n\t * Note that if \"contextRegExp\" is given, both the \"resourceRegExp\"\n\t * and \"contextRegExp\" have to match.\n\t *\n\t * @param {TODO} result result\n\t * @returns {TODO|null} returns result or null if result should be ignored\n\t */\n\tcheckIgnore(result) {\n\t\tif (!result) return result;\n\n\t\tif (\n\t\t\t\"checkResource\" in this.options &&\n\t\t\tthis.options.checkResource &&\n\t\t\tthis.options.checkResource(result.request, result.context)\n\t\t) {\n\t\t\t// TODO webpack 5 remove checkContext, as checkResource already gets context\n\t\t\tif (\"checkContext\" in this.options && this.options.checkContext) {\n\t\t\t\tif (this.options.checkContext(result.context)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t\"resourceRegExp\" in this.options &&\n\t\t\tthis.options.resourceRegExp &&\n\t\t\tthis.options.resourceRegExp.test(result.request)\n\t\t) {\n\t\t\tif (\"contextRegExp\" in this.options && this.options.contextRegExp) {\n\t\t\t\t// if \"contextRegExp\" is given,\n\t\t\t\t// both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n\t\t\t\tif (this.options.contextRegExp.test(result.context)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler Webpack Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.normalModuleFactory.tap(\"IgnorePlugin\", nmf => {\n\t\t\tnmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n\t\t});\n\t\tcompiler.hooks.contextModuleFactory.tap(\"IgnorePlugin\", cmf => {\n\t\t\tcmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n\t\t});\n\t}\n}\n\nmodule.exports = IgnorePlugin;\n"]},"metadata":{},"sourceType":"script"}