{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\n\nmodule.exports = class RequireIncludeDependencyParserPlugin {\n  apply(parser) {\n    parser.hooks.call.for(\"require.include\").tap(\"RequireIncludeDependencyParserPlugin\", expr => {\n      if (expr.arguments.length !== 1) return;\n      const param = parser.evaluateExpression(expr.arguments[0]);\n      if (!param.isString()) return;\n      const dep = new RequireIncludeDependency(param.string, expr.range);\n      dep.loc = expr.loc;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n  }\n\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/dependencies/RequireIncludeDependencyParserPlugin.js"],"names":["RequireIncludeDependency","require","module","exports","RequireIncludeDependencyParserPlugin","apply","parser","hooks","call","for","tap","expr","arguments","length","param","evaluateExpression","isString","dep","string","range","loc","state","current","addDependency"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAAD,CAAxC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,oCAAN,CAA2C;AAC3DC,EAAAA,KAAK,CAACC,MAAD,EAAS;AACbA,IAAAA,MAAM,CAACC,KAAP,CAAaC,IAAb,CACEC,GADF,CACM,iBADN,EAEEC,GAFF,CAEM,sCAFN,EAE8CC,IAAI,IAAI;AACpD,UAAIA,IAAI,CAACC,SAAL,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AACjC,YAAMC,KAAK,GAAGR,MAAM,CAACS,kBAAP,CAA0BJ,IAAI,CAACC,SAAL,CAAe,CAAf,CAA1B,CAAd;AACA,UAAI,CAACE,KAAK,CAACE,QAAN,EAAL,EAAuB;AACvB,YAAMC,GAAG,GAAG,IAAIjB,wBAAJ,CAA6Bc,KAAK,CAACI,MAAnC,EAA2CP,IAAI,CAACQ,KAAhD,CAAZ;AACAF,MAAAA,GAAG,CAACG,GAAJ,GAAUT,IAAI,CAACS,GAAf;AACAd,MAAAA,MAAM,CAACe,KAAP,CAAaC,OAAb,CAAqBC,aAArB,CAAmCN,GAAnC;AACA,aAAO,IAAP;AACA,KAVF;AAWA;;AAb0D,CAA5D","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\n\nmodule.exports = class RequireIncludeDependencyParserPlugin {\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require.include\")\n\t\t\t.tap(\"RequireIncludeDependencyParserPlugin\", expr => {\n\t\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\tif (!param.isString()) return;\n\t\t\t\tconst dep = new RequireIncludeDependency(param.string, expr.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}