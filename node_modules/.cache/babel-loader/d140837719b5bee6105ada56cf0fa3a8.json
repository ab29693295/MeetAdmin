{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ImportDependency = require(\"./ImportDependency\");\n\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\n\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\n\nconst ImportContextDependency = require(\"./ImportContextDependency\");\n\nconst ImportParserPlugin = require(\"./ImportParserPlugin\");\n\nclass ImportPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    const options = this.options;\n    compiler.hooks.compilation.tap(\"ImportPlugin\", (compilation, {\n      contextModuleFactory,\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(ImportDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ImportDependency, new ImportDependency.Template());\n      compilation.dependencyFactories.set(ImportEagerDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ImportEagerDependency, new ImportEagerDependency.Template());\n      compilation.dependencyFactories.set(ImportWeakDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ImportWeakDependency, new ImportWeakDependency.Template());\n      compilation.dependencyFactories.set(ImportContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(ImportContextDependency, new ImportContextDependency.Template());\n\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.import !== undefined && !parserOptions.import) return;\n        new ImportParserPlugin(options).apply(parser);\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ImportPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ImportPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ImportPlugin\", handler);\n    });\n  }\n\n}\n\nmodule.exports = ImportPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/dependencies/ImportPlugin.js"],"names":["ImportDependency","require","ImportEagerDependency","ImportWeakDependency","ImportContextDependency","ImportParserPlugin","ImportPlugin","constructor","options","apply","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","import","undefined","for","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;;AACA,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,yBAAD,CAArC;;AACA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,wBAAD,CAApC;;AACA,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,2BAAD,CAAvC;;AACA,MAAMI,kBAAkB,GAAGJ,OAAO,CAAC,sBAAD,CAAlC;;AAEA,MAAMK,YAAN,CAAmB;AAClBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB,SAAKA,OAAL,GAAeA,OAAf;AACA;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,UAAMF,OAAO,GAAG,KAAKA,OAArB;AACAE,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,cADD,EAEC,CAACD,WAAD,EAAc;AAAEE,MAAAA,oBAAF;AAAwBC,MAAAA;AAAxB,KAAd,KAAgE;AAC/DH,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCjB,gBADD,EAECe,mBAFD;AAIAH,MAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCjB,gBADD,EAEC,IAAIA,gBAAgB,CAACmB,QAArB,EAFD;AAKAP,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCf,qBADD,EAECa,mBAFD;AAIAH,MAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCf,qBADD,EAEC,IAAIA,qBAAqB,CAACiB,QAA1B,EAFD;AAKAP,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCd,oBADD,EAECY,mBAFD;AAIAH,MAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCd,oBADD,EAEC,IAAIA,oBAAoB,CAACgB,QAAzB,EAFD;AAKAP,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCb,uBADD,EAECU,oBAFD;AAIAF,MAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCb,uBADD,EAEC,IAAIA,uBAAuB,CAACe,QAA5B,EAFD;;AAKA,YAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,aAAT,KAA2B;AAC1C,YAAIA,aAAa,CAACC,MAAd,KAAyBC,SAAzB,IAAsC,CAACF,aAAa,CAACC,MAAzD,EACC;AAED,YAAIlB,kBAAJ,CAAuBG,OAAvB,EAAgCC,KAAhC,CAAsCY,MAAtC;AACA,OALD;;AAOAN,MAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACM,iBADN,EAEEZ,GAFF,CAEM,cAFN,EAEsBO,OAFtB;AAGAL,MAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACM,oBADN,EAEEZ,GAFF,CAEM,cAFN,EAEsBO,OAFtB;AAGAL,MAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACM,gBADN,EAEEZ,GAFF,CAEM,cAFN,EAEsBO,OAFtB;AAGA,KAvDF;AAyDA;;AAhEiB;;AAkEnBM,MAAM,CAACC,OAAP,GAAiBrB,YAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ImportDependency = require(\"./ImportDependency\");\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\nconst ImportContextDependency = require(\"./ImportContextDependency\");\nconst ImportParserPlugin = require(\"./ImportParserPlugin\");\n\nclass ImportPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ImportPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnew ImportDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnew ImportEagerDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnew ImportWeakDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tnew ImportContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.import !== undefined && !parserOptions.import)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportParserPlugin(options).apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ImportPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ImportPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ImportPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = ImportPlugin;\n"]},"metadata":{},"sourceType":"script"}