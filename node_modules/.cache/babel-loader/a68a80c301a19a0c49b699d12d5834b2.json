{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction getCacheId(request, withContext) {\n  return JSON.stringify({\n    context: withContext ? request.context : \"\",\n    path: request.path,\n    query: request.query,\n    request: request.request\n  });\n}\n\nmodule.exports = class UnsafeCachePlugin {\n  constructor(source, filterPredicate, cache, withContext, target) {\n    this.source = source;\n    this.filterPredicate = filterPredicate;\n    this.withContext = withContext;\n    this.cache = cache || {};\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"UnsafeCachePlugin\", (request, resolveContext, callback) => {\n      if (!this.filterPredicate(request)) return callback();\n      const cacheId = getCacheId(request, this.withContext);\n      const cacheEntry = this.cache[cacheId];\n\n      if (cacheEntry) {\n        return callback(null, cacheEntry);\n      }\n\n      resolver.doResolve(target, request, null, resolveContext, (err, result) => {\n        if (err) return callback(err);\n        if (result) return callback(null, this.cache[cacheId] = result);\n        callback();\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js"],"names":["getCacheId","request","withContext","JSON","stringify","context","path","query","module","exports","UnsafeCachePlugin","constructor","source","filterPredicate","cache","target","apply","resolver","ensureHook","getHook","tapAsync","resolveContext","callback","cacheId","cacheEntry","doResolve","err","result"],"mappings":"AAAA;;;;AAIA;;AAEA,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,WAA7B,EAA0C;AACzC,SAAOC,IAAI,CAACC,SAAL,CAAe;AACrBC,IAAAA,OAAO,EAAEH,WAAW,GAAGD,OAAO,CAACI,OAAX,GAAqB,EADpB;AAErBC,IAAAA,IAAI,EAAEL,OAAO,CAACK,IAFO;AAGrBC,IAAAA,KAAK,EAAEN,OAAO,CAACM,KAHM;AAIrBN,IAAAA,OAAO,EAAEA,OAAO,CAACA;AAJI,GAAf,CAAP;AAMA;;AAEDO,MAAM,CAACC,OAAP,GAAiB,MAAMC,iBAAN,CAAwB;AACxCC,EAAAA,WAAW,CAACC,MAAD,EAASC,eAAT,EAA0BC,KAA1B,EAAiCZ,WAAjC,EAA8Ca,MAA9C,EAAsD;AAChE,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKX,WAAL,GAAmBA,WAAnB;AACA,SAAKY,KAAL,GAAaA,KAAK,IAAI,EAAtB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,UAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;AACAE,IAAAA,QAAQ,CACNE,OADF,CACU,KAAKP,MADf,EAEEQ,QAFF,CAEW,mBAFX,EAEgC,CAACnB,OAAD,EAAUoB,cAAV,EAA0BC,QAA1B,KAAuC;AACrE,UAAI,CAAC,KAAKT,eAAL,CAAqBZ,OAArB,CAAL,EAAoC,OAAOqB,QAAQ,EAAf;AACpC,YAAMC,OAAO,GAAGvB,UAAU,CAACC,OAAD,EAAU,KAAKC,WAAf,CAA1B;AACA,YAAMsB,UAAU,GAAG,KAAKV,KAAL,CAAWS,OAAX,CAAnB;;AACA,UAAIC,UAAJ,EAAgB;AACf,eAAOF,QAAQ,CAAC,IAAD,EAAOE,UAAP,CAAf;AACA;;AACDP,MAAAA,QAAQ,CAACQ,SAAT,CACCV,MADD,EAECd,OAFD,EAGC,IAHD,EAICoB,cAJD,EAKC,CAACK,GAAD,EAAMC,MAAN,KAAiB;AAChB,YAAID,GAAJ,EAAS,OAAOJ,QAAQ,CAACI,GAAD,CAAf;AACT,YAAIC,MAAJ,EAAY,OAAOL,QAAQ,CAAC,IAAD,EAAQ,KAAKR,KAAL,CAAWS,OAAX,IAAsBI,MAA9B,CAAf;AACZL,QAAAA,QAAQ;AACR,OATF;AAWA,KApBF;AAqBA;;AAhCuC,CAAzC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction getCacheId(request, withContext) {\n\treturn JSON.stringify({\n\t\tcontext: withContext ? request.context : \"\",\n\t\tpath: request.path,\n\t\tquery: request.query,\n\t\trequest: request.request\n\t});\n}\n\nmodule.exports = class UnsafeCachePlugin {\n\tconstructor(source, filterPredicate, cache, withContext, target) {\n\t\tthis.source = source;\n\t\tthis.filterPredicate = filterPredicate;\n\t\tthis.withContext = withContext;\n\t\tthis.cache = cache || {};\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"UnsafeCachePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!this.filterPredicate(request)) return callback();\n\t\t\t\tconst cacheId = getCacheId(request, this.withContext);\n\t\t\t\tconst cacheEntry = this.cache[cacheId];\n\t\t\t\tif (cacheEntry) {\n\t\t\t\t\treturn callback(null, cacheEntry);\n\t\t\t\t}\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\trequest,\n\t\t\t\t\tnull,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tif (result) return callback(null, (this.cache[cacheId] = result));\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}