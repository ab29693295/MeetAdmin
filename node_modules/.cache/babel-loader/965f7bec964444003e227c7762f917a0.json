{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  Tapable,\n  SyncWaterfallHook,\n  SyncHook\n} = require(\"tapable\");\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/** @typedef {import(\"./Module\")} Module} */\n\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate} */\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash} */\n\n/**\n * @typedef {Object} RenderManifestOptions\n * @property {Chunk} chunk the chunk used to render\n * @property {string} hash\n * @property {string} fullHash\n * @property {TODO} outputOptions\n * @property {{javascript: ModuleTemplate, webassembly: ModuleTemplate}} moduleTemplates\n * @property {Map<TODO, TODO>} dependencyTemplates\n */\n\n\nmodule.exports = class ChunkTemplate extends Tapable {\n  constructor(outputOptions) {\n    super();\n    this.outputOptions = outputOptions || {};\n    this.hooks = {\n      /** @type {SyncWaterfallHook<TODO[], RenderManifestOptions>} */\n      renderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n      modules: new SyncWaterfallHook([\"source\", \"chunk\", \"moduleTemplate\", \"dependencyTemplates\"]),\n      render: new SyncWaterfallHook([\"source\", \"chunk\", \"moduleTemplate\", \"dependencyTemplates\"]),\n      renderWithEntry: new SyncWaterfallHook([\"source\", \"chunk\"]),\n      hash: new SyncHook([\"hash\"]),\n      hashForChunk: new SyncHook([\"hash\", \"chunk\"])\n    };\n  }\n  /**\n   *\n   * @param {RenderManifestOptions} options render manifest options\n   * @returns {TODO[]} returns render manifest\n   */\n\n\n  getRenderManifest(options) {\n    const result = [];\n    this.hooks.renderManifest.call(result, options);\n    return result;\n  }\n  /**\n   * Updates hash with information from this template\n   * @param {Hash} hash the hash to update\n   * @returns {void}\n   */\n\n\n  updateHash(hash) {\n    hash.update(\"ChunkTemplate\");\n    hash.update(\"2\");\n    this.hooks.hash.call(hash);\n  }\n  /**\n   * TODO webpack 5: remove moduleTemplate and dependencyTemplates\n   * Updates hash with chunk-specific information from this template\n   * @param {Hash} hash the hash to update\n   * @param {Chunk} chunk the chunk\n   * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance for render\n   * @param {Map<Function, DependencyTemplate>} dependencyTemplates dependency templates\n   * @returns {void}\n   */\n\n\n  updateHashForChunk(hash, chunk, moduleTemplate, dependencyTemplates) {\n    this.updateHash(hash);\n    this.hooks.hashForChunk.call(hash, chunk);\n  }\n\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/ChunkTemplate.js"],"names":["Tapable","SyncWaterfallHook","SyncHook","require","module","exports","ChunkTemplate","constructor","outputOptions","hooks","renderManifest","modules","render","renderWithEntry","hash","hashForChunk","getRenderManifest","options","result","call","updateHash","update","updateHashForChunk","chunk","moduleTemplate","dependencyTemplates"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAM;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,iBAAX;AAA8BC,EAAAA;AAA9B,IAA2CC,OAAO,CAAC,SAAD,CAAxD;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;AAUAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,aAAN,SAA4BN,OAA5B,CAAoC;AACpDO,EAAAA,WAAW,CAACC,aAAD,EAAgB;AAC1B;AACA,SAAKA,aAAL,GAAqBA,aAAa,IAAI,EAAtC;AACA,SAAKC,KAAL,GAAa;AACZ;AACAC,MAAAA,cAAc,EAAE,IAAIT,iBAAJ,CAAsB,CAAC,QAAD,EAAW,SAAX,CAAtB,CAFJ;AAGZU,MAAAA,OAAO,EAAE,IAAIV,iBAAJ,CAAsB,CAC9B,QAD8B,EAE9B,OAF8B,EAG9B,gBAH8B,EAI9B,qBAJ8B,CAAtB,CAHG;AASZW,MAAAA,MAAM,EAAE,IAAIX,iBAAJ,CAAsB,CAC7B,QAD6B,EAE7B,OAF6B,EAG7B,gBAH6B,EAI7B,qBAJ6B,CAAtB,CATI;AAeZY,MAAAA,eAAe,EAAE,IAAIZ,iBAAJ,CAAsB,CAAC,QAAD,EAAW,OAAX,CAAtB,CAfL;AAgBZa,MAAAA,IAAI,EAAE,IAAIZ,QAAJ,CAAa,CAAC,MAAD,CAAb,CAhBM;AAiBZa,MAAAA,YAAY,EAAE,IAAIb,QAAJ,CAAa,CAAC,MAAD,EAAS,OAAT,CAAb;AAjBF,KAAb;AAmBA;AAED;;;;;;;AAKAc,EAAAA,iBAAiB,CAACC,OAAD,EAAU;AAC1B,UAAMC,MAAM,GAAG,EAAf;AAEA,SAAKT,KAAL,CAAWC,cAAX,CAA0BS,IAA1B,CAA+BD,MAA/B,EAAuCD,OAAvC;AAEA,WAAOC,MAAP;AACA;AAED;;;;;;;AAKAE,EAAAA,UAAU,CAACN,IAAD,EAAO;AAChBA,IAAAA,IAAI,CAACO,MAAL,CAAY,eAAZ;AACAP,IAAAA,IAAI,CAACO,MAAL,CAAY,GAAZ;AACA,SAAKZ,KAAL,CAAWK,IAAX,CAAgBK,IAAhB,CAAqBL,IAArB;AACA;AAED;;;;;;;;;;;AASAQ,EAAAA,kBAAkB,CAACR,IAAD,EAAOS,KAAP,EAAcC,cAAd,EAA8BC,mBAA9B,EAAmD;AACpE,SAAKL,UAAL,CAAgBN,IAAhB;AACA,SAAKL,KAAL,CAAWM,YAAX,CAAwBI,IAAxB,CAA6BL,IAA7B,EAAmCS,KAAnC;AACA;;AA7DmD,CAArD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { Tapable, SyncWaterfallHook, SyncHook } = require(\"tapable\");\n\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Module\")} Module} */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate} */\n/** @typedef {import(\"./util/createHash\").Hash} Hash} */\n\n/**\n * @typedef {Object} RenderManifestOptions\n * @property {Chunk} chunk the chunk used to render\n * @property {string} hash\n * @property {string} fullHash\n * @property {TODO} outputOptions\n * @property {{javascript: ModuleTemplate, webassembly: ModuleTemplate}} moduleTemplates\n * @property {Map<TODO, TODO>} dependencyTemplates\n */\n\nmodule.exports = class ChunkTemplate extends Tapable {\n\tconstructor(outputOptions) {\n\t\tsuper();\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncWaterfallHook<TODO[], RenderManifestOptions>} */\n\t\t\trenderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n\t\t\tmodules: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\trender: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\trenderWithEntry: new SyncWaterfallHook([\"source\", \"chunk\"]),\n\t\t\thash: new SyncHook([\"hash\"]),\n\t\t\thashForChunk: new SyncHook([\"hash\", \"chunk\"])\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {RenderManifestOptions} options render manifest options\n\t * @returns {TODO[]} returns render manifest\n\t */\n\tgetRenderManifest(options) {\n\t\tconst result = [];\n\n\t\tthis.hooks.renderManifest.call(result, options);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Updates hash with information from this template\n\t * @param {Hash} hash the hash to update\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(\"ChunkTemplate\");\n\t\thash.update(\"2\");\n\t\tthis.hooks.hash.call(hash);\n\t}\n\n\t/**\n\t * TODO webpack 5: remove moduleTemplate and dependencyTemplates\n\t * Updates hash with chunk-specific information from this template\n\t * @param {Hash} hash the hash to update\n\t * @param {Chunk} chunk the chunk\n\t * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance for render\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates dependency templates\n\t * @returns {void}\n\t */\n\tupdateHashForChunk(hash, chunk, moduleTemplate, dependencyTemplates) {\n\t\tthis.updateHash(hash);\n\t\tthis.hooks.hashForChunk.call(hash, chunk);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}