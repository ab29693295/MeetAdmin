{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\n\nconst WasmMainTemplatePlugin = require(\"../wasm/WasmMainTemplatePlugin\");\n\nclass ReadFileCompileWasmTemplatePlugin {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(\"ReadFileCompileWasmTemplatePlugin\", compilation => {\n      const generateLoadBinaryCode = path => Template.asString([\"new Promise(function (resolve, reject) {\", Template.indent([\"var { readFile } = require('fs');\", \"var { join } = require('path');\", \"\", \"try {\", Template.indent([`readFile(join(__dirname, ${path}), function(err, buffer){`, Template.indent([\"if (err) return reject(err);\", \"\", \"// Fake fetch response\", \"resolve({\", Template.indent([\"arrayBuffer() { return Promise.resolve(buffer); }\"]), \"});\"]), \"});\"]), \"} catch (err) { reject(err); }\"]), \"})\"]);\n\n      const plugin = new WasmMainTemplatePlugin(Object.assign({\n        generateLoadBinaryCode,\n        supportsStreaming: false\n      }, this.options));\n      plugin.apply(compilation.mainTemplate);\n    });\n  }\n\n}\n\nmodule.exports = ReadFileCompileWasmTemplatePlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/node/ReadFileCompileWasmTemplatePlugin.js"],"names":["Template","require","WasmMainTemplatePlugin","ReadFileCompileWasmTemplatePlugin","constructor","options","apply","compiler","hooks","thisCompilation","tap","compilation","generateLoadBinaryCode","path","asString","indent","plugin","Object","assign","supportsStreaming","mainTemplate","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,gCAAD,CAAtC;;AAEA,MAAME,iCAAN,CAAwC;AACvCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB,SAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACA;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,eAAf,CAA+BC,GAA/B,CACC,mCADD,EAECC,WAAW,IAAI;AACd,YAAMC,sBAAsB,GAAGC,IAAI,IAClCb,QAAQ,CAACc,QAAT,CAAkB,CACjB,0CADiB,EAEjBd,QAAQ,CAACe,MAAT,CAAgB,CACf,mCADe,EAEf,iCAFe,EAGf,EAHe,EAIf,OAJe,EAKff,QAAQ,CAACe,MAAT,CAAgB,CACd,4BAA2BF,IAAK,2BADlB,EAEfb,QAAQ,CAACe,MAAT,CAAgB,CACf,8BADe,EAEf,EAFe,EAGf,wBAHe,EAIf,WAJe,EAKff,QAAQ,CAACe,MAAT,CAAgB,CACf,mDADe,CAAhB,CALe,EAQf,KARe,CAAhB,CAFe,EAYf,KAZe,CAAhB,CALe,EAmBf,gCAnBe,CAAhB,CAFiB,EAuBjB,IAvBiB,CAAlB,CADD;;AA2BA,YAAMC,MAAM,GAAG,IAAId,sBAAJ,CACde,MAAM,CAACC,MAAP,CACC;AACCN,QAAAA,sBADD;AAECO,QAAAA,iBAAiB,EAAE;AAFpB,OADD,EAKC,KAAKd,OALN,CADc,CAAf;AASAW,MAAAA,MAAM,CAACV,KAAP,CAAaK,WAAW,CAACS,YAAzB;AACA,KAxCF;AA0CA;;AAhDsC;;AAmDxCC,MAAM,CAACC,OAAP,GAAiBnB,iCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst WasmMainTemplatePlugin = require(\"../wasm/WasmMainTemplatePlugin\");\n\nclass ReadFileCompileWasmTemplatePlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"ReadFileCompileWasmTemplatePlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst generateLoadBinaryCode = path =>\n\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\t\"new Promise(function (resolve, reject) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"var { readFile } = require('fs');\",\n\t\t\t\t\t\t\t\"var { join } = require('path');\",\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\"try {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`readFile(join(__dirname, ${path}), function(err, buffer){`,\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if (err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\"// Fake fetch response\",\n\t\t\t\t\t\t\t\t\t\"resolve({\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\"arrayBuffer() { return Promise.resolve(buffer); }\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"} catch (err) { reject(err); }\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"})\"\n\t\t\t\t\t]);\n\n\t\t\t\tconst plugin = new WasmMainTemplatePlugin(\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgenerateLoadBinaryCode,\n\t\t\t\t\t\t\tsupportsStreaming: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.options\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tplugin.apply(compilation.mainTemplate);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ReadFileCompileWasmTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}