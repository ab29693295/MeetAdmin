{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncLoopHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onDone,\n    rethrowIfPossible\n  }) {\n    return this.callTapsLooping({\n      onError: (i, err) => onError(err),\n      onDone,\n      rethrowIfPossible\n    });\n  }\n\n}\n\nconst factory = new SyncLoopHookCodeFactory();\n\nclass SyncLoopHook extends Hook {\n  tapAsync() {\n    throw new Error(\"tapAsync is not supported on a SyncLoopHook\");\n  }\n\n  tapPromise() {\n    throw new Error(\"tapPromise is not supported on a SyncLoopHook\");\n  }\n\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nmodule.exports = SyncLoopHook;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/tapable/lib/SyncLoopHook.js"],"names":["Hook","require","HookCodeFactory","SyncLoopHookCodeFactory","content","onError","onDone","rethrowIfPossible","callTapsLooping","i","err","factory","SyncLoopHook","tapAsync","Error","tapPromise","compile","options","setup","create","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,uBAAN,SAAsCD,eAAtC,CAAsD;AACrDE,EAAAA,OAAO,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,GAAD,EAAyC;AAC/C,WAAO,KAAKC,eAAL,CAAqB;AAC3BH,MAAAA,OAAO,EAAE,CAACI,CAAD,EAAIC,GAAJ,KAAYL,OAAO,CAACK,GAAD,CADD;AAE3BJ,MAAAA,MAF2B;AAG3BC,MAAAA;AAH2B,KAArB,CAAP;AAKA;;AAPoD;;AAUtD,MAAMI,OAAO,GAAG,IAAIR,uBAAJ,EAAhB;;AAEA,MAAMS,YAAN,SAA2BZ,IAA3B,CAAgC;AAC/Ba,EAAAA,QAAQ,GAAG;AACV,UAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACA;;AAEDC,EAAAA,UAAU,GAAG;AACZ,UAAM,IAAID,KAAJ,CAAU,+CAAV,CAAN;AACA;;AAEDE,EAAAA,OAAO,CAACC,OAAD,EAAU;AAChBN,IAAAA,OAAO,CAACO,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,WAAON,OAAO,CAACQ,MAAR,CAAeF,OAAf,CAAP;AACA;;AAZ8B;;AAehCG,MAAM,CAACC,OAAP,GAAiBT,YAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncLoopHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onDone, rethrowIfPossible }) {\n\t\treturn this.callTapsLooping({\n\t\t\tonError: (i, err) => onError(err),\n\t\t\tonDone,\n\t\t\trethrowIfPossible\n\t\t});\n\t}\n}\n\nconst factory = new SyncLoopHookCodeFactory();\n\nclass SyncLoopHook extends Hook {\n\ttapAsync() {\n\t\tthrow new Error(\"tapAsync is not supported on a SyncLoopHook\");\n\t}\n\n\ttapPromise() {\n\t\tthrow new Error(\"tapPromise is not supported on a SyncLoopHook\");\n\t}\n\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nmodule.exports = SyncLoopHook;\n"]},"metadata":{},"sourceType":"script"}