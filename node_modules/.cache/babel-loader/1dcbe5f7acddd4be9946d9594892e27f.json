{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\n\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\n\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\n\nconst AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\n\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\n\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\n\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\n\nconst ConstDependency = require(\"./ConstDependency\");\n\nconst getFunctionExpression = require(\"./getFunctionExpression\");\n\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nclass AMDRequireDependenciesBlockParserPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  processFunctionArgument(parser, expression) {\n    let bindThis = true;\n    const fnData = getFunctionExpression(expression);\n\n    if (fnData) {\n      parser.inScope(fnData.fn.params.filter(i => {\n        return ![\"require\", \"module\", \"exports\"].includes(i.name);\n      }), () => {\n        if (fnData.fn.body.type === \"BlockStatement\") {\n          parser.walkStatement(fnData.fn.body);\n        } else {\n          parser.walkExpression(fnData.fn.body);\n        }\n      });\n      parser.walkExpressions(fnData.expressions);\n\n      if (fnData.needThis === false) {\n        bindThis = false;\n      }\n    } else {\n      parser.walkExpression(expression);\n    }\n\n    return bindThis;\n  }\n\n  apply(parser) {\n    parser.hooks.call.for(\"require\").tap(\"AMDRequireDependenciesBlockParserPlugin\", this.processCallRequire.bind(this, parser));\n  }\n\n  processArray(parser, expr, param) {\n    if (param.isArray()) {\n      for (const p of param.items) {\n        const result = this.processItem(parser, expr, p);\n\n        if (result === undefined) {\n          this.processContext(parser, expr, p);\n        }\n      }\n\n      return true;\n    } else if (param.isConstArray()) {\n      const deps = [];\n\n      for (const request of param.array) {\n        let dep, localModule;\n\n        if (request === \"require\") {\n          dep = \"__webpack_require__\";\n        } else if ([\"exports\", \"module\"].includes(request)) {\n          dep = request;\n        } else if (localModule = LocalModulesHelpers.getLocalModule(parser.state, request)) {\n          dep = new LocalModuleDependency(localModule, undefined, false);\n          dep.loc = expr.loc;\n          parser.state.current.addDependency(dep);\n        } else {\n          dep = this.newRequireItemDependency(request);\n          dep.loc = expr.loc;\n          dep.optional = !!parser.scope.inTry;\n          parser.state.current.addDependency(dep);\n        }\n\n        deps.push(dep);\n      }\n\n      const dep = this.newRequireArrayDependency(deps, param.range);\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    }\n  }\n\n  processItem(parser, expr, param) {\n    if (param.isConditional()) {\n      for (const p of param.options) {\n        const result = this.processItem(parser, expr, p);\n\n        if (result === undefined) {\n          this.processContext(parser, expr, p);\n        }\n      }\n\n      return true;\n    } else if (param.isString()) {\n      let dep, localModule;\n\n      if (param.string === \"require\") {\n        dep = new ConstDependency(\"__webpack_require__\", param.string);\n      } else if (param.string === \"module\") {\n        dep = new ConstDependency(parser.state.module.buildInfo.moduleArgument, param.range);\n      } else if (param.string === \"exports\") {\n        dep = new ConstDependency(parser.state.module.buildInfo.exportsArgument, param.range);\n      } else if (localModule = LocalModulesHelpers.getLocalModule(parser.state, param.string)) {\n        dep = new LocalModuleDependency(localModule, param.range, false);\n      } else {\n        dep = this.newRequireItemDependency(param.string, param.range);\n      }\n\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    }\n  }\n\n  processContext(parser, expr, param) {\n    const dep = ContextDependencyHelpers.create(AMDRequireContextDependency, param.range, param, expr, this.options, {}, parser);\n    if (!dep) return;\n    dep.loc = expr.loc;\n    dep.optional = !!parser.scope.inTry;\n    parser.state.current.addDependency(dep);\n    return true;\n  }\n\n  processArrayForRequestString(param) {\n    if (param.isArray()) {\n      const result = param.items.map(item => this.processItemForRequestString(item));\n      if (result.every(Boolean)) return result.join(\" \");\n    } else if (param.isConstArray()) {\n      return param.array.join(\" \");\n    }\n  }\n\n  processItemForRequestString(param) {\n    if (param.isConditional()) {\n      const result = param.options.map(item => this.processItemForRequestString(item));\n      if (result.every(Boolean)) return result.join(\"|\");\n    } else if (param.isString()) {\n      return param.string;\n    }\n  }\n\n  processCallRequire(parser, expr) {\n    let param;\n    let dep;\n    let result;\n    const old = parser.state.current;\n\n    if (expr.arguments.length >= 1) {\n      param = parser.evaluateExpression(expr.arguments[0]);\n      dep = this.newRequireDependenciesBlock(expr, param.range, expr.arguments.length > 1 ? expr.arguments[1].range : null, expr.arguments.length > 2 ? expr.arguments[2].range : null, parser.state.module, expr.loc, this.processArrayForRequestString(param));\n      parser.state.current = dep;\n    }\n\n    if (expr.arguments.length === 1) {\n      parser.inScope([], () => {\n        result = this.processArray(parser, expr, param);\n      });\n      parser.state.current = old;\n      if (!result) return;\n      parser.state.current.addBlock(dep);\n      return true;\n    }\n\n    if (expr.arguments.length === 2 || expr.arguments.length === 3) {\n      try {\n        parser.inScope([], () => {\n          result = this.processArray(parser, expr, param);\n        });\n\n        if (!result) {\n          dep = new UnsupportedDependency(\"unsupported\", expr.range);\n          old.addDependency(dep);\n\n          if (parser.state.module) {\n            parser.state.module.errors.push(new UnsupportedFeatureWarning(parser.state.module, \"Cannot statically analyse 'require(…, …)' in line \" + expr.loc.start.line, expr.loc));\n          }\n\n          dep = null;\n          return true;\n        }\n\n        dep.functionBindThis = this.processFunctionArgument(parser, expr.arguments[1]);\n\n        if (expr.arguments.length === 3) {\n          dep.errorCallbackBindThis = this.processFunctionArgument(parser, expr.arguments[2]);\n        }\n      } finally {\n        parser.state.current = old;\n        if (dep) parser.state.current.addBlock(dep);\n      }\n\n      return true;\n    }\n  }\n\n  newRequireDependenciesBlock(expr, arrayRange, functionRange, errorCallbackRange, module, loc, request) {\n    return new AMDRequireDependenciesBlock(expr, arrayRange, functionRange, errorCallbackRange, module, loc, request);\n  }\n\n  newRequireItemDependency(request, range) {\n    return new AMDRequireItemDependency(request, range);\n  }\n\n  newRequireArrayDependency(depsArray, range) {\n    return new AMDRequireArrayDependency(depsArray, range);\n  }\n\n}\n\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/dependencies/AMDRequireDependenciesBlockParserPlugin.js"],"names":["AMDRequireItemDependency","require","AMDRequireArrayDependency","AMDRequireContextDependency","AMDRequireDependenciesBlock","UnsupportedDependency","LocalModuleDependency","ContextDependencyHelpers","LocalModulesHelpers","ConstDependency","getFunctionExpression","UnsupportedFeatureWarning","AMDRequireDependenciesBlockParserPlugin","constructor","options","processFunctionArgument","parser","expression","bindThis","fnData","inScope","fn","params","filter","i","includes","name","body","type","walkStatement","walkExpression","walkExpressions","expressions","needThis","apply","hooks","call","for","tap","processCallRequire","bind","processArray","expr","param","isArray","p","items","result","processItem","undefined","processContext","isConstArray","deps","request","array","dep","localModule","getLocalModule","state","loc","current","addDependency","newRequireItemDependency","optional","scope","inTry","push","newRequireArrayDependency","range","isConditional","isString","string","module","buildInfo","moduleArgument","exportsArgument","create","processArrayForRequestString","map","item","processItemForRequestString","every","Boolean","join","old","arguments","length","evaluateExpression","newRequireDependenciesBlock","addBlock","errors","start","line","functionBindThis","errorCallbackBindThis","arrayRange","functionRange","errorCallbackRange","depsArray","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst getFunctionExpression = require(\"./getFunctionExpression\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nclass AMDRequireDependenciesBlockParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tprocessFunctionArgument(parser, expression) {\n\t\tlet bindThis = true;\n\t\tconst fnData = getFunctionExpression(expression);\n\t\tif (fnData) {\n\t\t\tparser.inScope(\n\t\t\t\tfnData.fn.params.filter(i => {\n\t\t\t\t\treturn ![\"require\", \"module\", \"exports\"].includes(i.name);\n\t\t\t\t}),\n\t\t\t\t() => {\n\t\t\t\t\tif (fnData.fn.body.type === \"BlockStatement\") {\n\t\t\t\t\t\tparser.walkStatement(fnData.fn.body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.walkExpression(fnData.fn.body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tparser.walkExpressions(fnData.expressions);\n\t\t\tif (fnData.needThis === false) {\n\t\t\t\tbindThis = false;\n\t\t\t}\n\t\t} else {\n\t\t\tparser.walkExpression(expression);\n\t\t}\n\t\treturn bindThis;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require\")\n\t\t\t.tap(\n\t\t\t\t\"AMDRequireDependenciesBlockParserPlugin\",\n\t\t\t\tthis.processCallRequire.bind(this, parser)\n\t\t\t);\n\t}\n\n\tprocessArray(parser, expr, param) {\n\t\tif (param.isArray()) {\n\t\t\tfor (const p of param.items) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isConstArray()) {\n\t\t\tconst deps = [];\n\t\t\tfor (const request of param.array) {\n\t\t\t\tlet dep, localModule;\n\t\t\t\tif (request === \"require\") {\n\t\t\t\t\tdep = \"__webpack_require__\";\n\t\t\t\t} else if ([\"exports\", \"module\"].includes(request)) {\n\t\t\t\t\tdep = request;\n\t\t\t\t} else if (\n\t\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\t\tparser.state,\n\t\t\t\t\t\trequest\n\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t\tdep = new LocalModuleDependency(localModule, undefined, false);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else {\n\t\t\t\t\tdep = this.newRequireItemDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t}\n\t\t\t\tdeps.push(dep);\n\t\t\t}\n\t\t\tconst dep = this.newRequireArrayDependency(deps, param.range);\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessItem(parser, expr, param) {\n\t\tif (param.isConditional()) {\n\t\t\tfor (const p of param.options) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isString()) {\n\t\t\tlet dep, localModule;\n\t\t\tif (param.string === \"require\") {\n\t\t\t\tdep = new ConstDependency(\"__webpack_require__\", param.string);\n\t\t\t} else if (param.string === \"module\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.moduleArgument,\n\t\t\t\t\tparam.range\n\t\t\t\t);\n\t\t\t} else if (param.string === \"exports\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.exportsArgument,\n\t\t\t\t\tparam.range\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\tparser.state,\n\t\t\t\t\tparam.string\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\tdep = new LocalModuleDependency(localModule, param.range, false);\n\t\t\t} else {\n\t\t\t\tdep = this.newRequireItemDependency(param.string, param.range);\n\t\t\t}\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessContext(parser, expr, param) {\n\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\tAMDRequireContextDependency,\n\t\t\tparam.range,\n\t\t\tparam,\n\t\t\texpr,\n\t\t\tthis.options,\n\t\t\t{},\n\t\t\tparser\n\t\t);\n\t\tif (!dep) return;\n\t\tdep.loc = expr.loc;\n\t\tdep.optional = !!parser.scope.inTry;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t}\n\n\tprocessArrayForRequestString(param) {\n\t\tif (param.isArray()) {\n\t\t\tconst result = param.items.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\" \");\n\t\t} else if (param.isConstArray()) {\n\t\t\treturn param.array.join(\" \");\n\t\t}\n\t}\n\n\tprocessItemForRequestString(param) {\n\t\tif (param.isConditional()) {\n\t\t\tconst result = param.options.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\"|\");\n\t\t} else if (param.isString()) {\n\t\t\treturn param.string;\n\t\t}\n\t}\n\n\tprocessCallRequire(parser, expr) {\n\t\tlet param;\n\t\tlet dep;\n\t\tlet result;\n\n\t\tconst old = parser.state.current;\n\n\t\tif (expr.arguments.length >= 1) {\n\t\t\tparam = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tdep = this.newRequireDependenciesBlock(\n\t\t\t\texpr,\n\t\t\t\tparam.range,\n\t\t\t\texpr.arguments.length > 1 ? expr.arguments[1].range : null,\n\t\t\t\texpr.arguments.length > 2 ? expr.arguments[2].range : null,\n\t\t\t\tparser.state.module,\n\t\t\t\texpr.loc,\n\t\t\t\tthis.processArrayForRequestString(param)\n\t\t\t);\n\t\t\tparser.state.current = dep;\n\t\t}\n\n\t\tif (expr.arguments.length === 1) {\n\t\t\tparser.inScope([], () => {\n\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t});\n\t\t\tparser.state.current = old;\n\t\t\tif (!result) return;\n\t\t\tparser.state.current.addBlock(dep);\n\t\t\treturn true;\n\t\t}\n\n\t\tif (expr.arguments.length === 2 || expr.arguments.length === 3) {\n\t\t\ttry {\n\t\t\t\tparser.inScope([], () => {\n\t\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t\t});\n\t\t\t\tif (!result) {\n\t\t\t\t\tdep = new UnsupportedDependency(\"unsupported\", expr.range);\n\t\t\t\t\told.addDependency(dep);\n\t\t\t\t\tif (parser.state.module) {\n\t\t\t\t\t\tparser.state.module.errors.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\"Cannot statically analyse 'require(…, …)' in line \" +\n\t\t\t\t\t\t\t\t\texpr.loc.start.line,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tdep = null;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tdep.functionBindThis = this.processFunctionArgument(\n\t\t\t\t\tparser,\n\t\t\t\t\texpr.arguments[1]\n\t\t\t\t);\n\t\t\t\tif (expr.arguments.length === 3) {\n\t\t\t\t\tdep.errorCallbackBindThis = this.processFunctionArgument(\n\t\t\t\t\t\tparser,\n\t\t\t\t\t\texpr.arguments[2]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tparser.state.current = old;\n\t\t\t\tif (dep) parser.state.current.addBlock(dep);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tnewRequireDependenciesBlock(\n\t\texpr,\n\t\tarrayRange,\n\t\tfunctionRange,\n\t\terrorCallbackRange,\n\t\tmodule,\n\t\tloc,\n\t\trequest\n\t) {\n\t\treturn new AMDRequireDependenciesBlock(\n\t\t\texpr,\n\t\t\tarrayRange,\n\t\t\tfunctionRange,\n\t\t\terrorCallbackRange,\n\t\t\tmodule,\n\t\t\tloc,\n\t\t\trequest\n\t\t);\n\t}\n\tnewRequireItemDependency(request, range) {\n\t\treturn new AMDRequireItemDependency(request, range);\n\t}\n\tnewRequireArrayDependency(depsArray, range) {\n\t\treturn new AMDRequireArrayDependency(depsArray, range);\n\t}\n}\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;\n"]},"metadata":{},"sourceType":"script"}