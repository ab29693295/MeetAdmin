{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar Source = require(\"./Source\");\n\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar REPLACE_REGEX = /\\n(?=.|\\s)/g;\n\nfunction cloneAndPrefix(node, prefix, append) {\n  if (typeof node === \"string\") {\n    var result = node.replace(REPLACE_REGEX, \"\\n\" + prefix);\n    if (append.length > 0) result = append.pop() + result;\n    if (/\\n$/.test(node)) append.push(prefix);\n    return result;\n  } else {\n    var newNode = new SourceNode(node.line, node.column, node.source, node.children.map(function (node) {\n      return cloneAndPrefix(node, prefix, append);\n    }), node.name);\n    newNode.sourceContents = node.sourceContents;\n    return newNode;\n  }\n}\n\n;\n\nclass PrefixSource extends Source {\n  constructor(prefix, source) {\n    super();\n    this._source = source;\n    this._prefix = prefix;\n  }\n\n  source() {\n    var node = typeof this._source === \"string\" ? this._source : this._source.source();\n    var prefix = this._prefix;\n    return prefix + node.replace(REPLACE_REGEX, \"\\n\" + prefix);\n  }\n\n  node(options) {\n    var node = this._source.node(options);\n\n    var prefix = this._prefix;\n    var output = [];\n    var result = new SourceNode();\n    node.walkSourceContents(function (source, content) {\n      result.setSourceContent(source, content);\n    });\n    var needPrefix = true;\n    node.walk(function (chunk, mapping) {\n      var parts = chunk.split(/(\\n)/);\n\n      for (var i = 0; i < parts.length; i += 2) {\n        var nl = i + 1 < parts.length;\n        var part = parts[i] + (nl ? \"\\n\" : \"\");\n\n        if (part) {\n          if (needPrefix) {\n            output.push(prefix);\n          }\n\n          output.push(new SourceNode(mapping.line, mapping.column, mapping.source, part, mapping.name));\n          needPrefix = nl;\n        }\n      }\n    });\n    result.add(output);\n    return result;\n  }\n\n  listMap(options) {\n    var prefix = this._prefix;\n\n    var map = this._source.listMap(options);\n\n    return map.mapGeneratedCode(function (code) {\n      return prefix + code.replace(REPLACE_REGEX, \"\\n\" + prefix);\n    });\n  }\n\n  updateHash(hash) {\n    if (typeof this._source === \"string\") hash.update(this._source);else this._source.updateHash(hash);\n    if (typeof this._prefix === \"string\") hash.update(this._prefix);else this._prefix.updateHash(hash);\n  }\n\n}\n\nrequire(\"./SourceAndMapMixin\")(PrefixSource.prototype);\n\nmodule.exports = PrefixSource;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack-sources/lib/PrefixSource.js"],"names":["Source","require","SourceNode","REPLACE_REGEX","cloneAndPrefix","node","prefix","append","result","replace","length","pop","test","push","newNode","line","column","source","children","map","name","sourceContents","PrefixSource","constructor","_source","_prefix","options","output","walkSourceContents","content","setSourceContent","needPrefix","walk","chunk","mapping","parts","split","i","nl","part","add","listMap","mapGeneratedCode","code","updateHash","hash","update","prototype","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar Source = require(\"./Source\");\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar REPLACE_REGEX = /\\n(?=.|\\s)/g;\n\nfunction cloneAndPrefix(node, prefix, append) {\n\tif(typeof node === \"string\") {\n\t\tvar result = node.replace(REPLACE_REGEX, \"\\n\" + prefix);\n\t\tif(append.length > 0) result = append.pop() + result;\n\t\tif(/\\n$/.test(node)) append.push(prefix);\n\t\treturn result;\n\t} else {\n\t\tvar newNode = new SourceNode(\n\t\t\tnode.line,\n\t\t\tnode.column,\n\t\t\tnode.source,\n\t\t\tnode.children.map(function(node) {\n\t\t\t\treturn cloneAndPrefix(node, prefix, append);\n\t\t\t}),\n\t\t\tnode.name\n\t\t);\n\t\tnewNode.sourceContents = node.sourceContents;\n\t\treturn newNode;\n\t}\n};\n\nclass PrefixSource extends Source {\n\tconstructor(prefix, source) {\n\t\tsuper();\n\t\tthis._source = source;\n\t\tthis._prefix = prefix;\n\t}\n\n\tsource() {\n\t\tvar node = typeof this._source === \"string\" ? this._source : this._source.source();\n\t\tvar prefix = this._prefix;\n\t\treturn prefix + node.replace(REPLACE_REGEX, \"\\n\" + prefix);\n\t}\n\n\tnode(options) {\n\t\tvar node = this._source.node(options);\n\t\tvar prefix = this._prefix;\n\t\tvar output = [];\n\t\tvar result = new SourceNode();\n\t\tnode.walkSourceContents(function(source, content) {\n\t\t\tresult.setSourceContent(source, content);\n\t\t});\n\t\tvar needPrefix = true;\n\t\tnode.walk(function(chunk, mapping) {\n\t\t\tvar parts = chunk.split(/(\\n)/);\n\t\t\tfor(var i = 0; i < parts.length; i += 2) {\n\t\t\t\tvar nl = i + 1 < parts.length;\n\t\t\t\tvar part = parts[i] + (nl ? \"\\n\" : \"\");\n\t\t\t\tif(part) {\n\t\t\t\t\tif(needPrefix) {\n\t\t\t\t\t\toutput.push(prefix);\n\t\t\t\t\t}\n\t\t\t\t\toutput.push(new SourceNode(mapping.line, mapping.column, mapping.source, part, mapping.name));\n\t\t\t\t\tneedPrefix = nl;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tresult.add(output);\n\t\treturn result;\n\t}\n\n\tlistMap(options) {\n\t\tvar prefix = this._prefix;\n\t\tvar map = this._source.listMap(options);\n\t\treturn map.mapGeneratedCode(function(code) {\n\t\t\treturn prefix + code.replace(REPLACE_REGEX, \"\\n\" + prefix);\n\t\t});\n\t}\n\n\tupdateHash(hash) {\n\t\tif(typeof this._source === \"string\")\n\t\t\thash.update(this._source);\n\t\telse\n\t\t\tthis._source.updateHash(hash);\n\t\tif(typeof this._prefix === \"string\")\n\t\t\thash.update(this._prefix);\n\t\telse\n\t\t\tthis._prefix.updateHash(hash);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(PrefixSource.prototype);\n\nmodule.exports = PrefixSource;\n"]},"metadata":{},"sourceType":"script"}