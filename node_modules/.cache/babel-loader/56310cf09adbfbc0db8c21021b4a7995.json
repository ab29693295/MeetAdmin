{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass FlagAllModulesAsUsedPlugin {\n  constructor(explanation) {\n    this.explanation = explanation;\n  }\n  /**\n   * @param {Compiler} compiler webpack compiler\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"FlagAllModulesAsUsedPlugin\", compilation => {\n      compilation.hooks.optimizeDependencies.tap(\"FlagAllModulesAsUsedPlugin\", modules => {\n        for (const module of modules) {\n          module.used = true;\n          module.usedExports = true;\n          module.addReason(null, null, this.explanation);\n        }\n      });\n    });\n  }\n\n}\n\nmodule.exports = FlagAllModulesAsUsedPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/FlagAllModulesAsUsedPlugin.js"],"names":["FlagAllModulesAsUsedPlugin","constructor","explanation","apply","compiler","hooks","compilation","tap","optimizeDependencies","modules","module","used","usedExports","addReason","exports"],"mappings":"AAAA;;;;AAKA;AAEA;;AAEA,MAAMA,0BAAN,CAAiC;AAChCC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACxB,SAAKA,WAAL,GAAmBA,WAAnB;AACA;AAED;;;;;;AAIAC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,4BADD,EAECD,WAAW,IAAI;AACdA,MAAAA,WAAW,CAACD,KAAZ,CAAkBG,oBAAlB,CAAuCD,GAAvC,CACC,4BADD,EAECE,OAAO,IAAI;AACV,aAAK,MAAMC,MAAX,IAAqBD,OAArB,EAA8B;AAC7BC,UAAAA,MAAM,CAACC,IAAP,GAAc,IAAd;AACAD,UAAAA,MAAM,CAACE,WAAP,GAAqB,IAArB;AACAF,UAAAA,MAAM,CAACG,SAAP,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,KAAKX,WAAlC;AACA;AACD,OARF;AAUA,KAbF;AAeA;;AAzB+B;;AA4BjCQ,MAAM,CAACI,OAAP,GAAiBd,0BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass FlagAllModulesAsUsedPlugin {\n\tconstructor(explanation) {\n\t\tthis.explanation = explanation;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler webpack compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"FlagAllModulesAsUsedPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeDependencies.tap(\n\t\t\t\t\t\"FlagAllModulesAsUsedPlugin\",\n\t\t\t\t\tmodules => {\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\tmodule.used = true;\n\t\t\t\t\t\t\tmodule.usedExports = true;\n\t\t\t\t\t\t\tmodule.addReason(null, null, this.explanation);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = FlagAllModulesAsUsedPlugin;\n"]},"metadata":{},"sourceType":"script"}