{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\n\nconst Template = require(\"./Template\");\n\nclass FunctionModuleTemplatePlugin {\n  apply(moduleTemplate) {\n    moduleTemplate.hooks.render.tap(\"FunctionModuleTemplatePlugin\", (moduleSource, module) => {\n      const source = new ConcatSource();\n      const args = [module.moduleArgument]; // TODO remove HACK checking type for javascript\n\n      if (module.type && module.type.startsWith(\"javascript\")) {\n        args.push(module.exportsArgument);\n\n        if (module.hasDependencies(d => d.requireWebpackRequire !== false)) {\n          args.push(\"__webpack_require__\");\n        }\n      } else if (module.type && module.type.startsWith(\"json\")) {// no additional arguments needed\n      } else {\n        args.push(module.exportsArgument, \"__webpack_require__\");\n      }\n\n      source.add(\"/***/ (function(\" + args.join(\", \") + \") {\\n\\n\");\n      if (module.buildInfo.strict) source.add('\"use strict\";\\n');\n      source.add(moduleSource);\n      source.add(\"\\n\\n/***/ })\");\n      return source;\n    });\n    moduleTemplate.hooks.package.tap(\"FunctionModuleTemplatePlugin\", (moduleSource, module) => {\n      if (moduleTemplate.runtimeTemplate.outputOptions.pathinfo) {\n        const source = new ConcatSource();\n        const req = module.readableIdentifier(moduleTemplate.runtimeTemplate.requestShortener);\n        const reqStr = req.replace(/\\*\\//g, \"*_/\");\n        const reqStrStar = \"*\".repeat(reqStr.length);\n        source.add(\"/*!****\" + reqStrStar + \"****!*\\\\\\n\");\n        source.add(\"  !*** \" + reqStr + \" ***!\\n\");\n        source.add(\"  \\\\****\" + reqStrStar + \"****/\\n\");\n\n        if (Array.isArray(module.buildMeta.providedExports) && module.buildMeta.providedExports.length === 0) {\n          source.add(Template.toComment(\"no exports provided\") + \"\\n\");\n        } else if (Array.isArray(module.buildMeta.providedExports)) {\n          source.add(Template.toComment(\"exports provided: \" + module.buildMeta.providedExports.join(\", \")) + \"\\n\");\n        } else if (module.buildMeta.providedExports) {\n          source.add(Template.toComment(\"no static exports found\") + \"\\n\");\n        }\n\n        if (Array.isArray(module.usedExports) && module.usedExports.length === 0) {\n          source.add(Template.toComment(\"no exports used\") + \"\\n\");\n        } else if (Array.isArray(module.usedExports)) {\n          source.add(Template.toComment(\"exports used: \" + module.usedExports.join(\", \")) + \"\\n\");\n        } else if (module.usedExports) {\n          source.add(Template.toComment(\"all exports used\") + \"\\n\");\n        }\n\n        if (module.optimizationBailout) {\n          for (const text of module.optimizationBailout) {\n            let code;\n\n            if (typeof text === \"function\") {\n              code = text(moduleTemplate.runtimeTemplate.requestShortener);\n            } else {\n              code = text;\n            }\n\n            source.add(Template.toComment(`${code}`) + \"\\n\");\n          }\n        }\n\n        source.add(moduleSource);\n        return source;\n      }\n\n      return moduleSource;\n    });\n    moduleTemplate.hooks.hash.tap(\"FunctionModuleTemplatePlugin\", hash => {\n      hash.update(\"FunctionModuleTemplatePlugin\");\n      hash.update(\"2\");\n    });\n  }\n\n}\n\nmodule.exports = FunctionModuleTemplatePlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/FunctionModuleTemplatePlugin.js"],"names":["ConcatSource","require","Template","FunctionModuleTemplatePlugin","apply","moduleTemplate","hooks","render","tap","moduleSource","module","source","args","moduleArgument","type","startsWith","push","exportsArgument","hasDependencies","d","requireWebpackRequire","add","join","buildInfo","strict","package","runtimeTemplate","outputOptions","pathinfo","req","readableIdentifier","requestShortener","reqStr","replace","reqStrStar","repeat","length","Array","isArray","buildMeta","providedExports","toComment","usedExports","optimizationBailout","text","code","hash","update","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\n\nclass FunctionModuleTemplatePlugin {\n\tapply(moduleTemplate) {\n\t\tmoduleTemplate.hooks.render.tap(\n\t\t\t\"FunctionModuleTemplatePlugin\",\n\t\t\t(moduleSource, module) => {\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tconst args = [module.moduleArgument];\n\t\t\t\t// TODO remove HACK checking type for javascript\n\t\t\t\tif (module.type && module.type.startsWith(\"javascript\")) {\n\t\t\t\t\targs.push(module.exportsArgument);\n\t\t\t\t\tif (module.hasDependencies(d => d.requireWebpackRequire !== false)) {\n\t\t\t\t\t\targs.push(\"__webpack_require__\");\n\t\t\t\t\t}\n\t\t\t\t} else if (module.type && module.type.startsWith(\"json\")) {\n\t\t\t\t\t// no additional arguments needed\n\t\t\t\t} else {\n\t\t\t\t\targs.push(module.exportsArgument, \"__webpack_require__\");\n\t\t\t\t}\n\t\t\t\tsource.add(\"/***/ (function(\" + args.join(\", \") + \") {\\n\\n\");\n\t\t\t\tif (module.buildInfo.strict) source.add('\"use strict\";\\n');\n\t\t\t\tsource.add(moduleSource);\n\t\t\t\tsource.add(\"\\n\\n/***/ })\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\n\t\tmoduleTemplate.hooks.package.tap(\n\t\t\t\"FunctionModuleTemplatePlugin\",\n\t\t\t(moduleSource, module) => {\n\t\t\t\tif (moduleTemplate.runtimeTemplate.outputOptions.pathinfo) {\n\t\t\t\t\tconst source = new ConcatSource();\n\t\t\t\t\tconst req = module.readableIdentifier(\n\t\t\t\t\t\tmoduleTemplate.runtimeTemplate.requestShortener\n\t\t\t\t\t);\n\t\t\t\t\tconst reqStr = req.replace(/\\*\\//g, \"*_/\");\n\t\t\t\t\tconst reqStrStar = \"*\".repeat(reqStr.length);\n\t\t\t\t\tsource.add(\"/*!****\" + reqStrStar + \"****!*\\\\\\n\");\n\t\t\t\t\tsource.add(\"  !*** \" + reqStr + \" ***!\\n\");\n\t\t\t\t\tsource.add(\"  \\\\****\" + reqStrStar + \"****/\\n\");\n\t\t\t\t\tif (\n\t\t\t\t\t\tArray.isArray(module.buildMeta.providedExports) &&\n\t\t\t\t\t\tmodule.buildMeta.providedExports.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tsource.add(Template.toComment(\"no exports provided\") + \"\\n\");\n\t\t\t\t\t} else if (Array.isArray(module.buildMeta.providedExports)) {\n\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\tTemplate.toComment(\n\t\t\t\t\t\t\t\t\"exports provided: \" +\n\t\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports.join(\", \")\n\t\t\t\t\t\t\t) + \"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (module.buildMeta.providedExports) {\n\t\t\t\t\t\tsource.add(Template.toComment(\"no static exports found\") + \"\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tArray.isArray(module.usedExports) &&\n\t\t\t\t\t\tmodule.usedExports.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tsource.add(Template.toComment(\"no exports used\") + \"\\n\");\n\t\t\t\t\t} else if (Array.isArray(module.usedExports)) {\n\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\tTemplate.toComment(\n\t\t\t\t\t\t\t\t\"exports used: \" + module.usedExports.join(\", \")\n\t\t\t\t\t\t\t) + \"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (module.usedExports) {\n\t\t\t\t\t\tsource.add(Template.toComment(\"all exports used\") + \"\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tif (module.optimizationBailout) {\n\t\t\t\t\t\tfor (const text of module.optimizationBailout) {\n\t\t\t\t\t\t\tlet code;\n\t\t\t\t\t\t\tif (typeof text === \"function\") {\n\t\t\t\t\t\t\t\tcode = text(moduleTemplate.runtimeTemplate.requestShortener);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcode = text;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsource.add(Template.toComment(`${code}`) + \"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsource.add(moduleSource);\n\t\t\t\t\treturn source;\n\t\t\t\t}\n\t\t\t\treturn moduleSource;\n\t\t\t}\n\t\t);\n\n\t\tmoduleTemplate.hooks.hash.tap(\"FunctionModuleTemplatePlugin\", hash => {\n\t\t\thash.update(\"FunctionModuleTemplatePlugin\");\n\t\t\thash.update(\"2\");\n\t\t});\n\t}\n}\nmodule.exports = FunctionModuleTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}