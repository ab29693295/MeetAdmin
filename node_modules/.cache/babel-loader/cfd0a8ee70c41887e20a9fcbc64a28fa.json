{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class FileKindPlugin {\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"FileKindPlugin\", (request, resolveContext, callback) => {\n      if (request.directory) return callback();\n      const obj = Object.assign({}, request);\n      delete obj.directory;\n      resolver.doResolve(target, obj, null, resolveContext, callback);\n    });\n  }\n\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/enhanced-resolve/lib/FileKindPlugin.js"],"names":["module","exports","FileKindPlugin","constructor","source","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","directory","obj","Object","assign","doResolve"],"mappings":"AAAA;;;;AAIA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,cAAN,CAAqB;AACrCC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,UAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;AACAE,IAAAA,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAEW,gBAFX,EAE6B,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;AAClE,UAAIF,OAAO,CAACG,SAAZ,EAAuB,OAAOD,QAAQ,EAAf;AACvB,YAAME,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,OAAlB,CAAZ;AACA,aAAOI,GAAG,CAACD,SAAX;AACAP,MAAAA,QAAQ,CAACW,SAAT,CAAmBb,MAAnB,EAA2BU,GAA3B,EAAgC,IAAhC,EAAsCH,cAAtC,EAAsDC,QAAtD;AACA,KAPF;AAQA;;AAhBoC,CAAtC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class FileKindPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"FileKindPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (request.directory) return callback();\n\t\t\t\tconst obj = Object.assign({}, request);\n\t\t\t\tdelete obj.directory;\n\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}