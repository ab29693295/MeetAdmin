{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ParserHelpers = require(\"../ParserHelpers\");\n\nconst WebpackError = require(\"../WebpackError\");\n\nclass SystemPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"SystemPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.system !== undefined && !parserOptions.system) return;\n        const shouldWarn = parserOptions.system === undefined;\n\n        const setNotSupported = name => {\n          parser.hooks.evaluateTypeof.for(name).tap(\"SystemPlugin\", ParserHelpers.evaluateToString(\"undefined\"));\n          parser.hooks.expression.for(name).tap(\"SystemPlugin\", ParserHelpers.expressionIsUnsupported(parser, name + \" is not supported by webpack.\"));\n        };\n\n        parser.hooks.typeof.for(\"System.import\").tap(\"SystemPlugin\", ParserHelpers.toConstantDependency(parser, JSON.stringify(\"function\")));\n        parser.hooks.evaluateTypeof.for(\"System.import\").tap(\"SystemPlugin\", ParserHelpers.evaluateToString(\"function\"));\n        parser.hooks.typeof.for(\"System\").tap(\"SystemPlugin\", ParserHelpers.toConstantDependency(parser, JSON.stringify(\"object\")));\n        parser.hooks.evaluateTypeof.for(\"System\").tap(\"SystemPlugin\", ParserHelpers.evaluateToString(\"object\"));\n        setNotSupported(\"System.set\");\n        setNotSupported(\"System.get\");\n        setNotSupported(\"System.register\");\n        parser.hooks.expression.for(\"System\").tap(\"SystemPlugin\", () => {\n          const systemPolyfillRequire = ParserHelpers.requireFileAsExpression(parser.state.module.context, require.resolve(\"../../buildin/system\"));\n          return ParserHelpers.addParsedVariableToModule(parser, \"System\", systemPolyfillRequire);\n        });\n        parser.hooks.call.for(\"System.import\").tap(\"SystemPlugin\", expr => {\n          if (shouldWarn) {\n            parser.state.module.warnings.push(new SystemImportDeprecationWarning(parser.state.module, expr.loc));\n          }\n\n          return parser.hooks.importCall.call(expr);\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"SystemPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"SystemPlugin\", handler);\n    });\n  }\n\n}\n\nclass SystemImportDeprecationWarning extends WebpackError {\n  constructor(module, loc) {\n    super(\"System.import() is deprecated and will be removed soon. Use import() instead.\\n\" + \"For more info visit https://webpack.js.org/guides/code-splitting/\");\n    this.name = \"SystemImportDeprecationWarning\";\n    this.module = module;\n    this.loc = loc;\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n}\n\nmodule.exports = SystemPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/dependencies/SystemPlugin.js"],"names":["ParserHelpers","require","WebpackError","SystemPlugin","constructor","options","apply","compiler","hooks","compilation","tap","normalModuleFactory","handler","parser","parserOptions","system","undefined","shouldWarn","setNotSupported","name","evaluateTypeof","for","evaluateToString","expression","expressionIsUnsupported","typeof","toConstantDependency","JSON","stringify","systemPolyfillRequire","requireFileAsExpression","state","module","context","resolve","addParsedVariableToModule","call","expr","warnings","push","SystemImportDeprecationWarning","loc","importCall","Error","captureStackTrace","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ParserHelpers = require(\"../ParserHelpers\");\nconst WebpackError = require(\"../WebpackError\");\n\nclass SystemPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"SystemPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.system !== undefined && !parserOptions.system)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst shouldWarn = parserOptions.system === undefined;\n\n\t\t\t\t\tconst setNotSupported = name => {\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(name)\n\t\t\t\t\t\t\t.tap(\"SystemPlugin\", ParserHelpers.evaluateToString(\"undefined\"));\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(name)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"SystemPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.expressionIsUnsupported(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tname + \" is not supported by webpack.\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"System.import\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"SystemPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"System.import\")\n\t\t\t\t\t\t.tap(\"SystemPlugin\", ParserHelpers.evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"System\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"SystemPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"object\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"System\")\n\t\t\t\t\t\t.tap(\"SystemPlugin\", ParserHelpers.evaluateToString(\"object\"));\n\n\t\t\t\t\tsetNotSupported(\"System.set\");\n\t\t\t\t\tsetNotSupported(\"System.get\");\n\t\t\t\t\tsetNotSupported(\"System.register\");\n\n\t\t\t\t\tparser.hooks.expression.for(\"System\").tap(\"SystemPlugin\", () => {\n\t\t\t\t\t\tconst systemPolyfillRequire = ParserHelpers.requireFileAsExpression(\n\t\t\t\t\t\t\tparser.state.module.context,\n\t\t\t\t\t\t\trequire.resolve(\"../../buildin/system\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn ParserHelpers.addParsedVariableToModule(\n\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\"System\",\n\t\t\t\t\t\t\tsystemPolyfillRequire\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\tparser.hooks.call.for(\"System.import\").tap(\"SystemPlugin\", expr => {\n\t\t\t\t\t\tif (shouldWarn) {\n\t\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\t\tnew SystemImportDeprecationWarning(\n\t\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn parser.hooks.importCall.call(expr);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"SystemPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"SystemPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nclass SystemImportDeprecationWarning extends WebpackError {\n\tconstructor(module, loc) {\n\t\tsuper(\n\t\t\t\"System.import() is deprecated and will be removed soon. Use import() instead.\\n\" +\n\t\t\t\t\"For more info visit https://webpack.js.org/guides/code-splitting/\"\n\t\t);\n\n\t\tthis.name = \"SystemImportDeprecationWarning\";\n\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = SystemPlugin;\n"]},"metadata":{},"sourceType":"script"}