{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\n\nconst index = require('./lib/entry-index');\n\nconst memo = require('./lib/memoization');\n\nconst path = require('path');\n\nconst rimraf = BB.promisify(require('rimraf'));\n\nconst rmContent = require('./lib/content/rm');\n\nmodule.exports = entry;\nmodule.exports.entry = entry;\n\nfunction entry(cache, key) {\n  memo.clearMemoized();\n  return index.delete(cache, key);\n}\n\nmodule.exports.content = content;\n\nfunction content(cache, integrity) {\n  memo.clearMemoized();\n  return rmContent(cache, integrity);\n}\n\nmodule.exports.all = all;\n\nfunction all(cache) {\n  memo.clearMemoized();\n  return rimraf(path.join(cache, '*(content-*|index-*)'));\n}","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/node_modules/cacache/rm.js"],"names":["BB","require","index","memo","path","rimraf","promisify","rmContent","module","exports","entry","cache","key","clearMemoized","delete","content","integrity","all","join"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEA,MAAMC,KAAK,GAAGD,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,mBAAD,CAApB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,MAAM,GAAGL,EAAE,CAACM,SAAH,CAAaL,OAAO,CAAC,QAAD,CAApB,CAAf;;AACA,MAAMM,SAAS,GAAGN,OAAO,CAAC,kBAAD,CAAzB;;AAEAO,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAF,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBA,KAAvB;;AACA,SAASA,KAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;AAC1BT,EAAAA,IAAI,CAACU,aAAL;AACA,SAAOX,KAAK,CAACY,MAAN,CAAaH,KAAb,EAAoBC,GAApB,CAAP;AACD;;AAEDJ,MAAM,CAACC,OAAP,CAAeM,OAAf,GAAyBA,OAAzB;;AACA,SAASA,OAAT,CAAkBJ,KAAlB,EAAyBK,SAAzB,EAAoC;AAClCb,EAAAA,IAAI,CAACU,aAAL;AACA,SAAON,SAAS,CAACI,KAAD,EAAQK,SAAR,CAAhB;AACD;;AAEDR,MAAM,CAACC,OAAP,CAAeQ,GAAf,GAAqBA,GAArB;;AACA,SAASA,GAAT,CAAcN,KAAd,EAAqB;AACnBR,EAAAA,IAAI,CAACU,aAAL;AACA,SAAOR,MAAM,CAACD,IAAI,CAACc,IAAL,CAAUP,KAAV,EAAiB,sBAAjB,CAAD,CAAb;AACD","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst index = require('./lib/entry-index')\nconst memo = require('./lib/memoization')\nconst path = require('path')\nconst rimraf = BB.promisify(require('rimraf'))\nconst rmContent = require('./lib/content/rm')\n\nmodule.exports = entry\nmodule.exports.entry = entry\nfunction entry (cache, key) {\n  memo.clearMemoized()\n  return index.delete(cache, key)\n}\n\nmodule.exports.content = content\nfunction content (cache, integrity) {\n  memo.clearMemoized()\n  return rmContent(cache, integrity)\n}\n\nmodule.exports.all = all\nfunction all (cache) {\n  memo.clearMemoized()\n  return rimraf(path.join(cache, '*(content-*|index-*)'))\n}\n"]},"metadata":{},"sourceType":"script"}