{"ast":null,"code":"'use strict';\n\nmodule.exports = function (ajv, options) {\n  if (!ajv._opts.allErrors) throw new Error('ajv-errors: Ajv option allErrors must be true');\n\n  if (!ajv._opts.jsonPointers) {\n    console.warn('ajv-errors: Ajv option jsonPointers changed to true');\n    ajv._opts.jsonPointers = true;\n  }\n\n  ajv.addKeyword('errorMessage', {\n    inline: require('./lib/dotjs/errorMessage'),\n    statements: true,\n    valid: true,\n    errors: 'full',\n    config: {\n      KEYWORD_PROPERTY_PARAMS: {\n        required: 'missingProperty',\n        dependencies: 'property'\n      },\n      options: options || {}\n    },\n    metaSchema: {\n      'type': ['string', 'object'],\n      properties: {\n        properties: {\n          $ref: '#/definitions/stringMap'\n        },\n        items: {\n          $ref: '#/definitions/stringList'\n        },\n        required: {\n          $ref: '#/definitions/stringOrMap'\n        },\n        dependencies: {\n          $ref: '#/definitions/stringOrMap'\n        }\n      },\n      additionalProperties: {\n        'type': 'string'\n      },\n      definitions: {\n        stringMap: {\n          'type': ['object'],\n          additionalProperties: {\n            'type': 'string'\n          }\n        },\n        stringOrMap: {\n          'type': ['string', 'object'],\n          additionalProperties: {\n            'type': 'string'\n          }\n        },\n        stringList: {\n          'type': ['array'],\n          items: {\n            'type': 'string'\n          }\n        }\n      }\n    }\n  });\n  return ajv;\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/ajv-errors/index.js"],"names":["module","exports","ajv","options","_opts","allErrors","Error","jsonPointers","console","warn","addKeyword","inline","require","statements","valid","errors","config","KEYWORD_PROPERTY_PARAMS","required","dependencies","metaSchema","properties","$ref","items","additionalProperties","definitions","stringMap","stringOrMap","stringList"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACvC,MAAI,CAACD,GAAG,CAACE,KAAJ,CAAUC,SAAf,EAA0B,MAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;;AAC1B,MAAI,CAACJ,GAAG,CAACE,KAAJ,CAAUG,YAAf,EAA6B;AAC3BC,IAAAA,OAAO,CAACC,IAAR,CAAa,qDAAb;AACAP,IAAAA,GAAG,CAACE,KAAJ,CAAUG,YAAV,GAAyB,IAAzB;AACD;;AAEDL,EAAAA,GAAG,CAACQ,UAAJ,CAAe,cAAf,EAA+B;AAC7BC,IAAAA,MAAM,EAAEC,OAAO,CAAC,0BAAD,CADc;AAE7BC,IAAAA,UAAU,EAAE,IAFiB;AAG7BC,IAAAA,KAAK,EAAE,IAHsB;AAI7BC,IAAAA,MAAM,EAAE,MAJqB;AAK7BC,IAAAA,MAAM,EAAE;AACNC,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,QAAQ,EAAE,iBADa;AAEvBC,QAAAA,YAAY,EAAE;AAFS,OADnB;AAKNhB,MAAAA,OAAO,EAAEA,OAAO,IAAI;AALd,KALqB;AAY7BiB,IAAAA,UAAU,EAAE;AACV,cAAQ,CAAC,QAAD,EAAW,QAAX,CADE;AAEVC,MAAAA,UAAU,EAAE;AACVA,QAAAA,UAAU,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SADF;AAEVC,QAAAA,KAAK,EAAE;AAACD,UAAAA,IAAI,EAAE;AAAP,SAFG;AAGVJ,QAAAA,QAAQ,EAAE;AAACI,UAAAA,IAAI,EAAE;AAAP,SAHA;AAIVH,QAAAA,YAAY,EAAE;AAACG,UAAAA,IAAI,EAAE;AAAP;AAJJ,OAFF;AAQVE,MAAAA,oBAAoB,EAAE;AAAC,gBAAQ;AAAT,OARZ;AASVC,MAAAA,WAAW,EAAE;AACXC,QAAAA,SAAS,EAAE;AACT,kBAAQ,CAAC,QAAD,CADC;AAETF,UAAAA,oBAAoB,EAAE;AAAC,oBAAQ;AAAT;AAFb,SADA;AAKXG,QAAAA,WAAW,EAAE;AACX,kBAAQ,CAAC,QAAD,EAAW,QAAX,CADG;AAEXH,UAAAA,oBAAoB,EAAE;AAAC,oBAAQ;AAAT;AAFX,SALF;AASXI,QAAAA,UAAU,EAAE;AACV,kBAAQ,CAAC,OAAD,CADE;AAEVL,UAAAA,KAAK,EAAE;AAAC,oBAAQ;AAAT;AAFG;AATD;AATH;AAZiB,GAA/B;AAqCA,SAAOrB,GAAP;AACD,CA7CD","sourcesContent":["'use strict';\n\nmodule.exports = function (ajv, options) {\n  if (!ajv._opts.allErrors) throw new Error('ajv-errors: Ajv option allErrors must be true');\n  if (!ajv._opts.jsonPointers) {\n    console.warn('ajv-errors: Ajv option jsonPointers changed to true');\n    ajv._opts.jsonPointers = true;\n  }\n\n  ajv.addKeyword('errorMessage', {\n    inline: require('./lib/dotjs/errorMessage'),\n    statements: true,\n    valid: true,\n    errors: 'full',\n    config: {\n      KEYWORD_PROPERTY_PARAMS: {\n        required: 'missingProperty',\n        dependencies: 'property'\n      },\n      options: options || {}\n    },\n    metaSchema: {\n      'type': ['string', 'object'],\n      properties: {\n        properties: {$ref: '#/definitions/stringMap'},\n        items: {$ref: '#/definitions/stringList'},\n        required: {$ref: '#/definitions/stringOrMap'},\n        dependencies: {$ref: '#/definitions/stringOrMap'}\n      },\n      additionalProperties: {'type': 'string'},\n      definitions: {\n        stringMap: {\n          'type': ['object'],\n          additionalProperties: {'type': 'string'}\n        },\n        stringOrMap: {\n          'type': ['string', 'object'],\n          additionalProperties: {'type': 'string'}\n        },\n        stringList: {\n          'type': ['array'],\n          items: {'type': 'string'}\n        }\n      }\n    }\n  });\n  return ajv;\n};\n"]},"metadata":{},"sourceType":"script"}