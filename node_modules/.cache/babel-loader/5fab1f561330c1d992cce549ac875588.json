{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class ResultPlugin {\n  constructor(source) {\n    this.source = source;\n  }\n\n  apply(resolver) {\n    this.source.tapAsync(\"ResultPlugin\", (request, resolverContext, callback) => {\n      const obj = Object.assign({}, request);\n      if (resolverContext.log) resolverContext.log(\"reporting result \" + obj.path);\n      resolver.hooks.result.callAsync(obj, resolverContext, err => {\n        if (err) return callback(err);\n        callback(null, obj);\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/enhanced-resolve/lib/ResultPlugin.js"],"names":["module","exports","ResultPlugin","constructor","source","apply","resolver","tapAsync","request","resolverContext","callback","obj","Object","assign","log","path","hooks","result","callAsync","err"],"mappings":"AAAA;;;;AAIA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,YAAN,CAAmB;AACnCC,EAAAA,WAAW,CAACC,MAAD,EAAS;AACnB,SAAKA,MAAL,GAAcA,MAAd;AACA;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,SAAKF,MAAL,CAAYG,QAAZ,CACC,cADD,EAEC,CAACC,OAAD,EAAUC,eAAV,EAA2BC,QAA3B,KAAwC;AACvC,YAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,OAAlB,CAAZ;AACA,UAAIC,eAAe,CAACK,GAApB,EACCL,eAAe,CAACK,GAAhB,CAAoB,sBAAsBH,GAAG,CAACI,IAA9C;AACDT,MAAAA,QAAQ,CAACU,KAAT,CAAeC,MAAf,CAAsBC,SAAtB,CAAgCP,GAAhC,EAAqCF,eAArC,EAAsDU,GAAG,IAAI;AAC5D,YAAIA,GAAJ,EAAS,OAAOT,QAAQ,CAACS,GAAD,CAAf;AACTT,QAAAA,QAAQ,CAAC,IAAD,EAAOC,GAAP,CAAR;AACA,OAHD;AAIA,KAVF;AAYA;;AAlBkC,CAApC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class ResultPlugin {\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\tapply(resolver) {\n\t\tthis.source.tapAsync(\n\t\t\t\"ResultPlugin\",\n\t\t\t(request, resolverContext, callback) => {\n\t\t\t\tconst obj = Object.assign({}, request);\n\t\t\t\tif (resolverContext.log)\n\t\t\t\t\tresolverContext.log(\"reporting result \" + obj.path);\n\t\t\t\tresolver.hooks.result.callAsync(obj, resolverContext, err => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tcallback(null, obj);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}