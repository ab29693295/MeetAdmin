{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesWaterfallHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onResult,\n    onDone\n  }) {\n    return this.callTapsSeries({\n      onError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n      onResult: (i, result, next) => {\n        let code = \"\";\n        code += `if(${result} !== undefined) {\\n`;\n        code += `${this._args[0]} = ${result};\\n`;\n        code += `}\\n`;\n        code += next();\n        return code;\n      },\n      onDone: () => onResult(this._args[0])\n    });\n  }\n\n}\n\nconst factory = new AsyncSeriesWaterfallHookCodeFactory();\n\nclass AsyncSeriesWaterfallHook extends Hook {\n  constructor(args) {\n    super(args);\n    if (args.length < 1) throw new Error(\"Waterfall hooks must have at least one argument\");\n  }\n\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nObject.defineProperties(AsyncSeriesWaterfallHook.prototype, {\n  _call: {\n    value: undefined,\n    configurable: true,\n    writable: true\n  }\n});\nmodule.exports = AsyncSeriesWaterfallHook;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/tapable/lib/AsyncSeriesWaterfallHook.js"],"names":["Hook","require","HookCodeFactory","AsyncSeriesWaterfallHookCodeFactory","content","onError","onResult","onDone","callTapsSeries","i","err","next","doneBreak","result","code","_args","factory","AsyncSeriesWaterfallHook","constructor","args","length","Error","compile","options","setup","create","Object","defineProperties","prototype","_call","value","undefined","configurable","writable","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,mCAAN,SAAkDD,eAAlD,CAAkE;AACjEE,EAAAA,OAAO,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAAD,EAAgC;AACtC,WAAO,KAAKC,cAAL,CAAoB;AAC1BH,MAAAA,OAAO,EAAE,CAACI,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf,KAA6BP,OAAO,CAACK,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CADpC;AAE1BN,MAAAA,QAAQ,EAAE,CAACG,CAAD,EAAII,MAAJ,EAAYF,IAAZ,KAAqB;AAC9B,YAAIG,IAAI,GAAG,EAAX;AACAA,QAAAA,IAAI,IAAK,MAAKD,MAAO,qBAArB;AACAC,QAAAA,IAAI,IAAK,GAAE,KAAKC,KAAL,CAAW,CAAX,CAAc,MAAKF,MAAO,KAArC;AACAC,QAAAA,IAAI,IAAK,KAAT;AACAA,QAAAA,IAAI,IAAIH,IAAI,EAAZ;AACA,eAAOG,IAAP;AACA,OATyB;AAU1BP,MAAAA,MAAM,EAAE,MAAMD,QAAQ,CAAC,KAAKS,KAAL,CAAW,CAAX,CAAD;AAVI,KAApB,CAAP;AAYA;;AAdgE;;AAiBlE,MAAMC,OAAO,GAAG,IAAIb,mCAAJ,EAAhB;;AAEA,MAAMc,wBAAN,SAAuCjB,IAAvC,CAA4C;AAC3CkB,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,UAAMA,IAAN;AACA,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EACC,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAEDC,EAAAA,OAAO,CAACC,OAAD,EAAU;AAChBP,IAAAA,OAAO,CAACQ,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,WAAOP,OAAO,CAACS,MAAR,CAAeF,OAAf,CAAP;AACA;;AAV0C;;AAa5CG,MAAM,CAACC,gBAAP,CAAwBV,wBAAwB,CAACW,SAAjD,EAA4D;AAC3DC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA,YAAY,EAAE,IAAlC;AAAwCC,IAAAA,QAAQ,EAAE;AAAlD;AADoD,CAA5D;AAIAC,MAAM,CAACC,OAAP,GAAiBlB,wBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesWaterfallHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onResult, onDone }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n\t\t\tonResult: (i, result, next) => {\n\t\t\t\tlet code = \"\";\n\t\t\t\tcode += `if(${result} !== undefined) {\\n`;\n\t\t\t\tcode += `${this._args[0]} = ${result};\\n`;\n\t\t\t\tcode += `}\\n`;\n\t\t\t\tcode += next();\n\t\t\t\treturn code;\n\t\t\t},\n\t\t\tonDone: () => onResult(this._args[0])\n\t\t});\n\t}\n}\n\nconst factory = new AsyncSeriesWaterfallHookCodeFactory();\n\nclass AsyncSeriesWaterfallHook extends Hook {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tif (args.length < 1)\n\t\t\tthrow new Error(\"Waterfall hooks must have at least one argument\");\n\t}\n\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nObject.defineProperties(AsyncSeriesWaterfallHook.prototype, {\n\t_call: { value: undefined, configurable: true, writable: true }\n});\n\nmodule.exports = AsyncSeriesWaterfallHook;\n"]},"metadata":{},"sourceType":"script"}