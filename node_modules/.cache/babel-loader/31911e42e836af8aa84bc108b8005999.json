{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SourceNode = require(\"source-map\").SourceNode;\n\nconst SourceListMap = require(\"source-list-map\").SourceListMap;\n\nconst Source = require(\"./Source\");\n\nclass ConcatSource extends Source {\n  constructor() {\n    super();\n    this.children = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var item = arguments[i];\n\n      if (item instanceof ConcatSource) {\n        var children = item.children;\n\n        for (var j = 0; j < children.length; j++) this.children.push(children[j]);\n      } else {\n        this.children.push(item);\n      }\n    }\n  }\n\n  add(item) {\n    if (item instanceof ConcatSource) {\n      var children = item.children;\n\n      for (var j = 0; j < children.length; j++) this.children.push(children[j]);\n    } else {\n      this.children.push(item);\n    }\n  }\n\n  source() {\n    let source = \"\";\n    const children = this.children;\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      source += typeof child === \"string\" ? child : child.source();\n    }\n\n    return source;\n  }\n\n  size() {\n    let size = 0;\n    const children = this.children;\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      size += typeof child === \"string\" ? child.length : child.size();\n    }\n\n    return size;\n  }\n\n  node(options) {\n    const node = new SourceNode(null, null, null, this.children.map(function (item) {\n      return typeof item === \"string\" ? item : item.node(options);\n    }));\n    return node;\n  }\n\n  listMap(options) {\n    const map = new SourceListMap();\n    var children = this.children;\n\n    for (var i = 0; i < children.length; i++) {\n      var item = children[i];\n      if (typeof item === \"string\") map.add(item);else map.add(item.listMap(options));\n    }\n\n    return map;\n  }\n\n  updateHash(hash) {\n    var children = this.children;\n\n    for (var i = 0; i < children.length; i++) {\n      var item = children[i];\n      if (typeof item === \"string\") hash.update(item);else item.updateHash(hash);\n    }\n  }\n\n}\n\nrequire(\"./SourceAndMapMixin\")(ConcatSource.prototype);\n\nmodule.exports = ConcatSource;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack-sources/lib/ConcatSource.js"],"names":["SourceNode","require","SourceListMap","Source","ConcatSource","constructor","children","i","arguments","length","item","j","push","add","source","child","size","node","options","map","listMap","updateHash","hash","update","prototype","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,UAAzC;;AACA,MAAME,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,aAAjD;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMG,YAAN,SAA2BD,MAA3B,CAAkC;AACjCE,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,QAAL,GAAgB,EAAhB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGC,SAAS,CAACC,MAA7B,EAAqCF,CAAC,EAAtC,EAA0C;AACzC,UAAIG,IAAI,GAAGF,SAAS,CAACD,CAAD,CAApB;;AACA,UAAGG,IAAI,YAAYN,YAAnB,EAAiC;AAChC,YAAIE,QAAQ,GAAGI,IAAI,CAACJ,QAApB;;AACA,aAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,QAAQ,CAACG,MAA5B,EAAoCE,CAAC,EAArC,EACC,KAAKL,QAAL,CAAcM,IAAd,CAAmBN,QAAQ,CAACK,CAAD,CAA3B;AACD,OAJD,MAIO;AACN,aAAKL,QAAL,CAAcM,IAAd,CAAmBF,IAAnB;AACA;AACD;AACD;;AAEDG,EAAAA,GAAG,CAACH,IAAD,EAAO;AACT,QAAGA,IAAI,YAAYN,YAAnB,EAAiC;AAChC,UAAIE,QAAQ,GAAGI,IAAI,CAACJ,QAApB;;AACA,WAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,QAAQ,CAACG,MAA5B,EAAoCE,CAAC,EAArC,EACC,KAAKL,QAAL,CAAcM,IAAd,CAAmBN,QAAQ,CAACK,CAAD,CAA3B;AACD,KAJD,MAIO;AACN,WAAKL,QAAL,CAAcM,IAAd,CAAmBF,IAAnB;AACA;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACR,QAAIA,MAAM,GAAG,EAAb;AACA,UAAMR,QAAQ,GAAG,KAAKA,QAAtB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACG,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACxC,YAAMQ,KAAK,GAAGT,QAAQ,CAACC,CAAD,CAAtB;AACAO,MAAAA,MAAM,IAAI,OAAOC,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACD,MAAN,EAA9C;AACA;;AACD,WAAOA,MAAP;AACA;;AAEDE,EAAAA,IAAI,GAAG;AACN,QAAIA,IAAI,GAAG,CAAX;AACA,UAAMV,QAAQ,GAAG,KAAKA,QAAtB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACG,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACxC,YAAMQ,KAAK,GAAGT,QAAQ,CAACC,CAAD,CAAtB;AACAS,MAAAA,IAAI,IAAI,OAAOD,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACN,MAAlC,GAA2CM,KAAK,CAACC,IAAN,EAAnD;AACA;;AACD,WAAOA,IAAP;AACA;;AAEDC,EAAAA,IAAI,CAACC,OAAD,EAAU;AACb,UAAMD,IAAI,GAAG,IAAIjB,UAAJ,CAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,KAAKM,QAAL,CAAca,GAAd,CAAkB,UAAST,IAAT,EAAe;AAC9E,aAAO,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACO,IAAL,CAAUC,OAAV,CAAzC;AACA,KAF6C,CAAjC,CAAb;AAGA,WAAOD,IAAP;AACA;;AAEDG,EAAAA,OAAO,CAACF,OAAD,EAAU;AAChB,UAAMC,GAAG,GAAG,IAAIjB,aAAJ,EAAZ;AACA,QAAII,QAAQ,GAAG,KAAKA,QAApB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACG,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACxC,UAAIG,IAAI,GAAGJ,QAAQ,CAACC,CAAD,CAAnB;AACA,UAAG,OAAOG,IAAP,KAAgB,QAAnB,EACCS,GAAG,CAACN,GAAJ,CAAQH,IAAR,EADD,KAGCS,GAAG,CAACN,GAAJ,CAAQH,IAAI,CAACU,OAAL,CAAaF,OAAb,CAAR;AACD;;AACD,WAAOC,GAAP;AACA;;AAEDE,EAAAA,UAAU,CAACC,IAAD,EAAO;AAChB,QAAIhB,QAAQ,GAAG,KAAKA,QAApB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACG,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACxC,UAAIG,IAAI,GAAGJ,QAAQ,CAACC,CAAD,CAAnB;AACA,UAAG,OAAOG,IAAP,KAAgB,QAAnB,EACCY,IAAI,CAACC,MAAL,CAAYb,IAAZ,EADD,KAGCA,IAAI,CAACW,UAAL,CAAgBC,IAAhB;AACD;AACD;;AA3EgC;;AA8ElCrB,OAAO,CAAC,qBAAD,CAAP,CAA+BG,YAAY,CAACoB,SAA5C;;AAEAC,MAAM,CAACC,OAAP,GAAiBtB,YAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SourceNode = require(\"source-map\").SourceNode;\nconst SourceListMap = require(\"source-list-map\").SourceListMap;\nconst Source = require(\"./Source\");\n\nclass ConcatSource extends Source {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.children = [];\n\t\tfor(var i = 0; i < arguments.length; i++) {\n\t\t\tvar item = arguments[i];\n\t\t\tif(item instanceof ConcatSource) {\n\t\t\t\tvar children = item.children;\n\t\t\t\tfor(var j = 0; j < children.length; j++)\n\t\t\t\t\tthis.children.push(children[j]);\n\t\t\t} else {\n\t\t\t\tthis.children.push(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(item) {\n\t\tif(item instanceof ConcatSource) {\n\t\t\tvar children = item.children;\n\t\t\tfor(var j = 0; j < children.length; j++)\n\t\t\t\tthis.children.push(children[j]);\n\t\t} else {\n\t\t\tthis.children.push(item);\n\t\t}\n\t}\n\n\tsource() {\n\t\tlet source = \"\";\n\t\tconst children = this.children;\n\t\tfor(let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tsource += typeof child === \"string\" ? child : child.source();\n\t\t}\n\t\treturn source;\n\t}\n\n\tsize() {\n\t\tlet size = 0;\n\t\tconst children = this.children;\n\t\tfor(let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tsize += typeof child === \"string\" ? child.length : child.size();\n\t\t}\n\t\treturn size;\n\t}\n\n\tnode(options) {\n\t\tconst node = new SourceNode(null, null, null, this.children.map(function(item) {\n\t\t\treturn typeof item === \"string\" ? item : item.node(options);\n\t\t}));\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\tconst map = new SourceListMap();\n\t\tvar children = this.children;\n\t\tfor(var i = 0; i < children.length; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif(typeof item === \"string\")\n\t\t\t\tmap.add(item);\n\t\t\telse\n\t\t\t\tmap.add(item.listMap(options));\n\t\t}\n\t\treturn map;\n\t}\n\n\tupdateHash(hash) {\n\t\tvar children = this.children;\n\t\tfor(var i = 0; i < children.length; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif(typeof item === \"string\")\n\t\t\t\thash.update(item);\n\t\t\telse\n\t\t\t\titem.updateHash(hash);\n\t\t}\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(ConcatSource.prototype);\n\nmodule.exports = ConcatSource;\n"]},"metadata":{},"sourceType":"script"}