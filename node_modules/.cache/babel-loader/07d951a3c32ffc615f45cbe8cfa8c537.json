{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\n\nclass CachePlugin {\n  constructor(cache) {\n    this.cache = cache || {};\n    this.FS_ACCURACY = 2000;\n  }\n\n  apply(compiler) {\n    if (Array.isArray(compiler.compilers)) {\n      compiler.compilers.forEach((c, idx) => {\n        new CachePlugin(this.cache[idx] = this.cache[idx] || {}).apply(c);\n      });\n    } else {\n      const registerCacheToCompiler = (compiler, cache) => {\n        compiler.hooks.thisCompilation.tap(\"CachePlugin\", compilation => {\n          compilation.cache = cache;\n          compilation.hooks.childCompiler.tap(\"CachePlugin\", (childCompiler, compilerName, compilerIndex) => {\n            let childCache;\n\n            if (!cache.children) {\n              cache.children = {};\n            }\n\n            if (!cache.children[compilerName]) {\n              cache.children[compilerName] = [];\n            }\n\n            if (cache.children[compilerName][compilerIndex]) {\n              childCache = cache.children[compilerName][compilerIndex];\n            } else {\n              cache.children[compilerName].push(childCache = {});\n            }\n\n            registerCacheToCompiler(childCompiler, childCache);\n          });\n        });\n      };\n\n      registerCacheToCompiler(compiler, this.cache);\n      compiler.hooks.watchRun.tap(\"CachePlugin\", () => {\n        this.watching = true;\n      });\n      compiler.hooks.run.tapAsync(\"CachePlugin\", (compiler, callback) => {\n        if (!compiler._lastCompilationFileDependencies) {\n          return callback();\n        }\n\n        const fs = compiler.inputFileSystem;\n        const fileTs = compiler.fileTimestamps = new Map();\n        asyncLib.forEach(compiler._lastCompilationFileDependencies, (file, callback) => {\n          fs.stat(file, (err, stat) => {\n            if (err) {\n              if (err.code === \"ENOENT\") return callback();\n              return callback(err);\n            }\n\n            if (stat.mtime) this.applyMtime(+stat.mtime);\n            fileTs.set(file, +stat.mtime || Infinity);\n            callback();\n          });\n        }, err => {\n          if (err) return callback(err);\n\n          for (const [file, ts] of fileTs) {\n            fileTs.set(file, ts + this.FS_ACCURACY);\n          }\n\n          callback();\n        });\n      });\n      compiler.hooks.afterCompile.tap(\"CachePlugin\", compilation => {\n        compilation.compiler._lastCompilationFileDependencies = compilation.fileDependencies;\n        compilation.compiler._lastCompilationContextDependencies = compilation.contextDependencies;\n      });\n    }\n  }\n  /* istanbul ignore next */\n\n\n  applyMtime(mtime) {\n    if (this.FS_ACCURACY > 1 && mtime % 2 !== 0) this.FS_ACCURACY = 1;else if (this.FS_ACCURACY > 10 && mtime % 20 !== 0) this.FS_ACCURACY = 10;else if (this.FS_ACCURACY > 100 && mtime % 200 !== 0) this.FS_ACCURACY = 100;else if (this.FS_ACCURACY > 1000 && mtime % 2000 !== 0) this.FS_ACCURACY = 1000;\n  }\n\n}\n\nmodule.exports = CachePlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/CachePlugin.js"],"names":["asyncLib","require","CachePlugin","constructor","cache","FS_ACCURACY","apply","compiler","Array","isArray","compilers","forEach","c","idx","registerCacheToCompiler","hooks","thisCompilation","tap","compilation","childCompiler","compilerName","compilerIndex","childCache","children","push","watchRun","watching","run","tapAsync","callback","_lastCompilationFileDependencies","fs","inputFileSystem","fileTs","fileTimestamps","Map","file","stat","err","code","mtime","applyMtime","set","Infinity","ts","afterCompile","fileDependencies","_lastCompilationContextDependencies","contextDependencies","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\n\nclass CachePlugin {\n\tconstructor(cache) {\n\t\tthis.cache = cache || {};\n\t\tthis.FS_ACCURACY = 2000;\n\t}\n\n\tapply(compiler) {\n\t\tif (Array.isArray(compiler.compilers)) {\n\t\t\tcompiler.compilers.forEach((c, idx) => {\n\t\t\t\tnew CachePlugin((this.cache[idx] = this.cache[idx] || {})).apply(c);\n\t\t\t});\n\t\t} else {\n\t\t\tconst registerCacheToCompiler = (compiler, cache) => {\n\t\t\t\tcompiler.hooks.thisCompilation.tap(\"CachePlugin\", compilation => {\n\t\t\t\t\tcompilation.cache = cache;\n\t\t\t\t\tcompilation.hooks.childCompiler.tap(\n\t\t\t\t\t\t\"CachePlugin\",\n\t\t\t\t\t\t(childCompiler, compilerName, compilerIndex) => {\n\t\t\t\t\t\t\tlet childCache;\n\t\t\t\t\t\t\tif (!cache.children) {\n\t\t\t\t\t\t\t\tcache.children = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!cache.children[compilerName]) {\n\t\t\t\t\t\t\t\tcache.children[compilerName] = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (cache.children[compilerName][compilerIndex]) {\n\t\t\t\t\t\t\t\tchildCache = cache.children[compilerName][compilerIndex];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcache.children[compilerName].push((childCache = {}));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tregisterCacheToCompiler(childCompiler, childCache);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t};\n\t\t\tregisterCacheToCompiler(compiler, this.cache);\n\t\t\tcompiler.hooks.watchRun.tap(\"CachePlugin\", () => {\n\t\t\t\tthis.watching = true;\n\t\t\t});\n\t\t\tcompiler.hooks.run.tapAsync(\"CachePlugin\", (compiler, callback) => {\n\t\t\t\tif (!compiler._lastCompilationFileDependencies) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tconst fs = compiler.inputFileSystem;\n\t\t\t\tconst fileTs = (compiler.fileTimestamps = new Map());\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tcompiler._lastCompilationFileDependencies,\n\t\t\t\t\t(file, callback) => {\n\t\t\t\t\t\tfs.stat(file, (err, stat) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tif (err.code === \"ENOENT\") return callback();\n\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stat.mtime) this.applyMtime(+stat.mtime);\n\n\t\t\t\t\t\t\tfileTs.set(file, +stat.mtime || Infinity);\n\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\tfor (const [file, ts] of fileTs) {\n\t\t\t\t\t\t\tfileTs.set(file, ts + this.FS_ACCURACY);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\tcompiler.hooks.afterCompile.tap(\"CachePlugin\", compilation => {\n\t\t\t\tcompilation.compiler._lastCompilationFileDependencies =\n\t\t\t\t\tcompilation.fileDependencies;\n\t\t\t\tcompilation.compiler._lastCompilationContextDependencies =\n\t\t\t\t\tcompilation.contextDependencies;\n\t\t\t});\n\t\t}\n\t}\n\n\t/* istanbul ignore next */\n\tapplyMtime(mtime) {\n\t\tif (this.FS_ACCURACY > 1 && mtime % 2 !== 0) this.FS_ACCURACY = 1;\n\t\telse if (this.FS_ACCURACY > 10 && mtime % 20 !== 0) this.FS_ACCURACY = 10;\n\t\telse if (this.FS_ACCURACY > 100 && mtime % 200 !== 0)\n\t\t\tthis.FS_ACCURACY = 100;\n\t\telse if (this.FS_ACCURACY > 1000 && mtime % 2000 !== 0)\n\t\t\tthis.FS_ACCURACY = 1000;\n\t}\n}\nmodule.exports = CachePlugin;\n"]},"metadata":{},"sourceType":"script"}