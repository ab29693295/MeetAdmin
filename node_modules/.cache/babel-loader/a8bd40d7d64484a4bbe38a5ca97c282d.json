{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst JsonParser = require(\"./JsonParser\");\n\nconst JsonGenerator = require(\"./JsonGenerator\");\n\nclass JsonModulesPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"JsonModulesPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      normalModuleFactory.hooks.createParser.for(\"json\").tap(\"JsonModulesPlugin\", () => {\n        return new JsonParser();\n      });\n      normalModuleFactory.hooks.createGenerator.for(\"json\").tap(\"JsonModulesPlugin\", () => {\n        return new JsonGenerator();\n      });\n    });\n  }\n\n}\n\nmodule.exports = JsonModulesPlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/JsonModulesPlugin.js"],"names":["JsonParser","require","JsonGenerator","JsonModulesPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","createParser","for","createGenerator","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AAEA,MAAME,iBAAN,CAAwB;AACvBC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,mBADD,EAEC,CAACD,WAAD,EAAc;AAAEE,MAAAA;AAAF,KAAd,KAA0C;AACzCA,MAAAA,mBAAmB,CAACH,KAApB,CAA0BI,YAA1B,CACEC,GADF,CACM,MADN,EAEEH,GAFF,CAEM,mBAFN,EAE2B,MAAM;AAC/B,eAAO,IAAIR,UAAJ,EAAP;AACA,OAJF;AAKAS,MAAAA,mBAAmB,CAACH,KAApB,CAA0BM,eAA1B,CACED,GADF,CACM,MADN,EAEEH,GAFF,CAEM,mBAFN,EAE2B,MAAM;AAC/B,eAAO,IAAIN,aAAJ,EAAP;AACA,OAJF;AAKA,KAbF;AAeA;;AAjBsB;;AAoBxBW,MAAM,CAACC,OAAP,GAAiBX,iBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst JsonParser = require(\"./JsonParser\");\nconst JsonGenerator = require(\"./JsonGenerator\");\n\nclass JsonModulesPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JsonModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JsonParser();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JsonGenerator();\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = JsonModulesPlugin;\n"]},"metadata":{},"sourceType":"script"}