{"ast":null,"code":"/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nconst LogType = Object.freeze({\n  error:\n  /** @type {\"error\"} */\n  \"error\",\n  // message, c style arguments\n  warn:\n  /** @type {\"warn\"} */\n  \"warn\",\n  // message, c style arguments\n  info:\n  /** @type {\"info\"} */\n  \"info\",\n  // message, c style arguments\n  log:\n  /** @type {\"log\"} */\n  \"log\",\n  // message, c style arguments\n  debug:\n  /** @type {\"debug\"} */\n  \"debug\",\n  // message, c style arguments\n  trace:\n  /** @type {\"trace\"} */\n  \"trace\",\n  // no arguments\n  group:\n  /** @type {\"group\"} */\n  \"group\",\n  // [label]\n  groupCollapsed:\n  /** @type {\"groupCollapsed\"} */\n  \"groupCollapsed\",\n  // [label]\n  groupEnd:\n  /** @type {\"groupEnd\"} */\n  \"groupEnd\",\n  // [label]\n  profile:\n  /** @type {\"profile\"} */\n  \"profile\",\n  // [profileName]\n  profileEnd:\n  /** @type {\"profileEnd\"} */\n  \"profileEnd\",\n  // [profileName]\n  time:\n  /** @type {\"time\"} */\n  \"time\",\n  // name, time as [seconds, nanoseconds]\n  clear:\n  /** @type {\"clear\"} */\n  \"clear\",\n  // no arguments\n  status:\n  /** @type {\"status\"} */\n  \"status\" // message, arguments\n\n});\nexports.LogType = LogType;\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\n\nclass WebpackLogger {\n  /**\n   * @param {function(LogTypeEnum, any[]=): void} log log function\n   */\n  constructor(log) {\n    this[LOG_SYMBOL] = log;\n  }\n\n  error(...args) {\n    this[LOG_SYMBOL](LogType.error, args);\n  }\n\n  warn(...args) {\n    this[LOG_SYMBOL](LogType.warn, args);\n  }\n\n  info(...args) {\n    this[LOG_SYMBOL](LogType.info, args);\n  }\n\n  log(...args) {\n    this[LOG_SYMBOL](LogType.log, args);\n  }\n\n  debug(...args) {\n    this[LOG_SYMBOL](LogType.debug, args);\n  }\n\n  assert(assertion, ...args) {\n    if (!assertion) {\n      this[LOG_SYMBOL](LogType.error, args);\n    }\n  }\n\n  trace() {\n    this[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n  }\n\n  clear() {\n    this[LOG_SYMBOL](LogType.clear);\n  }\n\n  status(...args) {\n    this[LOG_SYMBOL](LogType.status, args);\n  }\n\n  group(...args) {\n    this[LOG_SYMBOL](LogType.group, args);\n  }\n\n  groupCollapsed(...args) {\n    this[LOG_SYMBOL](LogType.groupCollapsed, args);\n  }\n\n  groupEnd(...args) {\n    this[LOG_SYMBOL](LogType.groupEnd, args);\n  }\n\n  profile(label) {\n    this[LOG_SYMBOL](LogType.profile, [label]);\n  }\n\n  profileEnd(label) {\n    this[LOG_SYMBOL](LogType.profileEnd, [label]);\n  }\n\n  time(label) {\n    this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n    this[TIMERS_SYMBOL].set(label, process.hrtime());\n  }\n\n  timeLog(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n    }\n\n    const time = process.hrtime(prev);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n\n  timeEnd(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n    }\n\n    const time = process.hrtime(prev);\n    this[TIMERS_SYMBOL].delete(label);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n\n}\n\nexports.Logger = WebpackLogger;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/logging/Logger.js"],"names":["LogType","Object","freeze","error","warn","info","log","debug","trace","group","groupCollapsed","groupEnd","profile","profileEnd","time","clear","status","exports","LOG_SYMBOL","Symbol","TIMERS_SYMBOL","WebpackLogger","constructor","args","assert","assertion","label","Map","set","process","hrtime","timeLog","prev","get","Error","timeEnd","delete","Logger"],"mappings":"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","sourcesContent":["/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\nconst LogType = Object.freeze({\n\terror: /** @type {\"error\"} */ (\"error\"), // message, c style arguments\n\twarn: /** @type {\"warn\"} */ (\"warn\"), // message, c style arguments\n\tinfo: /** @type {\"info\"} */ (\"info\"), // message, c style arguments\n\tlog: /** @type {\"log\"} */ (\"log\"), // message, c style arguments\n\tdebug: /** @type {\"debug\"} */ (\"debug\"), // message, c style arguments\n\n\ttrace: /** @type {\"trace\"} */ (\"trace\"), // no arguments\n\n\tgroup: /** @type {\"group\"} */ (\"group\"), // [label]\n\tgroupCollapsed: /** @type {\"groupCollapsed\"} */ (\"groupCollapsed\"), // [label]\n\tgroupEnd: /** @type {\"groupEnd\"} */ (\"groupEnd\"), // [label]\n\n\tprofile: /** @type {\"profile\"} */ (\"profile\"), // [profileName]\n\tprofileEnd: /** @type {\"profileEnd\"} */ (\"profileEnd\"), // [profileName]\n\n\ttime: /** @type {\"time\"} */ (\"time\"), // name, time as [seconds, nanoseconds]\n\n\tclear: /** @type {\"clear\"} */ (\"clear\"), // no arguments\n\tstatus: /** @type {\"status\"} */ (\"status\") // message, arguments\n});\n\nexports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\n\nclass WebpackLogger {\n\t/**\n\t * @param {function(LogTypeEnum, any[]=): void} log log function\n\t */\n\tconstructor(log) {\n\t\tthis[LOG_SYMBOL] = log;\n\t}\n\n\terror(...args) {\n\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t}\n\n\twarn(...args) {\n\t\tthis[LOG_SYMBOL](LogType.warn, args);\n\t}\n\n\tinfo(...args) {\n\t\tthis[LOG_SYMBOL](LogType.info, args);\n\t}\n\n\tlog(...args) {\n\t\tthis[LOG_SYMBOL](LogType.log, args);\n\t}\n\n\tdebug(...args) {\n\t\tthis[LOG_SYMBOL](LogType.debug, args);\n\t}\n\n\tassert(assertion, ...args) {\n\t\tif (!assertion) {\n\t\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t\t}\n\t}\n\n\ttrace() {\n\t\tthis[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n\t}\n\n\tclear() {\n\t\tthis[LOG_SYMBOL](LogType.clear);\n\t}\n\n\tstatus(...args) {\n\t\tthis[LOG_SYMBOL](LogType.status, args);\n\t}\n\n\tgroup(...args) {\n\t\tthis[LOG_SYMBOL](LogType.group, args);\n\t}\n\n\tgroupCollapsed(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupCollapsed, args);\n\t}\n\n\tgroupEnd(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupEnd, args);\n\t}\n\n\tprofile(label) {\n\t\tthis[LOG_SYMBOL](LogType.profile, [label]);\n\t}\n\n\tprofileEnd(label) {\n\t\tthis[LOG_SYMBOL](LogType.profileEnd, [label]);\n\t}\n\n\ttime(label) {\n\t\tthis[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n\t\tthis[TIMERS_SYMBOL].set(label, process.hrtime());\n\t}\n\n\ttimeLog(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n\n\ttimeEnd(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[TIMERS_SYMBOL].delete(label);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n}\n\nexports.Logger = WebpackLogger;\n"]},"metadata":{},"sourceType":"script"}