{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\n\n\nconst accessorToObjectAccess = accessor => {\n  return accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\nclass ExportPropertyMainTemplatePlugin {\n  /**\n   * @param {string|string[]} property the name of the property to export\n   */\n  constructor(property) {\n    this.property = property;\n  }\n  /**\n   * @param {Compilation} compilation the compilation instance\n   * @returns {void}\n   */\n\n\n  apply(compilation) {\n    const {\n      mainTemplate,\n      chunkTemplate\n    } = compilation;\n\n    const onRenderWithEntry = (source, chunk, hash) => {\n      const postfix = `${accessorToObjectAccess([].concat(this.property))}`;\n      return new ConcatSource(source, postfix);\n    };\n\n    for (const template of [mainTemplate, chunkTemplate]) {\n      template.hooks.renderWithEntry.tap(\"ExportPropertyMainTemplatePlugin\", onRenderWithEntry);\n    }\n\n    mainTemplate.hooks.hash.tap(\"ExportPropertyMainTemplatePlugin\", hash => {\n      hash.update(\"export property\");\n      hash.update(`${this.property}`);\n    });\n  }\n\n}\n\nmodule.exports = ExportPropertyMainTemplatePlugin;","map":{"version":3,"sources":["E:/Users/cnki/source/repos/ab29693295/MeetAdmin/node_modules/webpack/lib/ExportPropertyMainTemplatePlugin.js"],"names":["ConcatSource","require","accessorToObjectAccess","accessor","map","a","JSON","stringify","join","ExportPropertyMainTemplatePlugin","constructor","property","apply","compilation","mainTemplate","chunkTemplate","onRenderWithEntry","source","chunk","hash","postfix","concat","template","hooks","renderWithEntry","tap","update","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,iBAAD,CAAhC;AAEA;;AAEA;;;;;;AAIA,MAAMC,sBAAsB,GAAGC,QAAQ,IAAI;AAC1C,SAAOA,QAAQ,CAACC,GAAT,CAAaC,CAAC,IAAK,IAAGC,IAAI,CAACC,SAAL,CAAeF,CAAf,CAAkB,GAAxC,EAA4CG,IAA5C,CAAiD,EAAjD,CAAP;AACA,CAFD;;AAIA,MAAMC,gCAAN,CAAuC;AACtC;;;AAGAC,EAAAA,WAAW,CAACC,QAAD,EAAW;AACrB,SAAKA,QAAL,GAAgBA,QAAhB;AACA;AAED;;;;;;AAIAC,EAAAA,KAAK,CAACC,WAAD,EAAc;AAClB,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAkCF,WAAxC;;AAEA,UAAMG,iBAAiB,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,IAAhB,KAAyB;AAClD,YAAMC,OAAO,GAAI,GAAElB,sBAAsB,CAAC,GAAGmB,MAAH,CAAU,KAAKV,QAAf,CAAD,CAA2B,EAApE;AACA,aAAO,IAAIX,YAAJ,CAAiBiB,MAAjB,EAAyBG,OAAzB,CAAP;AACA,KAHD;;AAKA,SAAK,MAAME,QAAX,IAAuB,CAACR,YAAD,EAAeC,aAAf,CAAvB,EAAsD;AACrDO,MAAAA,QAAQ,CAACC,KAAT,CAAeC,eAAf,CAA+BC,GAA/B,CACC,kCADD,EAECT,iBAFD;AAIA;;AAEDF,IAAAA,YAAY,CAACS,KAAb,CAAmBJ,IAAnB,CAAwBM,GAAxB,CAA4B,kCAA5B,EAAgEN,IAAI,IAAI;AACvEA,MAAAA,IAAI,CAACO,MAAL,CAAY,iBAAZ;AACAP,MAAAA,IAAI,CAACO,MAAL,CAAa,GAAE,KAAKf,QAAS,EAA7B;AACA,KAHD;AAIA;;AA/BqC;;AAkCvCgB,MAAM,CAACC,OAAP,GAAiBnB,gCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\nclass ExportPropertyMainTemplatePlugin {\n\t/**\n\t * @param {string|string[]} property the name of the property to export\n\t */\n\tconstructor(property) {\n\t\tthis.property = property;\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation instance\n\t * @returns {void}\n\t */\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tconst postfix = `${accessorToObjectAccess([].concat(this.property))}`;\n\t\t\treturn new ConcatSource(source, postfix);\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"ExportPropertyMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.hash.tap(\"ExportPropertyMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"export property\");\n\t\t\thash.update(`${this.property}`);\n\t\t});\n\t}\n}\n\nmodule.exports = ExportPropertyMainTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}